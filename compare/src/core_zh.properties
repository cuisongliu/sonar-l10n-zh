about=关于
about_x=关于 {x}
action=动作
actions=动作
active=激活
activate=激活
add_verb=添加
admin=管理
after=之后
ai_code=AI 代码
ai_code_assurance=AI 代码保障
apply=应用
all=所有
and=并
anonymous=匿名
any=任何
ascending=正序
assignee=分配人
author=作者
billion=十亿
bitbucket=Bitbucket
back=返回
backup=备份
backup_verb=备份
best=最好
beta=公测
blocker=阻断
bold=粗体
branch=分支
branch.small=分支
breadcrumbs=面包屑
expand_breadcrumbs=展开面包屑
by_=由
calendar=日历
cancel=取消
category=目录
attribute=属性
see_changelog=查看修改日志
changelog=修改日志
change_verb=修改
check_all=全选
choose_file=选择文件
class=类
classes=类
clean_as_you_code=编码时清理
clear_file=干净代码
close=关闭
closed=已关闭
code=代码
color=颜色
collapse=折叠
collapse_all=全部折叠
compare=比较
complete=完成
component=组件
contains_ai_code=包含 AI 代码
configure=配置
confirm=确认
continue=继续
copy=复制
create=创建
create_new_element=创建新元素
created=已创建
created_on=创建于
critical=严重
current=当前
current_noun=当前
customize=自定义
date=日期
days=天数
default=默认
delete=删除
delete_x=删除 {0}
deprecated=废弃
descending=倒序
description=描述
directories=目录
directory=目录
disabled_=禁用
dismiss=清除
dismiss_permanently=永久清除
display=显示
documentation=文档
done=完成
download_verb=下载
duplications=重复
end_date=结束时间
edit=编辑
enabled_=启用
error=错误
events=事件
example=示例
expand=展开
expand_all=全部展开
explore=浏览
extend=展开
false=否
favorite=关注
field_required=必填字段
fields_marked_with_x_required=所有标有 {star} 的字段都是必填的
file=文件
files=文件
filters=过滤器
follow=跟踪
format=格式化
from=从
global=全局
github=GitHub
go_back=返回
got_it=收到
help=帮助
here=此处
hide=隐藏
ide=IDE
inactive=未激活
info=信息
issue=问题
issues=问题
inheritance=集成
internal=内部
inventory=库存
key=标识
later=稍后
language=语言
last_analysis=最近分析
learn_more=了解更多
learn_more_x=了解更多: {link}
learn_more.clean_code=了解更多：编码时清理
lets_go=出发
library=库
line_number=行号
links=链接
list_of_issues=问题列表
list_of_projects=项目列表
list_of_rules=规则列表
load_more=加载更多
load_verb=加载
loading=加载中
login=登录
major=主要
manual=手工
max=最大
max_results_reached=只显示前 {0} 条结果
me=我
members=成员
menu=菜单
min=最小
minor=次要
more=更多
more_x={0} 更多
more_actions=更多动作
my_issues=更多问题
my_favorite=我的收藏
my_favorites=我的收藏
my_projects=我的项目
name=名称
navigation=导航
never=尚未
new=新建
next=下一个
next_month_x=下个月 {month}
new_name=新名称
next_=下一个
none=没有
no_file_selected=未选文件
no_tags=无标签
not_now=非实时
not_impacted=未受影响
off=关闭
on=打开
or=或
open=打开
open_in_ide=使用 IDE 打开
open_issues=打开问题
optional=可选
order=排序
owner=负责人
parameters=参数
password=密码
confirm_password=确认密码
path=路径
permalink=永久链接
plugin=插件
preview=预览
previous=上一个
previous_=上一个
previous_month_x=上个月 {month}
prioritized=优先
profile_name=配置名称
project=项目
project_x=项目：{0}
projects=项目
projects_=项目
x_projects_={0} 个项目
project_plural=项目
projects_management=项目管理
pull_request.small=合并请求
quality_profile=质量配置
raw=原代码
recent_history=最新历史
recently_browsed=最近浏览
recommended=推荐
refresh=刷新
reload=刷新
remove=删除
remove_x=删除 {0}
rename=改名
replaces=替换
required=必填
reset_verb=重置
reset_to_default=重置回默认
reset_date=重置日期
resolution=解决
resolve=解决
restart=重启
restore=恢复
result=结果
results=结果
x_results={0} 个结果
review=评审
rule=规则
rules=规则
save=保存
search_results=搜索结果
search_verb=搜索
secondary=第二
see_all=查看全部
see_x=查看 {0}
select_verb=选择
selected=选中
select_tags=添加或删除标签
set=设置
set_up=设置
setup=设置
settings=设置
severity=严重
severity_deprecated=严重 (废弃)
shared=分享
start_date=开始时间
x_show={0} 显示
x_selected=选中 {0}
x_of_y_shown=显示 {1} 中的 {0}
size=大小
skip=跳过
skip_to_content=跳至主要内容
status=状态
submit=提交
support=支持
success=成功
table=表格
tags=标签
tags_list_x=标签列表：{0}
technical_debt=技术债务
template=模板
title=标题
to=至
to_=至
total=总数
tours=旅行
treemap=树形
true=是
type=类型
unassigned=未分配
uncheck_all=取消
unit_test=单元测试
unit_tests=单元测试
unknown=未知
unresolved=未处理
updated=已更新
updated_=已更新
updated_on=更新于
updates=更新
update_verb=更新
updating=更新
unselected=取消
user=用户
value=值
variation=变动
version=版本
version_x=版本 {0}
view=视图
views=视图
violations=违规
visibility=可见
warnings=警告
with=和
worst=最坏
yes=是
no=否
valid_input=有效输入
404_not_found=404 未找到
address_mistyped_or_page_moved=可能输入了错误的地址或页面被移动了。
and_worse=以及更差
are_you_sure=是否确认？
as_explained_here=可以解释为
assigned_to=分配给
bulk_change=批量修改
bulleted_point=符号点
clear=清空
clear_x_filter=清空 {0} 条件
clear_all_filters=清空所有条件
coding_rules=代码规则
copy_permalink=复制永久链接
copy_to_clipboard=单击复制至剪切板
copied_action=复制
created_by=创建者
default_error_message=无法处理请求。请稍后重试。
default_component_error_message=无法加载组件。稍后重试。
default_save_field_error_message=无法保存。请稍后重试。
default_severity=默认严重性
edit_permissions=修改权限
show_permissions=显示权限
facet_might_have_more_results=可能还有更多结果，可以尝试其他搜索方式。
false_positive=误报
go_back_to_homepage=返回首页
last_analysis_before=最后一次分析之前
less_than_1_hour_ago=少于一小时
local=本地
logging_out=正在注销，请稍候。。。
manage=管理
managed=从 {source}
managed.github=GitHub
managed.gitlab=GitLab
managed.SCIM=IdP
management=管理
more_information=更多信息
new_violations=新问题
new_window=新窗口
no_data=无数据
no_measure_value_x={0} 无数据
results_shown_x=显示 {count} 条数据 
no_results=无结果
no_results_for_x=没有符合 "{0}" 的结果
no_results_search=无结果。尝试修改搜索条件获取结果。
no_results_search.favorites=根据收藏中的条件，找不到任何匹配的结果。
no_results_search.2=尝试修改条件获得一些结果。
no_results_search.favorites.2=是否搜索 {url} 项目？
opens_in_new_window=在新窗口打开
page_extension_failed=页面扩展失败。
page_not_found=页面不存在。
please_contact_administrator=请联系管理员。
set_as_default=设为默认
short_number_suffix.g=G
short_number_suffix.k=K
short_number_suffix.m=M
show_less=更少
show_less_filter_x=为 "{0}" 条件显示更少数据
show_x_more=显示 {x} 更多
show_more=更多
show_more_filter_x=为 "{0}" 条件显示更多数据
show_all=全部
show_them=显示
should_be_unique=应该唯一
since_x=自 {0}
since_version=自版本 {0}
since_version.short={0}
since_version_detailed=自版本 {0} ({1})
since_version_detailed.short={0} ({1})
since_previous_version=自上个版本
since_previous_version.short=\u0394 版本
since_previous_version_detailed=自上个版本 ({0})
since_previous_version_with_only_date=自上个版本 ({0})
since_previous_version_detailed.short=\u0394 版本 ({0})
this_name_is_already_taken=名称已被占用。
tooltip_is_interactive=这是一个交互元素的提示。使用TAB键在交互元素之间跳转。
unexpected_error=发生意外错误。
update_details=更新详情
update_scm=更新 SCM
work_duration.x_days={0} 天
work_duration.x_hours={0} 小时
work_duration.x_minutes={0} 分钟
work_duration.about=~ {0}
view_fix_in_ide=通过 IDE 查看修复
fix_in_ide.report_success=成功。进入 IDE 查看修复。
fix_in_ide.report_error=无法通过 IDE 打开文件。
unable_to_find_ide_with_fix.error=未找到支持显示修复建议的 IDE
January=一月
February=二月
March=三月
April=四月
May=五月
June=六月
July=七月
August=八月
September=九月
October=十月
November=十一月
December=十二月
Jan=1
Feb=2
Mar=3
Apr=4
Jun=6
Jul=7
Aug=8
Sep=9
Oct=10
Nov=11
Dec=12
Sunday=周日
Monday=周一
Tuesday=周二
Wednesday=周三
Thursday=周四
Friday=周五
Saturday=周六
Sun=日
Mon=一
Tue=二
Wed=三
Thu=四
Fri=五
Sat=六
Su=日
Mo=1
Tu=2
We=3
Th=4
Fr=5
Sa=6
clear.start=清空开始日期
clear.end=清空结束日期
alm.azure=Azure Devops 服务器
alm.azure.short=Azure DevOps
alm.bitbucket=Bitbucket 服务器
alm.bitbucket.short=Bitbucket
alm.bitbucket.long=Bitbucket 服务器
alm.bitbucketcloud=Bitbucket
alm.bitbucketcloud.short=Bitbucket
alm.bitbucketcloud.long=Bitbucket Cloud
alm.github=Github
alm.github.short=GitHub
alm.github.organization=组织
alm.gitlab=GitLab
alm.gitlab.short=GitLab
alm.configuration.selector.label=需要由 {0} 配置导入项目？
alm.configuration.selector.placeholder=选择配置
qualifier.TRK=项目
qualifier.DIR=目录
qualifier.PAC=包
qualifier.VW=视图
qualifier.SVW=子视图
qualifier.APP=应用
qualifier.FIL=文件
qualifier.CLA=文件
qualifier.UTS=单元测试文件
qualifier.configuration.TRK=项目配置
qualifier.configuration.VW=视图配置
qualifier.configuration.SVW=子视图配置
qualifier.configuration.APP=应用配置
qualifiers.TRK=项目
qualifiers.DIR=目录
qualifiers.PAC=包
qualifiers.VW=视图
qualifiers.SVW=子视图
qualifiers.APP=应用
qualifiers.FIL=文件
qualifiers.CLA=文件
qualifiers.UTS=单元测试文件
qualifiers.all.TRK=所有项目
qualifiers.all.VW=所有视图
qualifiers.all.APP=所有应用
qualifiers.new.TRK=新项目
qualifiers.new.VW=新视图
qualifiers.new.APP=新应用
qualifier.delete.TRK=删除项目
qualifier.delete.VW=删除视图
qualifier.delete.APP=删除应用
qualifiers.delete.TRK=删除项目
qualifiers.delete.VW=删除视图
qualifiers.delete.APP=删除应用
qualifier.delete_confirm.TRK=是否确认删除项目？
qualifier.delete_confirm.VW=是否确认删除视图？
qualifier.delete_confirm.APP=是否确认删除应用？
qualifiers.delete_confirm.TRK=确认删除项目吗？
qualifiers.delete_confirm.VW=确认删除视图吗？
qualifiers.delete_confirm.APP=确认删除应用吗？
qualifiers.create.TRK=创建项目
qualifiers.create.VW=创建视图
qualifiers.create.APP=创建应用
qualifiers.update.VW=更新视图
qualifiers.update.APP=更新应用
qualifier.description.VW=潜在多层级，面向管理的总览聚合。
qualifier.description.SVW=潜在多层级，面向管理的总览聚合。
qualifier.description.APP=单层级聚合，针对某个技术和类似一个项目的首页。
admin_notification.update.new_patch=你的 {productName} 实例可以更新补丁，更新可以修复最新的安全问题和补丁。
admin_notification.update.new_version=你的 {productName} 实例可以更新到新版本。升级到最新版本可以获得新功能。
admin_notification.update.current_version_inactive=当前使用的 SonarQube 生命周期已结束。请尽快更新至最新的支持版本。
admin_notification.update.new_sqcb_version=保持当前实例处于最新状态 {link}，现在已生效。
admin_notification.update.latest=最新 {productName}
admin_notification.update.new_sqs_version_when_running_sqcb.banner=SonarQube Server 发布了新版本。
admin_notification.update.new_sqs_version_when_running_sqcb.modal=SonarQube Server 发布了新版本
admin_notification.update.new_sqs_version_when_running_sqcb.upgrade=升级 SonarQube Server，获取企业功能。
project_links.homepage=首页
project_links.ci=持续集成
project_links.issue=问题
project_links.scm=源码
project_links.scm_ro=只读链接
project_links.scm_dev=开发链接
project_links.create_new_project_link=创建新项目链接
project_links.delete_project_link=删除项目链接
project_links.are_you_sure_to_delete_x_link=是否确认删除链接 "{0}"？
project_links.delete_x_link=删除链接 "{0}"
project_links.name=名称
project_links.url=网址
project_links.no_results=尚无链接。点击“创建”新增。
event.category.All=全部
event.category.VERSION=版本
event.category.QUALITY_GATE=质量门禁
event.category.QUALITY_PROFILE=质量配置
event.category.SQ_UPGRADE=SonarQube 升级
event.category.DEFINITION_CHANGE=修改定义
event.category.ISSUE_DETECTION=问题检测
event.category.OTHER=其他
event.quality_gate.still_x=依旧为 {status}
event.quality_gate.ERROR=失败
event.quality_gate.OK=通过
event.definition_change.added={project} 已添加
event.definition_change.removed={project} 已删除
event.definition_change.branch_added={project} {branch} 已添加
event.definition_change.branch_removed={project} {branch} 已删除
event.definition_change.branch_replaced={project} {oldBranch} 修改为 {newBranch}
event.failed_conditions=失败条件:
event.sqUpgrade=升级 SonarQube {sqVersion} 后的第一次分析
global_nav.account.tooltip=账号
global_nav.news.tooltip=产品新闻
layout.home=首页
layout.login=登录
layout.logout=注销
layout.measures=指标
layout.settings=配置
layout.architecture=架构
layout.security_hotspots=安全热点
layout.settings.TRK=项目配置
layout.settings.APP=应用配置
layout.settings.VW=视图配置
layout.settings.SVW=视图配置
layout.security_reports=安全报告
layout.nav.home_logo_alt=图标，首页链接
layout.nav.home_sonarqube_logo_alt=SonarQube 图标，链接至首页
layout.must_be_configured=会在项目配置并分析后生效
layout.all_project_must_be_accessible=需要访问 {0} 其中所有的项目。
sidebar.projects=项目
sidebar.project_settings=配置
sidebar.security=权限
sidebar.system=系统
sidebar.tools=工具
visibility.both=公开，私有
visibility.public=公开
visibility.public.description.TRK=公开项目。所有人都可以浏览并查看源码。
visibility.public.description.VW=公开文件夹。所有人都可以浏览。
visibility.public.description.APP=公开应用。所有人都可以浏览。
visibility.public.description.short=所有人都可以浏览并查看源码。
visibility.public.description.long=所有人都可以浏览源码，并查看分析结果。
visibility.private=私有
visibility.private.description.TRK=私有项目。只有授权用户可以浏览并查看源码。
visibility.private.description.VW=私有文件夹。只有授权用户可以浏览。
visibility.private.description.APP=私有应用。只有授权用户可以浏览。
visibility.private.description.short=只有授权用户可以浏览并查看源码。
visibility.private.description.long=只有组织成员可以浏览源码并查看分析结果。
coding_rules.page=代码规则
coding_rule.page={0} 规则: {1}
global_permissions.page=全局权限
global_permissions.page.description=在全局层次上进行授予和回收权限。这些权限包含修改质量配置，分享仪表盘，和进行全局系统管理。
roles.page=项目权限
roles.page.description2=授予和收回项目级别的权限。权限可以授予群组或单独用户。
roles.page.description_portfolio=授权和收回文件夹级别的权限。权限可以授予群组或单独用户。
roles.page.description_application=授予和回收应用级别的权限。权限可以授予群组或单独用户。
roles.page.description.github=来自GitHub的用户权限都是只读的，对于非 GitHub 用户，只能删除权限。
roles.page.description.gitlab=来自GitLab的用户权限都是只读的，对于非 GitLab 用户，只能删除权限。
roles.page.change_visibility=修改项目可见性
project_permission.managed=由 {0} 管控
project_permission.local_project_with_github_provisioning=请注意这个项目并未与 GitHub 连接。与 GitHub 绑定后可以实现权限管控。
project_permission.local_project_with_gitlab_provisioning=请注意这个项目并未与 GitLab 连接。与 GitLab 绑定后可以实现权限管控。
project_permission.remove_only_confirmation=是否确认从 {holder} 删除权限 {permission}？权限将无法恢复。
project_permission.remove_only_confirmation_title=删除权限
project_settings.page=设置
project_settings.page.description=编辑项目设置。
project_links.page=链接
project_links.page.description=编辑项目相关的一些链接。
projects_management.page.description=一次删除多个项目，或者在首次分析之前对项目进行配置。一旦配置了项目，你就可以进行所有的项目配置。
settings.page=通用设置
settings.page.description=编辑 SonarQube 实例的全局设置。
system_info.page=系统信息
project_quality_gate.page=质量门禁
project_quality_gate.page.description=选择者项目分配哪个质量门禁。
update_key.page=更新标识
update_key.page.description=编辑项目的标识。必须在使用新标识分析项目之前进行修改，否则分析会使用新标识创建另一个项目，而不会更新已有项目。
deletion.page=删除
project_deletion.page.description=从 SonarQube 数据库删除这个项目。
portfolio_deletion.page.description=删除文件夹。组件级项目和本地引用的文件夹都不会删除，组件标准文件夹会被删除。此操作无法撤销。
application_deletion.page.description=删除应用。应用项目不会删除。此操作无法撤销。
application.branches.help=在应用中非常便利的创建应用分支，实现项目分支的组合。
application.branches.link=创建分支
project_branch_pull_request.page=分支 & 拉取请求
project_branch_pull_request.lifetime_information=分支和拉取请求会在没有执行分析后的 {days} 天后删除。
project_branch_pull_request.lifetime_information.admin=可以在 {settings} 中修改此项全局配置。
project_branch_pull_request.branch.rename=重命名分支
project_branch_pull_request.branch.set_main=设为主分支
project_branch_pull_request.branch.set_x_as_main=设置 "{0}" 为主分支
project_branch_pull_request.branch.delete=删除分支
project_branch_pull_request.branch.actions_label=编辑 {0}
project_branch_pull_request.branch.delete.are_you_sure=是否确认删除分支 "{0}"？
project_branch_pull_request.branch.main_branch.are_you_sure=是否确认把 "{0}" 设置为项目的主分支？
project_branch_pull_request.branch.main_branch.requires_reindex=修改项目主分支会对项目进行重新索引，在重新索引完成之前，可能对信息级别产生影响。
project_branch_pull_request.branch.main_branch.learn_more=请参考 {documentation} 了解修改主分支的影响。
project_branch_pull_request.branch.auto_deletion.keep_when_inactive=非激活状态下也需要保留
project_branch_pull_request.branch.auto_deletion.keep_when_inactive.tooltip=启用时，非激活状态的分支也不会自动删除。
project_branch_pull_request.branch.auto_deletion.main_branch_tooltip=主分支不会自动删除。
project_branch_pull_request.pull_request.delete=删除拉取请求
project_branch_pull_request.pull_request.delete.are_you_sure=是否确认删除拉取请求 "{0}"？
project_branch_pull_request.tabs.branches=分支
project_branch_pull_request.tabs.pull_requests=拉取请求
project_branch_pull_request.table.branch=分支
project_branch_pull_request.table.pull_request=拉取请求
project_branch_pull_request.last_analysis_date=最后分析时间
project_baseline.page=新代码周期
project_baseline.page.description=管理项目的新代码周期。{link}
project_baseline.page.description2=可以对全局配置进行调整 {link}
project_baseline.page.description2.link=通用配置
project_baseline.page.question=使用什么作为此项目的新代码基线？
project_baseline.global_setting=使用全局配置
project_baseline.specific_setting=为项目设置指定配置
project_baseline.configure_branches=为分支设指定用配置
project_baseline.compliance.warning.title.project=项目的新代码定义不符合“编码时清理”方法论
baseline.specific_analysis=指定分析
baseline.specific_analysis.description=为新代码周期选择一次分析，作为基线。
baseline.specific_analysis.compliance_warning.title=通过 SonarQube UI 选择 "专用分析" 与“编码时清理”方法论不兼容
baseline.specific_analysis.compliance_warning.explanation=已废弃。可以通过 Web API 调用。
baseline.specific_analysis.compliance_warning.link=定义新代码
baseline.reference_branch=引用分支
baseline.reference_branch.description=为新代码选择引用分支
baseline.reference_branch.usecase=建议用于使用功能分支的项目。
baseline.reference_branch.description2=选择的引用分支需要定义自己的新代码定义，避免把自己当作一个引用。
baseline.last_analysis_before=上次分析之前
baseline.next_analysis_notice=修改会再下次分析之后生效
baseline.reference_branch.choose=选择分支
baseline.reference_branch.does_not_exist=SonarQube 中找不到分支 {0}。
baseline.reference_branch.cannot_be_itself=分支不能引用自己
baseline.reference_branch.invalid_branch_setting=分支 {0} 不能引用自己。使用指定配置代替项目级配置。
baseline.edit_branch_setting=编辑分支配置
branch_list.branch=分支
branch_list.current_setting=配置
branch_list.current_baseline=当前基线
branch_list.actions=动作
branch_list.show_actions_for_x=显示分支的动作 {0}
branch_list.edit_for_x=编辑 {0}
branch_list.default_setting=项目配置
baseline.new_code_period_for_branch_x=新代码周期 {0}
baseline.new_code_period_for_branch_x.question=此分支的新代码基线是什么？
regulatory_report.page=监管报告
regulatory_report.description1=监管报表会导出一个 zip 文件，包含选择分支的快照。包含：
regulatory_report.bullet_point1=项目选择的分支的概览。
regulatory_report.bullet_point2=项目量相关的配置（质量配置，质量门禁，排除的分析）。
regulatory_report.bullet_point3=选择分支的新代码和全部代码列表。
regulatory_report.description2=生成并下载报告会花费几分钟时间。
regulatory_page.download_button=下载报告
regulatory_page.download_start.sentence=稍后开始下载，可能花费一些时间。
regulatory_page.select_branch=选择分支
regulatory_page.no_available_branch=尚未分析任何分析，没有生成报告。
regulatory_page.available_branches_info.only_keep_when_inactive=只保存标记为“保存不活跃状态”的分支。
regulatory_page.available_branches_info.more_info=更多信息，请参考 {doc_link}。
regulatory_page.available_branches_info.more_info.doc_link=相关文档
page_title.template.default=%s - {productName}
page_title.template.with_category=%s - {page} - {productName}
page_title.template.with_instance={project} - %s - {productName}
overview.page=总览
code.page=代码
permissions.page=权限
quality_profiles.page=质量配置
quality_gates.page=质量门禁
issues.page=问题
issues.skip_to_filters=跳至问题搜索
issues.skip_to_list=跳至问题列表
view_projects.page=项目
portfolios.page=文件夹
portfolio_breakdown.page=文件夹崩溃页
project_activity.page=活动
process.still_working=正在处理...
process.fail=失败
sessions.log_in=登录
audit_logs.page=审计日志
audit_logs.page.description.1=审计日志可以帮助管理员对平台进行控制，保持对高风险操作的跟踪。
audit_logs.page.description.2=实例设置为对 {housekeeping} 记录审计日志。可以通过 {link} 修改天数。
audit_logs.page.description.link=管家策略
audit_logs.housekeeping_policy.Weekly=7 天
audit_logs.housekeeping_policy.Monthly=30 天
audit_logs.housekeeping_policy.Trimestrial=90 天
audit_logs.housekeeping_policy.Yearly=1 年
audit_logs.download=下载审计日志
audit_logs.download_start.try_again=重试
audit_logs.download_start.sentence.1=很快会启动下载。如果周期较长可能会耗费一段时间。
audit_logs.download_start.sentence.2=如果下载没有开始，可以尝试缩短获取审计日志的时间区间。
audit_logs.download_start.sentence.3=修改以上配置下载更多审计日志。
audit_logs.range_option.today=今天
audit_logs.range_option.7days=7 天
audit_logs.range_option.30days=30 天
audit_logs.range_option.90days=90 天
audit_logs.range_option.custom=自定义
risk_exposure.HIGH=高
risk_exposure.MEDIUM=中
risk_exposure.LOW=低
hotspots.page=安全热点
hotspots.no_hotspots.title=没有需要审查的安全热点。
hotspots.no_hotspots.description=如果下次分析代码时出现潜在安全风险，风险会显示在此处。
hotspots.no_hotspots_for_file.title=选择的文件没有热点。
hotspots.no_hotspots_for_file.description=返回选择其他文件，或点击“显示所有安全热点”。
hotspots.no_hotspots_for_filters.title=指定搜索条件下没有匹配的结果。
hotspots.no_hotspots_for_filters.description=可以修改搜索条件获取结果。
hotspots.no_hotspots_for_keys.title=请求的热点已不存在。
hotspots.no_hotspots_for_keys.description=因对应代码已修改或删除，信息已经关闭。
hotspots.learn_more=了解更多安全热点的信息
hotspots.list=安全热点列表
hotspots.list_title={0} 安全热点
hotspots.list_title.TO_REVIEW=待审查的安全热点 {0}
hotspots.list_title.ACKNOWLEDGED={0} 安全热点被审查为已确认
hotspots.list_title.FIXED={0} 安全热点被审查为已修复
hotspots.list_title.SAFE={0} 安全热点被审查为安全
hotspots.risk_exposure=审查优先级
hotspots.tabs.code=风险在哪儿？
hotspots.tabs.risk_description=有什么风险？
hotspots.tabs.vulnerability_description=对风险进行评估
hotspots.tabs.fix_recommendations=如何修复？
hotspots.tabs.activity=活动
hotspots.tabs.code.short=位置
hotspots.tabs.risk_description.short=事项
hotspots.tabs.vulnerability_description.short=地点
hotspots.tabs.fix_recommendations.short=处理
hotspots.tabs.activity.short=活动
hotspots.review_history.created=安全热点已创建
hotspots.review_history.comment_added=添加了一条评论
hotspots.comment.field=评论：
hotspots.comment.open=评论
hotspots.comment.submit=评论
hotspots.open_in_ide.success=成功。切换到 IDE 查看安全热点。
hotspots.open_in_ide.failure=无法连接到你的 IDE 以打开安全热点。请确认使用了最新版本的 SonarLint。
hotspots.assignee.select_user=选择用户...
hotspots.assignee.change_user=修改负责人
hotspots.status.cannot_change_status=修改热点的状态需要权限。
hotspots.status.review=复审
hotspots.status.review_title=复审安全热点
hotspots.status.select=选择状态
hotspots.status.add_comment=添加评论
hotspots.status.add_comment_optional=添加评论 (可选)
hotspots.status.change_status=修改状态
hotspots.status_option.TO_REVIEW=需要审查
hotspots.status_option.TO_REVIEW.description=需要审查此安全热点以评估代码是否存在风险。
hotspots.status_option.ACKNOWLEDGED=已确认
hotspots.status_option.ACKNOWLEDGED.description=代码已经过审查，确实存在风险，需要修复。
hotspots.status_option.FIXED=已修复
hotspots.status_option.FIXED.description=代码已经过审查和修改，已遵循推荐的安全编码实践。
hotspots.status_option.SAFE=安全
hotspots.status_option.SAFE.description=代码已经过审查，不构成风险。它不需要修改。
hotspots.get_permalink=永久链接
hotspots.no_associated_lines=安全热点来自以下文件：
hotspots.congratulations=祝贺你！
hotspots.find_in_status_filter_x=你可以修改状态过滤条件为 {status_label} 来再次找到此数据。
hotspots.successful_status_change_to_x=成功修改为 "{0}"
hotspots.x_done_keep_going={percentage} 的安全热点已经过审查。
hotspots.see_x_hotspots=审查 "{0}" 安全热点
hotspots.continue_to_next_hotspot=继续审查
hotspot.filters.title=条件
hotspot.filters.assignee.assigned_to_me=分配给我
hotspot.filters.assignee.all=全部
hotspot.filters.clear=清空条件
hotspot.filters.status=状态条件
hotspot.filters.status.to_review=需要审查
hotspot.filters.status.acknowledged=已确认
hotspot.filters.status.fixed=已修复
hotspot.filters.period=周期过滤器
hotspot.filters.period.since_leak_period=新代码
hotspot.filters.period.overall=全部代码
hotspot.filters.status.safe=安全
hotspot.filters.by_file_or_list_x=当前搜索中的热点结果， {show_all_link}
hotspot.filters.show_all=显示所有热点
hotspot.section.activity=近期活动：
hotspot.location.count={0} 额外位置
hotspot.location.count.plural={0} 额外位置
hotspots.reviewed.tooltip=所有未关闭安全热点中，已经过审查（已确认，已修复或安全）的评级。
hotspots.review_hotspot=审查热点
hotspots.assign.success=安全热点已经成功分配给 {0}
hotspots.assign.unassign.success=安全热点已成功释放
hotspots.update.success=安全热点状态已成功修改为 {0}
hotspots.success_dialog.do_not_show=不再显示对话框
issues.on_file_x=文件的问题 {0}
issue.add_tags=添加标签
issue.remove_tags=删除标签
issue.no_tag=无标签
issue.create_tag=新建标签
issue.create_tag_x=新建标签 '{0}'
issue.tags=标签
issue.assign.assigned_to_x_click_to_change=分配给 {0}，点击修改
issue.assign.unassigned_click_to_assign=未分配，点击分配问题
issue.assign.formlink=分配
issue.assign.to_me=分配给我
issue.quick_fix=快速修复
issue.quick_fix_available_with_sonarlint=参考 {link} 来进行快速修复
issue.quick_fix_available_with_sonarlint_no_link=使用SonarLint进行快速修复
issue.comment.add_comment=添加评论
issue.comment.add_comment.cancel=取消添加评论
issue.comment.enter_comment=输入评论
issue.comment.formlink=评论
issue.comment.formlink.total=评论
issue.comment.formlink.total.plural=评论
issue.comment.explain_why=请解释原因
issue.comment.posted_on=评论时间
issue.comment.edit=修改评论
issue.comment.edit.cancel=取消修改评论
issue.comment.delete=删除评论
issue.comment.delete_confirm_message=是否确认删除此评论？
issue.comment.empty.list=问题尚无评论。
issue.rule_details=规则详情
issue.send_notifications=发送提醒
issue.why_this_issue=为何是问题？
issue.why_this_issue.long=为何是问题？在页面底部显示规则详情。
issue.severity.updated_notification.link.standard=这个 {type} 的
issue.severity.updated_notification.link.mqr=这个问题的
issue.severity.updated_notification={issueLink, select, other { {issueLink} }} {quality, select, other { {quality} }} 严重性由 {before} 改为 {after}
issue.change_status=修改状态
issue.transition.title=修改问题状态
issue.transition.status=问题状态
issue.transition.status_deprecated=已废弃问题状态
issue.transition.status_in_sandbox=不影响质量门禁或指标，但应进行分类以避免技术债务累积的问题
issue.transition.in_sandbox_helptext=如果 "沙箱" 状态被修改，不能再次分配
issue.transition=转移
issue.transition.accept=接受
issue.transition.accept.description=现在不处理
issue.transition.confirm=确认
issue.transition.confirm.description=此问题已经审查需要进行最后的处理。
issue.transition.unconfirm=取消
issue.transition.unconfirm.description=此问题需要再次审查，以决定如何处理。
issue.transition.resolve=解决
issue.transition.resolve.description=此问题已在代码中修复，等待下次分析时关闭 - 或者如果没有修复，可以重开。
issue.transition.falsepositive=误报
issue.transition.falsepositive.description=此问题可以忽略，这属于分析引擎的问题。不会计算技术债务。
issue.transition.reopen=重开
issue.transition.reopen.description=此问题尚未解决，应该再次审查。
issue.transition.wontfix=标记为不会修复
issue.transition.wontfix.description=此问题可以忽略，因为规则与环境不匹配。不会计算技术债务。
issue.transition.openasvulnerability=设为安全漏洞
issue.transition.openasvulnerability.description=代码中存在安全漏洞，必须修复
issue.transition.resolveasreviewed=设为已审核
issue.transition.resolveasreviewed.description=代码中无安全漏洞
issue.transition.resetastoreview=重置为审核
issue.transition.resetastoreview.description=需要重新分析安全热点
issue.transition.status_change=状态变更
issue.transition.go_back_change_status=返回状态变更
issue.transition.change_status=变更状态
status_transition.status_x_click_to_change=状态：{0}，点击修改
status_transition.transition=转变
status_transition.accept=接受
status_transition.accept.to_status=已接受
status_transition.accept.description=不会立即修复，但不会再影响质量门禁
status_transition.confirm=确认
status_transition.confirm.description=确认问题有效。问题影响质量门禁
status_transition.confirm.to_status=已确认
status_transition.unconfirm=开放
status_transition.unconfirm.description=问题影响质量门禁
status_transition.unconfirm.to_status=开放
status_transition.resolve=已修复
status_transition.resolve.description=手动标记为已修复，但将在下次分析后重新打开
status_transition.resolve.to_status=已修复
status_transition.falsepositive=误报
status_transition.falsepositive.description=分析不正确
status_transition.falsepositive.to_status=误报
status_transition.reopen=开放
status_transition.reopen.description=问题影响质量门禁
status_transition.reopen.to_status=开放
status_transition.wontfix=不会修复
status_transition.wontfix.description=已废弃
status_transition.wontfix.to_status=不会修复
status_transition.comment.title=添加状态更改注释（可选）
status_transition.comment.label=为什么要将当前状态更改为 "{status}"？
status_transition.comment.placeholder=添加注释
status_transition.comment.share=与Sonar分享此评论，以帮助我们改进分析器
status_transition.change_status=修改状态
issue.sandbox.title=错误沙箱
issue.sandbox.description=不影响质量门禁或指标，但应进行分类以避免技术债务积累的问题。更改它们的状态并将它们放回工作流程。
issue.tabs.code=问题的位置
issue.location_x=位置 {0}
issue.closed.file_level=问题为 {status}。已在下列文件中被检测，并且不会被再次检测。
issue.closed.project_level=问题为 {status}。已在下列项目中被检测，并且不会被再次检测。
issues.assignee.change_user=点击修改负责人
issue.prioritized_rule.description=对应的规则被认定为质量配置中的一个优先项，这代表了所有代码中对应的问题都应该修复。
issues.action_select=选择问题
issues.action_select.label=选择问题 {0}
issue.set_severity=修改严重性
issue.set_type=修改类型
issue.type.CODE_SMELL=异味
issue.type.BUG=Bug
issue.type.VULNERABILITY=漏洞
issue.type.SECURITY_HOTSPOT=安全热点
issue.type.SECURITY_HOTSPOT.plural=安全热点
issue.type.CODE_SMELL.plural=异味
issue.type.BUG.plural=Bug
issue.type.VULNERABILITY.plural=漏洞
issue.type.tooltip={severity} 严重性
issue.type.tooltip_with_change={severity} 严重性。点击修改。
issue.type.deprecation.title=问题类型已废弃，不能再被修改。
issue.type.deprecation.filter_by=可以使用其他条件过滤问题：
issue.type.deprecation.documentation=问题
issue.type.severity.button.popover={type} 的 {severity} 严重性。点击了解更多信息。
issue.type.severity.button.change={type} 的 {severity} 严重性。点击修改严重性。
issue.severity.deprecation.title=现在严重性会直接影响软件质量。之前的严重性已废弃，不能再被修改。
issue.severity.deprecation.filter_by=可以使用其他条件过滤问题:
issue.severity.deprecation.documentation=问题
issue.severity.new=新严重性
issue.cct_attribute.label=干净代码属性
issue.software_qualities.label=软件质量影响：
issue.impact.severity.tooltip=此问题对软件在 {quality} 方面有一个 {severity} 影响
issue.clean_code_attribute_category.CONSISTENT=一致性
issue.clean_code_attribute_category.CONSISTENT.title=这是一个一致性问题。
issue.clean_code_attribute_category.CONSISTENT.advice=为保持一致性，代码应该使用统一和按照惯例的方式编写。
issue.clean_code_attribute_category.INTENTIONAL=目的性
issue.clean_code_attribute_category.INTENTIONAL.title=这是一个目的性问题。
issue.clean_code_attribute_category.INTENTIONAL.advice=为实现目的性，代码内容应该是准确和有目的的。
issue.clean_code_attribute_category.ADAPTABLE=适配性
issue.clean_code_attribute_category.ADAPTABLE.title=这是一个适配性问题。
issue.clean_code_attribute_category.ADAPTABLE.advice=为具备适配性，代码需要组织为容易扩展和开发的结构。
issue.clean_code_attribute_category.RESPONSIBLE=责任性
issue.clean_code_attribute_category.RESPONSIBLE.title=这是一个责任性问题。
issue.clean_code_attribute_category.RESPONSIBLE.advice=为实现责任性，代码需要考虑数据层面的道德义务和对社会责任的潜在影响。
issue.clean_code_attribute=整洁代码属性
issue.clean_code_attribute.CLEAR=不整洁
issue.clean_code_attribute.CLEAR.title=这是目的性问题，代码不够整洁。
issue.clean_code_attribute.CLEAR.advice=为了整洁，代码需要不言自明，可以通透表达自己的功能。
issue.clean_code_attribute.COMPLETE=不完整
issue.clean_code_attribute.COMPLETE.title=这是目的性问题，代码不够完整。
issue.clean_code_attribute.COMPLETE.advice=为了完整，代码必须是功能性的，能通过全面、充分、彻底的代码构造实现自己隐含的功能目标。
issue.clean_code_attribute.CONVENTIONAL=非常规
issue.clean_code_attribute.CONVENTIONAL.title=这是一致性问题，代码不够遵守惯例。
issue.clean_code_attribute.CONVENTIONAL.advice=为成为常规，代码需要使用期望的指令实现功能，在面临同样好的选择时保持同一种选择。
issue.clean_code_attribute.DISTINCT=不清晰
issue.clean_code_attribute.DISTINCT.title=这是适配性问题，代码不够清晰。
issue.clean_code_attribute.DISTINCT.advice=为了清晰，代码需要保持单一的过程和数据，同时避免重复。
issue.clean_code_attribute.EFFICIENT=低效
issue.clean_code_attribute.EFFICIENT.title=这是目的性问题，代码不够高效。
issue.clean_code_attribute.EFFICIENT.advice=为提升效率，代码不能浪费资源，适时考虑经济效益。
issue.clean_code_attribute.FOCUSED=不聚焦
issue.clean_code_attribute.FOCUSED.title=这是适配性问题，代码不够聚焦。
issue.clean_code_attribute.FOCUSED.advice=为了聚焦，代码需要单一，有限，特定的范围。每个单元都应该保持单一目标。
issue.clean_code_attribute.FORMATTED=未格式化
issue.clean_code_attribute.FORMATTED.title=这是一致性问题，代码没有经过足够的格式化。
issue.clean_code_attribute.FORMATTED.advice=为满足格式化要求，代码应该以系统和规范的方式进行书写，应该在所有代码库中使用的相同的非语义的方式。
issue.clean_code_attribute.IDENTIFIABLE=难以识别
issue.clean_code_attribute.IDENTIFIABLE.title=这是一致性问题，代码不容易识别。
issue.clean_code_attribute.IDENTIFIABLE.advice=为容易识别，代码应该基于自然语言规范的方式来声明名称和标识符。
issue.clean_code_attribute.LAWFUL=不合法
issue.clean_code_attribute.LAWFUL.title=这是责任性问题，代码不够合法。
issue.clean_code_attribute.LAWFUL.advice=为实现合法，代码应该尊重协议和版权法规。
issue.clean_code_attribute.LOGICAL=不合逻辑
issue.clean_code_attribute.LOGICAL.title=这是目的性问题，代码不够符合逻辑。
issue.clean_code_attribute.LOGICAL.advice=为符合逻辑，代码需要使用良好的格式和健全的指令，这些指令可以协同工作，并且没有明显的错误。
issue.clean_code_attribute.MODULAR=未模块化
issue.clean_code_attribute.MODULAR.title=这是适配性问题，代码不够模块化。
issue.clean_code_attribute.MODULAR.advice=为实现模块化，代码需要在组织和分发时，注意区分不同部分。
issue.clean_code_attribute.RESPECTFUL=未尊重
issue.clean_code_attribute.RESPECTFUL.title=这是责任性问题，代码未体现出足够的尊重态度。
issue.clean_code_attribute.RESPECTFUL.advice=未体现尊重，低吗不能使用歧视和冒犯性语言。
issue.clean_code_attribute.TESTED=未测试
issue.clean_code_attribute.TESTED.title=这是适配性问题，代码没有充分测试。
issue.clean_code_attribute.TESTED.advice=为提升测试程度，代码需要进行自动化功能测试，提升对系统功能的信心。
issue.clean_code_attribute.TRUSTWORTHY=不值得信赖
issue.clean_code_attribute.TRUSTWORTHY.title=这是责任性问题，代码不值得信赖。
issue.clean_code_attribute.TRUSTWORTHY.advice=为了可信，代码需要避免泄露或硬编码敏感信息。
clean_code_attribute.learn_more=了解更多干净代码
issue.issue_status.OPEN=打开
issue.issue_status.ACCEPTED=接受
issue.issue_status.CONFIRMED=确认
issue.issue_status.FIXED=修复
issue.issue_status.FALSE_POSITIVE=误报
issue.issue_status.IN_SANDBOX=沙箱
issue.status.ACCEPTED=接受
issue.status.REOPENED=重开
issue.status.RESOLVED=解决
issue.status.OPEN=打开
issue.status.CONFIRMED=确认
issue.status.CLOSED=关闭
issue.status.TO_REVIEW=需要审核
issue.status.IN_REVIEW=审核中
issue.status.REVIEWED=已审核
issue.scope.MAIN=主要代码
issue.scope.TEST=测试代码
issue.resolution.FALSE-POSITIVE=误报
issue.resolution.FALSE-POSITIVE.description=手工确认此问题为误报。不会计算技术债务。
issue.resolution.FIXED=解决
issue.resolution.FIXED.description=代码中已修复此问题，并已重新分析。
issue.resolution.WONTFIX=不会修复
issue.resolution.WONTFIX.description=当前环境允许此问题出现。不会计算技术债务。
issue.resolution.REMOVED=删除
issue.resolution.REMOVED.description=规则或资源已变更（删除，移动，参数变化等等），导致找不到这些问题。
issue.unresolved.description=不会显示未处理的问题。
issue.preview.jupyter_notebook.error=加载 Jupyter 笔记本报错。使用 Code 页签查看详情。
issue.action.permalink=获取永久链接
issue.line_affected=影响行
issue.introduced=介绍
issue.code_variants=代码变体
issue.rule_status=规则状态
issue.effort=影响：
issue.x_effort={0} 影响
issue.ncloc_x.short=L{0}
issue.1_code_variant=1 变体
issue.x_code_variants={0} 变体
issue.filter_similar_issues=过滤类似问题
issue.this_issue_involves_x_code_locations=此问题对应 {0} 代码位置
issue.this_flow_involves_x_code_locations=此流程对应 {0} 代码位置
issue.from_external_rule_engine=外部规则引擎检测到的问题： {0}
issue.external_issue_description=此处为外部规则 {0}。没有详情。
issues.loading_issues=加载问题
issues.return_to_list=返回列表
issues.bulk_change_X_issues=批量修改 {0} 个问题
issues.select_all_issues=选择所有问题
issues.issues=问题
issues.to_select_issues=选择问题
issues.to_navigate=浏览
issues.to_navigate_back=返回
issues.to_navigate_issue_locations=定位问题
issues.to_switch_flows=切换流程
issues.new_code=新代码
issues.new_code_period=新代码区间
issues.max_new_code_period=最大新代码区间
issues.my_issues=我的问题
issues.no_my_issues=没有分配给你的问题。
issues.no_issues=没有问题。赞。
issues.fixed_issues=修复问题
issues.fixed_issues.description=列出将在 {pullRequest} 修复的问题
issues.x_more_locations=+ {0} 更多位置
issues.not_all_issue_show=未包含所有问题
issues.not_all_issue_show_why=没有权限访问文件夹中的所有项目
issues.qg_mismatch.title=质量门禁指标无法匹配
issues.qg_mismatch.description=质量门禁包含了 {isStandardMode, select, true {Multi-Quality Rule Mode} other {Standard Expirience}} 的条件。当你的实例依然使用{isStandardMode, select, true {Standard Experience} other {Multi-Quality Rule Mode}}，一些额外的条件会在{isStandardMode, select, true {MQR} other {Standard Expirience}}中指标中看到。
issues.qg_mismatch.link=通过文档了解两种模式的更多信息
issues.open_in_ide.success=成功。切换至 IDE 查看问题。
issues.open_in_ide.failure=无法在 IDE 中打开问题。请检查 {link}。
issue.activity.review_history.created=创建了问题
issue.activity.review_history.comment_added=添加评论
issue.activity.add_comment=添加评论
issue.hint.navigate=导航位置
issues.x_execution_flows={flowsCount, plural, one {{flows} 执行流程} other {{flows} 执行流程}}
issues.execution_flow=执行流程
issues.x_data_flows={flowsCount, plural, one {{flows} 数据流} other {{flows} 数据流}}
issues.x_data_and_execution_flows={dataFlowsCount, plural, one {{dataFlows} 数据流} other {{dataFlows} 数据流}} 和 {executionFlowsCount, plural, one {{executionFlows} 执行流} other {{executionFlows} 执行流}}
issues.x_locations={locationsCount, plural, one {{locations} 位置} other {{locations} 位置}}
issues.show_x_more_locations=显示 {0} 更多位置
issue.flow.1_step=1 步骤
issue.flow.x_steps={0} 步骤
issue.unnamed_location=其他位置
issue.show_full_execution_flow=浏览完整 {0} 步骤执行流
issues.code_fix.get_fix_suggestion=生成 AI 修复
issues.code_fix.see_fix_suggestion=查看 AI 修复
issues.code_fix.let_us_suggest_fix=让我们为此问题提供一个修复建议
issues.code_fix.fix_is_being_generated=正在生成修复
issues.code_fix.something_went_wrong=出错了。
issues.code_fix.not_available=当前无法使用生成修复
issues.code_fix.reached_usage_limit=您的组织已达到AI CodeFix的每月使用限制。
issues.code_fix.not_able_to_generate_fix=我们无法为此问题生成修复。
issues.code_fix.check_how_to_fix=请稍后重试，或参考其他章节了解如何修复此问题。
issue.changelog.found_on_x_show_more=找到 {0}; 点击查看修改日志
issue.changelog.changed_to={0} 改为 {1}
issue.changelog.was=是 {0}
issue.changelog.webhook_source=（由 {0} Webhook 触发的变更）
issue.change.file_move=文件已经由 {0} 移动至 {1}
issue.change.from_branch=此问题由分支 '{branchA}' 复制到分支 '{branchB}'
issue.change.from_non_branch=此问题由分支 '{branchA}' 合并到分支 '{branchB}'
issue.changelog.removed={0} 删除
issue.changelog.line_removed_X=删除的行数 ({0})
issue.changelog.field.severity=严重性
issue.changelog.field.originalSeverity=原始严重性
issue.changelog.field.actionPlan=活动计划
issue.changelog.field.assignee=分配人
issue.changelog.field.assigneeName=负责人
issue.changelog.field.author=作者
issue.changelog.field.resolution=解决方法
issue.changelog.field.effort=工作
issue.changelog.field.status=状态
issue.changelog.field.issueStatus=状态
issue.changelog.field.tags=标签
issue.changelog.field.code_variants=代码变体
issue.changelog.field.type=类型
issue.changelog.field.file=文件
issue.changelog.field.cleanCodeAttribute=干净代码属性
issue.changelog.impactSeverity={0} 严重性修改为 {1} (前值 {2})
issues.facet.period=周期
issues.facet.types=类型
issues.facet.severities=严重程度
issues.facet.scopes=范围
issues.facet.projects=项目
issues.facet.issueStatuses=状态
issues.facet.issueStatuses.help.title=简化问题生命周期
issues.facet.issueStatuses.help.description=<p1>合并了问题修改状态和问题状态，当前问题生命周期中有六种可能的状态。</p1><p>不修复替换为接受。废弃了已确认和已修复。</p>
issues.facet.issueStatuses.help.link=了解更多新问题生命周期
issues.facet.hotspotStatuses=热点状态
issues.facet.assignees=负责人
issues.facet.files=文件
issues.facet.modules=模块
issues.facet.directories=目录
issues.facet.tags=标签
issues.facet.rules=规则
issues.facet.languages=语言
issues.facet.cleanCodeAttributeCategories=整洁代码属性
issues.facet.cleanCodeAttributeCategories.help.title=将概念类似的问题属性合并在一起。
issues.facet.cleanCodeAttributeCategories.help.link=了解更多干净代码属性
issues.facet.impactSoftwareQualities=软件质量
issues.facet.impactSoftwareQualities.help.title=什么是软件质量？
issues.facet.impactSoftwareQualities.help.description=<p1>安全为了保护软件免受未授权请求的访问，使用或破坏。</p1><p>可靠性是衡量在指定时间指定条件下维持软件执行的水平的能力。</p><p>可维护性对应修复，优化，理解软件代码的能力。</p>
issues.facet.impactSoftwareQualities.help.link=了解更多软件质量
issues.facet.codeVariants=代码变体
issues.facet.createdAt=新问题
issues.facet.createdAt.all=全部
issues.facet.createdAt.last_week=上周
issues.facet.createdAt.last_month=上个月
issues.facet.createdAt.last_year=去年
issues.facet.createdAt.bar_description={0} 问题，从 {1} 至 {2}
issues.facet.authors=作者
issues.facet.impactSeverities=严重性
issues.facet.issues=问题标识
issues.facet.mode=显示模式
issues.facet.mode.count=问题
issues.facet.mode.effort=工作
issues.facet.standards=标准
issues.facet.owaspTop10=2017 年度 OWASP 前 10 名
issues.facet.owaspTop10_2021=2021 年度 OWASP 前 10 名
issues.facet.owaspMobileTop10_2024=2024 年度 OWASP Mobile 前 10 名
issues.facet.sonarsourceSecurity=SonarSource
issues.facet.cwe=CWE
issues.facet.sonarsource.show_more=显示更多 SonarSource 分类
issues.facet.prioritized_rule.category=优先规则
issues.facet.prioritized_rule=优先规则下的问题
issues.facet.detection_cause=检测原因
issues.facet.detection_cause.help=新的 SonarQube 问题要么是由于用户操作（如代码更改或修改自定义质量配置文件），要么是由于 SonarQuble 更新（如分析器/规则改进或内置配置文件调整）。
issues.facet.detection_cause.help.aria_label=检测原因信息
issues.facet.detection_cause.sonarqube_update=SonarQube 更新
issues.facet.detection_cause.other_causes=所有其他原因
issues.facet.second_line.mode.standard=标准经验
issues.facet.second_line.mode.mqr=MQR 模式
issue_bulk_change.form.title=修改 {0} 条问题
issue_bulk_change.max_issues_reached=因为选择了太多问题，只会更新前 {0} 条。
issue_bulk_change.x_issues={0} 条问题
issue_bulk_change.no_match=没有匹配搜索条件的问题
issue_bulk_change.assignee.change=把选中问题分配给用户
issue_bulk_change.select_tags=选择标签
issue_bulk_change.selected_tags=选择标签
issue_bulk_change.resolution_comment=处理评论
dependencies.analysis.failed=依赖性分析失败
dependencies.analysis.outdated=最近的依赖关系分析尝试失败
dependencies.analysis.completed=依赖关系分析中存在错误
dependencies.analysis.callout_body=由于依赖性分析中的错误，此视图中显示的结果可能不完整。
dependencies.analysis.callout_view_errors=查看错误
dependencies.analysis.dependency_files_analyzed=<highlighted>{count}</highlighted> 依赖 {count, plural, one {文件} other {文件}} 已分析。
dependencies.list.title=<highlighted>{count}</highlighted> {count, plural, one {依赖} other {依赖}}
dependencies.list.name_search.title=<highlighted>{count}</highlighted> 匹配 {count, plural, one {依赖} other {依赖}}
dependencies.learn_more_link=继续了解依赖分析
dependencies.empty_state.title=此分支没有依赖
dependencies.empty_state.body=我们分析了 manifest/lock 文件，但是没有发现依赖。
dependencies.no_result_state.title=没有发现任何匹配选择条件的结果。
dependencies.no_result_state.body=请修改条件获取一些结果。
dependencies.risks.project.no_analysis.title=下一个项目分析将开始填充依赖性风险列表
dependencies.risks.project.no_analysis.body=有关依赖关系风险的完整列表，请确保自启用SCA功能以来，此应用程序中的每个项目都至少分析过一次。
dependencies.project.no_analysis.title=下一个项目分析将开始填充依赖关系列表
dependencies.project.no_analysis.body=要获得完整的依赖关系列表，请确保自启用SCA功能以来，此应用程序中的每个项目都至少分析过一次。
dependencies.no_analysis.learn_more_link=为SCA分析配置项目
dependencies.project.dependencies.error_loading_analysis=加载分析数据时出错：{Error}
dependencies.error_state.title=发生错误
dependencies.error_state.body.1=获取物料清单出错。
dependencies.error_state.body.2=稍后会尝试再次分析分支。
dependencies.expandable_text.link.full_text=显示更多
dependencies.expandable_text.link.less_text=显示更少
dependencies.skip_to_filters=跳过搜索页面
dependencies.filters.clear_all=重置条件
dependencies.list.new_code_show=显示
dependencies.list.export_as_sbom.dropdown.button=导出 SBOM
dependencies.list.export_as_sbom.dropdown.header.label=软件物料清单 (SBOM)
dependencies.list.export_as_sbom.dropdown.header.helptext=把依赖信息导出为供应链风险管理使用的工业标准格式。
dependencies.list.export_as_sbom.type.cyclonedx=CycloneDX
dependencies.list.export_as_sbom.type.spdx_23=SPDX v2.3
dependencies.list.export_as_sbom.format.xml=XML
dependencies.list.export_as_sbom.format.json=JSON
dependencies.risk.header.risk_severity=风险严重性
dependencies.risk.header.risk_severity.intro=严重性影响如何计算？
dependencies.risk.header.first_detected=首次检测
dependencies.risk.header.what_is_the_risk=有什么风险？
dependencies.risk.header.how_can_i_fix_it=如何修复？
dependencies.risk.header.activity=活动
dependencies.risk.what.basicInfo.published=发布时间 {date}
dependencies.risk.what.basicInfo.updated=更新时间 {date}
dependencies.risk.what.basicInfo.withdrawnAt=报告已撤回 {date}
dependencies.risk.what.basicInfo.severity=CVSS 严重性
dependencies.risk.what.basicInfo.no_severity=未得分
dependencies.risk.what.basicInfo.severity.tooltip=CVSS（通用漏洞评分系统）是一种标准化指标，用于评估软件漏洞的严重程度，评分范围为0-10。
dependencies.risk.what.basicInfo.severity.tooltip.link=了解更多 CVSS
dependencies.risk.what.basicInfo.GHSA=GHSA
dependencies.risk.what.basicInfo.chanceOfFutureExploitation=未来开发的机会
dependencies.risk.what.basicInfo.chanceOfFutureExploitation.epss=(EPSS)
dependencies.risk.what.basicInfo.chanceOfFutureExploitation.epss.probabilityRankings.highSeverity=高风险严重阈值
dependencies.risk.what.basicInfo.chanceOfFutureExploitation.epss.probabilityRankings.mediumSeverity=中风险严重阈值
dependencies.risk.what.basicInfo.chanceOfFutureExploitation.epss.probabilityRankings.medianVulnerability=中等脆弱性
dependencies.risk.what.basicInfo.chanceOfFutureExploitation.epss.probabilityRankings.thisVulnerability=此漏洞
dependencies.risk.what.basicInfo.chanceOfFutureExploitation.epss.tooltip.epss_description=EPSS（漏洞预测评分系统）v{version}估计了未来30天内软件漏洞在野外被利用的百分比可能性，从0到100%，以及该可能性与所有其他评估漏洞的百分比排名。
dependencies.risk.what.basicInfo.chanceOfFutureExploitation.epss.tooltip.risk_calculation_description=Sonar使用EPSS评分和其他因素来计算风险严重程度。对于中等严重程度的风险，EPSS必须>=0.5%，CVSS必须>=4.0，对于高严重程度的危险，EPSS须>=5%，CVSS须>=7.0。
dependencies.risk.what.basicInfo.chanceOfFutureExploitation.epss.tooltip.link=了解更多 EPSS v{version}
dependencies.risk.what.basicInfo.knownExploited=已知已被利用
dependencies.risk.what.basicInfo.knownExploited.kev=(KEV)
dependencies.risk.what.basicInfo.knownExploited.kev.tooltip=KEV（已知漏洞）是一系列已被证实在野外被积极利用的漏洞
dependencies.risk.what.basicInfo.knownExploited.kev.tooltip.link=了解更多 KEV
dependencies.risk.what.basicInfo.CVE=NIST
dependencies.risk.what.basicInfo.epss=EPSS
dependencies.risk.what.insights.insights_from_maintainer=维护者的见解
dependencies.risk.what.insights.insights_from_maintainer.body=Sonar与此依赖关系的维护者合作，维护安全的开发实践，并就发现的漏洞提供第一方见解。
dependencies.risk.what.insights.provided_by_maintainer=由{purl}的维护人员提供
dependencies.risk.what.insights.likelihood_to_be_affected=受影响的可能性
dependencies.risk.what.insights.build_tool_dev_dependency_usage=构建工具/开发依赖关系使用
dependencies.risk.what.insights.build_tool_dev_dependency_usage.vulnerable=脆弱的
dependencies.risk.what.insights.build_tool_dev_dependency_usage.not_vulnerable=不易受攻击
dependencies.risk.what.insights.workaround_available=解决方法可用
dependencies.risk.what.insights.faq.real_false_positive=这是真正的漏洞还是误报？
dependencies.risk.what.insights.faq.real_false_positive.real=这是一个可能影响用户的真正漏洞。
dependencies.risk.what.insights.faq.real_false_positive.false_positive=这是一个误报。
dependencies.risk.what.insights.faq.vulnerability_exploitable=当包用作构建工具或开发/测试依赖项时，此漏洞是否可被利用？
dependencies.risk.what.insights.faq.workaround_available=对于无法升级到受支持版本的用户，是否有解决方法？
dependencies.risk.what.insights.faq.only_if_certain_methods_in_use=此漏洞是否仅在使用某些方法、类或功能时适用？
dependencies.risk.what.insights.faq.how_likely_to_be_affected=当按预期使用此软件包的受影响版本时，用户受影响的可能性有多大？
dependencies.risk.what.insights.faq.other_conditions=用户是否应该检查其他条件以确定他们是否易受攻击？
dependencies.risks.affected_dependency.number_of_risks=风险 ({count})
dependencies.risks.affected_dependency.view_all_risks=查看此依赖关系的所有{count}风险
dependencies.risk.what.license.category_prohibited={license}被视为{profile}许可配置文件禁止的{category}许可。
dependencies.risk.what.license.license_prohibited={profile}许可证配置文件禁止{license}。
dependencies.risk.what.license.more=了解更多 copyleft 许可证
dependencies.risk.comment.explain_why=解释你的决定
dependencies.bill_of_materials=物料清单
dependencies.labels.severity_dependency_license.description=Sonar将所有违反许可证的行为标记为高度严重。您组织的实际风险可能因您的策略以及此应用程序的分发和部署方式而异。
dependencies.properties.import_type=类型
dependencies.properties.import_type.direct=直接
dependencies.properties.import_type.transitive=传递的
dependencies.properties.scope=范围
dependencies.properties.scope.development=开发
dependencies.properties.scope.production=生产
dependencies.properties.status=状态
dependencies.properties.license=许可证
dependencies.properties.license.label.nonstandard=这是SPDX不跟踪的非标准许可证。
dependencies.properties.license.label.nonstandard_link=了解有关SPDX许可证的更多信息
dependencies.properties.license.label.none=此软件没有声明的许可证，应被视为“保留所有权利”。
dependencies.properties.newly_introduced=仅限新依赖项
dependencies.properties.newly_introduced.inverse=所有依赖关系
dependencies.properties.newly_introduced.title=风险在
dependencies.properties.risks=风险
dependencies.properties.identified_using=使用标识
dependencies.properties.identified_using.plural={file} 和 {count} {count, plural, one {其他} other {其他}}
dependencies.properties.identified_using.tooltip=查看用于标识此依赖关系的文件
dependencies.properties.identified_using.description=此依赖关系是使用以下文件中的引用标识的：
dependencies.properties.package_manager=包管理期
dependencies.properties.project=项目
dependencies.details.not_found.title=找不到依赖
dependencies.details.not_found.body=您尝试查看的依赖关系可能已不存在，或者其标识符可能有问题。试着在物料清单中再次找到它。
dependencies.details.not_found.go_back_text=返回物料清单
dependencies.details.chain.title={dependency}是如何引入{branchLike}的？
dependencies.details.chain.transitive_label=此依赖关系由以下传递使用 {count} {count, plural, one {依赖} other {依赖}}:
dependencies.details.chain.direct_label=此包直接通过{file}使用。
dependencies.details.chain.paths_label={count} {count, plural, one {路径} other {路径}}
dependencies.details.chain_group_label=依赖组
dependencies.details.chains_none_label=错误：找不到依赖链。这是出乎意料的。请报告一个问题。
dependencies.details.chains_none_missing_lockfile_label=找不到锁文件，因此依赖关系链不可用。有关更多详细信息，请查看{link}
dependencies.details.chains_none_missing_lockfile_link=分析项目的依赖关系。
dependencies.package_managers.CARGO=Cargo
dependencies.package_managers.COCOAPODS=CocoaPods
dependencies.package_managers.COMPOSER=Packagist
dependencies.package_managers.GOLANG=Go
dependencies.package_managers.MAVEN=Maven
dependencies.package_managers.NPM=npm
dependencies.package_managers.NUGET=NuGet
dependencies.package_managers.PYPI=PyPI
dependencies.package_managers.GEM=Gem
dependencies.package_managers.UNKNOWN=未知
dependencies.risks.sort_by=排序方式
dependencies.risks.sort_by.severity=风险严重性
dependencies.risks.sort_by.cvss_score=CVSS 得分
dependencies.risks.no_dependencies_risks=无依赖风险
dependencies.risks.header.number_of_risks.risks_in={risksCount} {risksCount, plural, one {风险} other {风险}} 在
dependencies.risks.header.number_of_risks.releases_count={releasesCount} {newlyIntroduced, select, true {new } other {}}{releasesCount, plural, one {依赖} other {依赖}}
dependencies.risks.sort_by.sort_order=排序 {order}
dependencies.risks.sort_by.sort_order.asc=正序
dependencies.risks.sort_by.sort_order.desc=倒序
dependencies.risks.number_of_risks={count} {count, plural, one {依赖风险} other {依赖风险}}
dependencies.risks.number_of_severities={count} {severity}
dependencies.risks.unknown=未知依赖风险
dependencies.risks.unknown.tooltip=无法计算来自未知来源的包的依赖性风险。
dependencies.risks.unknown_package.description={name}不是上游包管理器已知的包。无法识别的包可能没有经过必要的安全检查，或者可能是恶意的。
dependencies.risks.unknown_release.description={release}不是上游包管理器已知的{name}的版本。无法识别的版本可能没有经过必要的安全检查，或者可能是恶意的。
dependencies.risks.status.accept=接受
dependencies.risks.status.accept.description=这一发现是有效的，但可能暂时无法确定。
dependencies.risks.status.confirm=确认
dependencies.risks.status.confirm.description=这一发现已经过审查，风险是有效的。
dependencies.risks.status.fixed=修复
dependencies.risks.status.fixed.description=这种以前未修复的依赖性风险不再被检测到。
dependencies.risks.status.open=打开
dependencies.risks.status.open.description=这一发现尚未得到审查。
dependencies.risks.status.safe=安全
dependencies.risks.status.safe.description=这一发现并不构成风险。不需要修复。
dependencies.risks.status.comment.placeholder.optional=分享原因（可选）
dependencies.risks.status.comment.placeholder.required=请分享（必填）
dependencies.risks.status_x_click_to_change=依赖风险状态：{status}，单击以更改
dependencies.risks.all=所有风险
dependencies.risks.type=风险类型
dependencies.risks.type.license=禁止许可证
dependencies.risks.type.license_prohibited_description=不应使用与许可证{license}的依赖关系
dependencies.risks.type.vulnerability=脆弱性
dependencies.risk=依赖性风险
dependencies.risks=依赖性风险
dependencies.risks.empty_state.title=未找到 {branchType, select, pullRequest {新 } other {}} 依赖风险
dependencies.risks.empty_state.body=这可能是因为您的项目没有{branchType、select、pullRequest{new}其他{}}依赖关系，所有依赖关系都是无风险的，或者在分析过程中发生了错误。
dependencies.risks.details.not_found.title=未发现依赖风险
dependencies.risks.details.not_found.body=您尝试查看的依赖关系风险可能不再存在，或者其标识符可能有问题。
dependencies.risks.details.not_found.go_back_text=回到所有风险
dependencies.risks.affected_dependency=受影响的依赖性
dependencies.risks.more=+{count} 更多
dependencies.risks.activity.initial_activity=首次检测到依赖风险
dependencies.risks.severity=风险严重性
dependencies.risks.severity.help.icon=有关风险严重程度的更多信息
dependencies.risks.severity.help.intro=Sonar根据风险类型评估依赖风险的严重程度。
dependencies.risks.severity.help.license.heading=禁止许可证
dependencies.risks.severity.help.license.body=所有被禁止的许可证风险都被定义为高严重性。
dependencies.risks.severity.help.vulnerability.heading=脆弱性
dependencies.risks.severity.help.vulnerability.body=根据漏洞严重性（如CVSS所定义）、已知利用（如CISA KEV所定义）和可能的未来利用（如EPSS所定义），对漏洞进行整体严重性评级。
dependencies.risks.severity.help.manual_update=此风险的严重性已手动更改为｛severity｝。要查看此风险的严重性变化历史，请查看<link>活动选项卡</link>。
dependencies.risks.severity.help.warning_title=建议进行严重性审查
dependencies.risks.severity.help.warning_msg=此风险的严重程度已手动更改为{manualSevidency}，但新数据显示，其计算的严重程度现已增加到{originalSevidence}。我们建议审查风险，以确认之前对{manualSeverity}的覆盖是否仍然合适。要查看此风险的严重性变化历史，请查看<link>活动选项卡</link>。
dependencies.risks.severity.help.warning_dismiss=标记为已审核
dependencies.risks.severity.calculated=计算字段
dependencies.risks.severity.overridden=覆盖
dependencies.risks.severity.user_override=用户覆盖
dependencies.risks.severity.picker_header=请注意：如果手动更改此风险的严重程度评级，即使我们严重程度计算中使用的数据发生变化，Sonar也不会再自动更新。
dependencies.risks.severity.quality.button.static={severity}严重性对{quality}的影响。
dependencies.risks.severity.BLOCKER.description=被利用（KEV）
dependencies.risks.severity.LOW.description=所有其他未撤回的漏洞
dependencies.risks.severity.INFO.description=确认假阳性或撤回
dependencies.risks.cvss_score=CVSS {score}
dependencies.risks.cvss_withdrawn=CVSS: N/A (已撤回)
dependencies.risks.no_cvss_score=无 CVSS 得分
dependencies.risks.cvss_title=CVSS 得分
dependencies.risks.cvss_severity_critical=关键
dependencies.risks.cvss_severity_high=高
dependencies.risks.cvss_severity_medium=中
dependencies.risks.cvss_severity_low=低
dependencies.risks.cvss_severity_none=无
dependencies.risks.epss_title=EPSS概率
dependencies.risks.epss.awaiting=等待EPSS评分
dependencies.risks.epss.awaiting_details=一旦EPSS可用（通常在CVE发布后24小时），风险严重程度可能会发生变化
dependencies.risks.quality=软件质量
dependencies.risks.quality.SECURITY=安全
dependencies.risks.quality.SECURITY.description=安全质量说明
dependencies.risks.quality.MAINTAINABILITY=可维护性
dependencies.risks.quality.MAINTAINABILITY.description=可维护性质量描述
dependencies.risks.status.help=依赖性风险可以被确认（标记为需要修复的问题）、接受（稍后修复的技术债务）或标记为安全（不是基于其他因素的风险）。
dependencies.risks.status.help.icon=有关风险状态的更多信息
dependencies.risks.status.learn_more=了解有关管理依赖风险的更多信息。
dependencies.risk.how.title=更新依赖关系
dependencies.risk.how.body=如果修复漏洞的依赖项的更新版本可用，请更新到该版本。在更新依赖关系后，始终彻底测试您的应用程序，以确保没有任何问题。
dependencies.risk.how_introduced_link=这种依赖性是如何引入的？
dependencies.risk.how.find_alternative=寻找替代方案
dependencies.risk.how.find_alternative.vulnerability_body=如果没有可用的更新，请考虑切换到提供相同功能但没有漏洞的替代依赖关系。
dependencies.risk.how.find_alternative.license_body=因为此依赖项的许可证被{profile}许可证配置文件禁止，所以您需要找到一个不同的依赖项来满足您的需求。
dependencies.risk.how.license.view_allowed=查看此项目允许的许可证
dependencies.risk.how.fix.complete=完全修复
dependencies.risk.how.fix.partial=部分修复
dependencies.risk.how.fix.none=受影响的版本
dependencies.risk.how.wait_for_fix=等待修复
dependencies.risk.how.wait_for_fix.body=您正在使用此依赖关系的最新版本，没有更新的版本可以解决此漏洞。如果您相信依赖关系得到了积极维护，并希望很快发布修复程序，那么等待更新可能是合理的。
dependencies.risk.how.fix_body.version_in_use.complete=这是您正在使用的依赖项的版本，但它不受影响。
dependencies.risk.how.fix_body.version_in_use.unknown=这是您正在使用的依赖项的版本，但我们没有关于它的数据。它可能会也可能不会受到影响。
dependencies.risk.how.fix_body.version_in_use.default=这是您正在使用的依赖关系的受影响版本。
dependencies.risk.how.fix_body.nearest_partial=这是修复此漏洞的最接近版本，但它是 {vulnerabilityIdCount} other {vulnerabilityIdCount, plural, one {脆弱性} other {脆弱性}}.
dependencies.risk.how.fix_body.nearest_complete=这是最接近的版本，没有任何已知的漏洞。
dependencies.risk.how.fix_body.latest_partial=这是修复此漏洞的最新版本，但它是 {vulnerabilityIdCount} other {vulnerabilityIdCount, plural, one {脆弱性} other {脆弱性}}.
dependencies.risk.how.fix_body.latest_complete=这是没有任何已知漏洞的最新版本。
dependencies.risk.how.fix_body.latest_stable.complete=这是最新的非预发布版本，没有任何已知漏洞。
dependencies.risk.how.fix_body.latest_stable.partial=这是修复此漏洞的最新非预发布版本，但它是 {vulnerabilityIdCount} other {vulnerabilityIdCount, plural, one {脆弱性} other {脆弱性}}.
dependencies.risk.how.fix_body.latest_stable.default=这是最新的非预发布版本，但它没有修复此漏洞 {vulnerabilityIdCount, plural, =1 {.} other {还有#其他漏洞。}}
dependencies.risk.how.fix_body.latest_prerelease.complete=这是最新的预发布版本，没有任何已知的漏洞。
dependencies.risk.how.fix_body.latest_prerelease.partial=这是修复此漏洞的最新预发布版本，但它是 {vulnerabilityIdCount} other {vulnerabilityIdCount, plural, one {脆弱性} other {脆弱性}}.
dependencies.risk.how.fix_body.latest_prerelease.default=这是最新的预发布版本，但它没有修复此漏洞 {vulnerabilityIdCount, plural, =1 {.} other { 还有#其他漏洞。}}
sca.licenses.page=许可证配置文
sca.licenses.page.intro=许可证配置文件是一组策略的集合，这些策略定义了项目使用的依赖关系允许或禁止哪些许可证。如果在分析过程中发现与禁止许可证的依赖关系，则将其确定为依赖风险。有关更多详细信息，请参阅{docsLink}的文档。
sca.licenses.page.no_profiles.title=在创建许可证配置文件之前，不会分析依赖许可证。
sca.licenses.page.no_profiles.body=为了分析项目的许可证，必须为其分配许可证配置文件。您可以手动选择要分析的项目，或为所有项目设置默认配置文件。
sca.licenses.create_profile=创建配置
sca.licenses.details_page.intro=许可证配置文件用于设置策略，定义项目使用的依赖关系允许或禁止哪些许可证。如果在分析过程中发现与禁止许可证的依赖关系，则将其确定为依赖风险。
sca.licenses.license_override_applied={licenseCategory}许可证的默认策略是<b>{defaultPolicy}</b>。您已将默认策略覆盖为<b>{policy}</b>。
sca.licenses.default_policy.body=这是您的{defaultBadge}许可证配置文件。所有未手动分配其他配置文件的项目都将使用此配置文件。
sca.licenses.default_policy.no_default=您尚未设置默认许可证配置文件。如果将许可证配置文件设置为默认配置文件，则所有项目在分析期间都将使用该配置文件，除非手动将其分配给另一个配置文件。
sca.licenses.default_policy.nothing_allowed=此许可证配置文件设置为默认，但不允许使用任何许可证或许可证类别。在这种状态下，分析将向开发人员显示所有许可证都被禁止。如果您不打算立即配置允许哪些许可证，我们建议您等到配置后再将此配置文件设置为默认值。
sca.licenses.policy.nothing_allowed=此许可证配置文件没有允许的许可证或许可证类别。在这种状态下，分析将向开发人员显示所有许可证都被禁止。如果您不打算立即配置允许哪些许可证，我们建议您等到配置后再将此配置文件设置为默认值。
sca.licenses.profile.create_help=创建新的许可证配置文件来管理您的许可证。
sca.licenses.profile.actions.set_default=设置为默认值
sca.licenses.profile.actions.remove_default=删除为默认值
sca.licenses.profile.actions.edit_configuration=编辑配置
sca.licenses.profile.actions.label=行动
sca.licenses.profile.actions.view_configuration=显示配置
sca.licenses.profile.search_licenses=搜索许可证
sca.licenses.profile.rename_modal.title=重命名许可证配置文件
sca.licenses.profile.rename_modal.body=为许可证配置文件输入新名称。
sca.licenses.profile.delete_modal.title=删除许可证配置文件
sca.licenses.profile.delete_modal.body=您确定要删除此许可证配置文件吗？任何关联的项目都将恢复为默认许可证配置文件，或者如果不存在默认许可证，则不会应用任何许可证配置。
sca.licenses.profile.properties.name=许可证配置
sca.licenses.profile.properties.updated_at=已更新
sca.licenses.profile.properties.license_count=许可证计数
sca.licenses.profile.properties.license_name=许可证
sca.licenses.profile.properties.license_category=类别
sca.licenses.profile.properties.license_policy=策略
sca.licenses.profile.properties.license_policy.allowed=允许
sca.licenses.profile.properties.license_policy.prohibited=禁止
sca.licenses.profile.current_default=当前默认值：{defaultPolicy}
sca.licenses.profile.categories.title=许可证类别策略
sca.licenses.profile.categories.help=通过选择默认允许的许可证类别来节省配置时间。即使默认情况下允许某个类别，您也可以自定义单个许可证策略。
sca.licenses.profile.projects_using=使用此配置文件的项目
sca.licenses.set_category_modal.title=设置默认许可证策略
sca.licenses.set_category_modal.body=Sonar根据其特点对许多常见的开源许可证进行了分类，以便您更容易制定策略。通过按类别设置默认策略，您可以快速允许或禁止该类别中的所有许可证。别担心，您始终可以根据需要为单个许可证设置策略。
sca.licenses.category.copyleft_weak.name=弱 copyleft
sca.licenses.category.copyleft_strong.name=强 copyleft
sca.licenses.category.copyleft_network.name=网络 copyleft
sca.licenses.category.copyleft_maximal.name=最大 copyleft
sca.licenses.category.permissive_standard.name=标准许可
sca.licenses.category.permissive_amateur.name=非标准许可
sca.licenses.category.uncategorized.name=未分类
sca.licenses.category.filter_by_category=所有类别
sca.licenses.category.permissive_standard=此类别包括最常用的许可证。许可证授予广泛的使用和修改权限，义务非常小（主要是归因）。此类许可证具有许可开源许可证的所有基本要素。示例标准许可证包括MIT和Apache软件许可证。
sca.licenses.category.permissive_amateur=此类许可证包括缺乏现代许可开源许可证的一个或多个基本要素，或强加复杂或令人困惑的要求的许可许可证。许多人使用不清楚、诙谐或不完整的语言。这些许可证的使用在法律上不太可预测。业余许可证的示例包括Artistic 1.0和WTFPL软件许可证。
sca.licenses.category.copyleft_weak=弱copyleft许可证要求在向他人提供副本时共享您对许可软件的更改和添加。弱copyleft许可证的示例包括GNU LGPL和Mozilla公共许可证软件许可证。
sca.licenses.category.copyleft_strong=除了弱copyleft许可证的要求外，强copyleft许可证要求您在向他人提供副本时，共享使用许可软件构建的较大程序。强大的copyleft许可证示例包括GNU GPL许可证。
sca.licenses.category.copyleft_network=除了强copyleft许可证的要求外，网络copyleft许可证还要求您共享使用许可软件构建的较大程序，不仅在您向他人提供副本时，而且在您运行软件供他人在互联网或其他网络上使用时。示例网络copyleft许可证包括GNU AGPL和服务器端公共许可证软件许可证。
sca.licenses.category.copyleft_maximal=最大copyleft许可证对“许可证何时要求您共享？”这个问题的回答与其他家族不同。最大copyleft许可证要求您与他人共享您制作的软件，并在您这样做时对该软件进行同样的许可。例如，最大copyleft授权包括奇偶校验和互惠软件许可证。
sca.licenses.category.uncategorized=Sonar不知道未分类的许可证。
sca.licenses.project.title=许可证配置文件
sca.licenses.project.info={licenseProfileDocUrl}是一组策略，用于定义项目使用的依赖项允许或禁止哪些许可证。仅当创建了默认许可证配置文件，或者将项目手动分配给许可证配置时，才会分析依赖许可证。如果在分析过程中发现具有禁止许可证的依赖关系，则将其标识为{dependencyRiskDocUrl}。
sca.licenses.project.choose=选择要分配给此项目的许可证配置文件，或从{licenseProfileUrl}页面创建新的配置文件。
sca.quality_gates.metric.sca_severity_vulnerability=依赖漏洞严重性
sca.quality_gates.metric.sca_severity_licensing=依赖于被禁止的许可证
sca.quality_gates.metric.sca_severity_any_issue=依赖风险严重程度
sca.quality_gates.metric.sca_severity_licensing.description=Sonar将所有禁止的许可证风险归类为高严重性。因此，如果项目的任何依赖项使用了项目许可证配置文件禁止的许可证，则此情况将导致质量门禁失败。
architecture.empty_state.title=架构图不可用
architecture.empty_state.body=如果您的项目与架构功能兼容，请运行新的扫描，图表将显示在此处。
architecture.empty_state.body1=支持的语言： {supported_languages}
architecture.empty_state.body2=启用语言： {active_languages}
architecture.page=架构
architecture.page.discovery=结构图
architecture.page.dashboard.open_graph=打开结构图
architecture.page.dashboard.open_model=打开模型构建器
architecture.page.dashboard.open_model_visual=打开模型生成器（可视化）
architecture.page.model.visual.title=编辑模型
architecture.page.model.visual.new_group=新建组
architecture.page.model.visual.save_close=保存并关闭
architecture.page.model.visual.sidebar.title=源节点
architecture.page.model.visual.sidebar.description=拖动节点以在模型中创建组
architecture.page.model=模型
architecture.page.model.description=可视化你的代码库，开始正式化你的软件架构。
architecture.page.model.title=架构模型
architecture.page.model.subtitle=像代码一样定义你的架构模型
architecture.page.dashboard.model.description=可以向下面代码一样定义你的架构模型。
architecture.page.model.docs=查看<link1>预期格式</link1>或查看<link2>文档</link2>以了解更多信息。
architecture.page.model.saved=模型保存成功
architecture.page.model.no_data=无模型数据
architecture.page.model.invalid_json=JSON格式无效
architecture.page.model.label=模型
architecture.page.model.invalid_groups=非法 {groupsCount, plural, one {群组} other {群组}}: {groups}
architecture.page.model.duplicate_connection=从 "{source}" 至 "{target}" 的连接已经存在了
architecture.page.model.same_source_and_target=组无法连接到自身
architecture.page.oversize=超大组件
architecture.page.oversize_list=超大组件
architecture.page.oversize_list.count={count, plural, one {<bold>1</bold> 超大组件} other {<bold>{count}</bold> 超大组件}}
architecture.page.oversize_list.child_count={count, plural, one {1 子节点} other {{count} 子节点}}
architecture.page.tangles=纠缠
architecture.page.tangle=纠缠细节
architecture.page.tangles.count={count} 纠缠
architecture.admin.promotion.message=尝试免设计和架构的早期访问，以可视化您的代码库，并开始正式化您的软件架构。<link>启用设计和架构</link>
architecture.user.promotion.message=现在，您在Early Access中启用了设计和架构，您可以开始可视化您的代码库，定义和验证您的架构。<link>带我去那里！</link>
architecture.no_graph_file.message=找不到此项目的图形文件。
architecture.error.message=抱歉，目前不支持这种规模的项目。
architecture.nodes.orphans.label=孤儿 ({orphansCount})
architecture.nodes.orphans.name=孤儿
architecture.tangles.description=此分支发现的纠缠。
architecture.tangles.title={{containersCount}} {{containerWord}} 和 {{elementsCount}} {{elementWord}}{{filename}}
architecture.tangles.title.filename= 内部 {{filename}}
architecture.tangles.subtitle={{containers}} • {{elements}} • {{container}}
architecture.oversize.description=包含太多子项的组件。
architecture.discovery.description=发现自己的项目结构。
architecture.discovery.spotlight.path.copy=复制： {path}
architecture.discovery.spotlight.incoming_dependencies={count, plural, one {1 被依赖项} other {{count} 被依赖项}}
architecture.discovery.spotlight.outgoing_dependencies={count, plural, one {1 依赖项} other {{count} 依赖项}}
architecture.discovery.spotlight.direct=直接
architecture.discovery.spotlight.transitive=传递
architecture.discovery.spotlight.no_incoming_dependencies=无被依赖项
architecture.discovery.spotlight.no_outgoing_dependencies=无依赖项
architecture.discovery.spotlight.parent_no_dependencies_message=在图上选择一个子项以查看其依赖关系。
architecture.discovery.spotlight.weight={weight, plural, one {1 潜在依赖性} other {{weight} 潜在依赖性}}
projects.page=项目
projects.add=新增项目
projects.create_application=创建应用
projects.no_projects.empty_instance=分析过的项目会显示在这里。
projects.no_projects.empty_instance.new_project=分析过的项目会显示在这里。
projects.no_projects.empty_instance.how_to_add_projects=如何分析新项目
projects.no_favorite_projects=你没有收藏项目。
projects.no_favorite_projects.engagement=搜索并收藏感兴趣的项目，就可以在这里快速看到收藏的项目的。
projects.explore_projects=浏览项目
projects.not_analyzed.TRK=尚未分析项目
projects.not_analyzed.APP=尚未分析应用
projects.no_new_code_period.TRK=项目尚无新代码
projects.no_new_code_period.APP=应用尚无新代码
projects.new_code_period_x=新代码：最新 {0}
projects.configure_analysis=配置分析器
projects.configure_analysis_for_x=为项目 {project} 配置分析
projects.last_analysis_on_x=最近一次分析：{date}
projects.search=搜索项目名或标识
projects.perspective=透视图
projects.skip_to_filters=跳至项目搜索
projects.x_projects_found=找到 {count} 个项目
projects.sort_by=排序
projects.sort_ascending=正序排列
projects.sort_descending=倒序排列
projects.sorting.default=默认
projects.sorting.name=名称
projects.sorting.analysis_date=最后分析日期
projects.sorting.creation_date=创建时间
projects.sorting.reliability=可靠性
projects.sorting.security=安全性
projects.sorting.security_review=安全审核
projects.sorting.maintainability=可维护性
projects.sorting.coverage=覆盖率
projects.sorting.duplications=重复度
projects.sorting.size=大小
projects.sorting.new_reliability=可靠性
projects.sorting.new_security=安全性
projects.sorting.new_security_review=安全审核
projects.sorting.new_maintainability=可维护性
projects.sorting.new_coverage=覆盖率
projects.sorting.new_duplications=重复度
projects.sorting.new_lines=新代码行数
projects.view.overall=总体状态
projects.view.overall_code=总体代码
projects.view.new_code=新代码
projects.worse_of_reliablity_and_security=可靠性和安全性变得更差了
projects.limited_set_of_projects=限制只显示前 {0} 个项目，基于的排序条件为 {1}。
projects.facets.quality_gate=质量门禁
projects.facets.quality_gate.warning_help=告警状态已被废弃。过滤器会在没有质量门禁告警时消失。
projects.facets.rating_x={0} 评级
projects.facets.rating_option.reliability.legacy.1=≥ 0 提示问题
projects.facets.rating_option.reliability.legacy.2=≥ 1 次要问题
projects.facets.rating_option.reliability.legacy.3=≥ 1 主要问题
projects.facets.rating_option.reliability.legacy.4=≥ 1 严重问题
projects.facets.rating_option.reliability.legacy.5=≥ 1 阻断问题
projects.facets.rating_option.reliability.1=≥ 0 提示问题
projects.facets.rating_option.reliability.2=≥ 1 低级问题
projects.facets.rating_option.reliability.3=≥ 1 中级问题
projects.facets.rating_option.reliability.4=≥ 1 高级问题
projects.facets.rating_option.reliability.5=≥ 1 阻断问题
projects.facets.rating_option.security.legacy.1=≥ 0 提示问题
projects.facets.rating_option.security.legacy.2=≥ 1 次要问题
projects.facets.rating_option.security.legacy.3=≥ 1 主要问题
projects.facets.rating_option.security.legacy.4=≥ 1 严重问题
projects.facets.rating_option.security.legacy.5=≥ 1 阻断问题
projects.facets.rating_option.security.1=≥ 0 提示问题
projects.facets.rating_option.security.2=≥ 1 低级问题
projects.facets.rating_option.security.3=≥ 1 中级问题
projects.facets.rating_option.security.4=≥ 1 高级问题
projects.facets.rating_option.security.5=≥ 1 阻断问题
projects.facets.rating_option.maintainability.1=≤ 5% 至 0%
projects.facets.rating_option.maintainability.2=≥ 5% 至 <10%
projects.facets.rating_option.maintainability.3=≥ 10% 至 <20%
projects.facets.rating_option.maintainability.4=≥ 20% 至 <50%
projects.facets.rating_option.maintainability.5=≥ 50%
projects.facets.rating_option.security_review.1=≥ 80%
projects.facets.rating_option.security_review.2=≥ 70% 至 <80%
projects.facets.rating_option.security_review.3=≥ 50% 至 <70%
projects.facets.rating_option.security_review.4=≥ 30% 至 <50%
projects.facets.rating_option.security_review.5=< 30%
projects.facets.security_review.description=经过复审（修复或安全）的安全热点评级
projects.facets.maintainability.description=修复全部维护性问题的预估时间与项目大小的评级
projects.facets.security.description=漏洞数量
projects.facets.reliability.description=Bug 数量
projects.facets.languages=语言
projects.facets.search.languages=搜索语音
projects.facets.new_lines=新代码行
projects.facets.tags=标签
projects.facets.search.tags=搜索标签
projects.facets.qualifier=类型
projects.facets.qualitygate_label_x=搜索 {0} 质量门禁的项目
projects.facets.rating_label_single_x=搜索 {1} 的 {0} 评级的项目
projects.facets.rating_label_multi_x=搜索 {1} 的 {0} 或更差的评级的项目
projects.facets.label_no_data_x=搜索没有 {0} 数据的项目
projects.facets.label_text_x=搜索 {0}：{1} 的项目
projects.facets.size.label.1=搜索低于 1k 行代码的项目
projects.facets.size.label.2=搜索 1k 或更多行代码的项目
projects.facets.size.label.3=搜索 10k 或更多行代码的项目
projects.facets.size.label.4=搜索 100k 或更多行代码的项目
projects.facets.size.label.5=搜索 500k 或更多行代码的项目
projects.facets.new_lines.label.1=搜索低于 1k 行新代码的项目
projects.facets.new_lines.label.2=搜索 1k 或更多行新代码的项目
projects.facets.new_lines.label.3=搜索 10k 或更多行新代码的项目
projects.facets.new_lines.label.4=搜索 100k 或更多行新代码的项目
projects.facets.new_lines.label.5=搜索 500k 或更多行新代码的项目
projects.facets.coverage.label.1=搜索超过 80% 覆盖率的项目
projects.facets.coverage.label.2=搜索低于 80% 覆盖率的项目
projects.facets.coverage.label.3=搜索低于 70% 覆盖率的项目
projects.facets.coverage.label.4=搜索低于 50% 覆盖率的项目
projects.facets.coverage.label.5=搜索低于 30% 覆盖率的项目
projects.facets.duplication.label.1=搜索重复率不足 3% 的项目
projects.facets.duplication.label.2=搜索重复率超过 3% 的项目
projects.facets.duplication.label.3=搜索重复率超过 5% 的项目
projects.facets.duplication.label.4=搜索重复率超过 10% 的项目
projects.facets.duplication.label.5=搜索重复率超过 20% 的项目
projects.facets.no_available_filters_clear_others=无可用条件。清除其他条件查看选项。
projects.sort.disabled=禁用排序，因为排序不会影响当前项目的显示结果。
projects.sort.analysis_date=最后分析时间排序（最老优先）
projects.sort.-analysis_date=最后分析时间排序（最新优先）
projects.sort.name=名称
projects.sort.-name=名称
projects.sort.reliability=可靠性（高分优先）
projects.sort.-reliability=可靠性（低分优先）
projects.sort.security=安全性（高分优先）
projects.sort.-security=安全性（低分优先）
projects.sort.maintainability=可维护性（高分优先）
projects.sort.-maintainability=可维护性（低分优先）
projects.sort.coverage=覆盖率（高分优先）
projects.sort.-coverage=覆盖率（低分优先）
projects.sort.duplications=重复度（高分优先）
projects.sort.-duplications=重复度（低分优先）
projects.sort.size=大小（小优先）
projects.sort.-size=大小（大优先）
projects.show_more=显示更多项目
projects.security_hotspots_reviewed=热点已审查
projects.awaiting_scan=计算中
projects.awaiting_scan.title=下次分析时，数值会改变
projects.awaiting_scan.description.TRK=安全性，可靠性，维护性数量正在计算中。当前显示的数量会在下次分析后改变。
projects.awaiting_scan.description.APP=安全性，可靠性，维护性数量正在计算中。当前显示的数量会在应用下所有项目分析后改变。
projects.awaiting_scan.description.VW=计算中的安全性，可靠性，维护性和安全复审的数量和评级发生了改变。数值会在当前组合下的所有项目分析完成后发生变化。
projects.awaiting_scan.learn_more=通过 SonarQube 文档了解更多信息
projects.ai_code_assurance_on.description=AI 代码保障已开启
projects.ai_code_assurance_off.description=AI 代码保障已关闭
projects.ai_code_assurance_fail.description=AI 代码保障已失败
projects.ai_code_assurance_pass.description=AI 代码保障已通过
projects.ai_code_assurance_on.content=此项目包含 AI 生成的代码，可以从 Sonar 的 AI 代码保障获益。
projects.ai_code_assurance.edit_quality_gate=修改质量门禁
projects.ai_code.tooltip.content=此项目包含 AI 生成的代码，但是质量门禁不符合 AI 代码保障。
projects.ai_code_assurance.tooltip.content=此项目包含 AI 生成的代码，可以从 Sonar 的 AI 代码保障获益。
projects.ai_code_detected.title=检测到 AI 代码
projects.ai_code_detected.description=此项目可能包含 AI 生成的代码。
projects.ai_code_detected.link=复审 AI 生成代码设置
projects.ai_code_detected.tooltip.content=此项目的一些贡献者正在使用 GitHub Copilot。
projects.branch.info.AI_CODE_ASSURANCE_ON.content=此项目正通过 Sonar AI 代码保障获益。
projects.branch.info.AI_CODE_ASSURANCE_PASS.content=此分支已达到你对 AI 代码的质量标准。
projects.branch.info.AI_CODE_ASSURANCE_FAIL.content=此分支未达到你对 AI 代码的质量标准。
projects.branches.AI_CODE_ASSURANCE_OFF.admin.content=为从 AI 代码保障中获益，请选择一个合格的 AI 质量门禁。 <link>修改质量门禁</link>
projects.branches.AI_CODE_ASSURANCE_OFF.content=此项目使用了一个 <link>合格的 AI 质量门禁</link>，通过 AI 代码保障获益。
dashboard.project.not_found=找不到请求的项目。
dashboard.project.not_found.2=要么它从没有成功分析过，要么它已经被删除了。
dashboard.portfolio.not_found=找不到请求的组合。
dashboard.portfolio.not_found.2=或者上级尚未重新计算，或者它已经被删除了。
settings.key_x=标识：{0}
settings.default_x=默认：{0}
settings.not_set=（未设置）
settings.state.saving=保存中...
settings.state.saved=已保存！
settings.state.confirmation.title={value, select, true {Activate} false {Deactivate} other {Save}} "{name}"?
settings.state.validation_failed=校验失败。{0}
settings.state.value_cant_be_empty=填写一个值或使用“重置”恢复默认值。
settings.state.value_cant_be_empty_no_default=填写一个值。
settings.state.url_not_valid={0} 不是合法 URL
settings._default=（默认）
settings.boolean.true=真
settings.boolean.false=假
settings.default.no_value=<未赋值>
settings.default.complex_value=<复杂数值>
settings.default.password=<密码>
settings.reset_confirm.title=重置设置
settings.reset_confirm.description=是否确定重置设置？
settings.definition.reset=重置 "{0}" 为默认值
settings.definition.delete_value=删除配置 "{0}" 的 "{1}""
settings.definitions.delete_fields=删除配置 "{0}" 的 "{1}" 行
settings.search.placeholder=搜索设置
settings.search.results=搜索结果列表
settings.json.format=格式化 JSON
settings.json.format_error=JSON 格式有问题，请修改重试。
settings.analysis_scope.introduction=配置分析什么和方式缩小聚焦范围。了解更多 <link>分析范围</link>。
settings.analysis_scope.wildcards.introduction=可以使用以下通配符。
settings.analysis_scope.wildcards.link=通配符模式
settings.analysis_scope.wildcards.zero_more_char=匹配 0 或多个字符
settings.analysis_scope.wildcards.zero_more_dir=匹配 0 或多个目录
settings.analysis_scope.wildcards.single_char=匹配一个字符
settings.analysis_scope.learn_more=了解更多关于分析范围的知识
settings.new_code_period.category=新代码
settings.new_code_period.title=默认新代码行为
settings.new_code_period.description0=新代码定义可以用来判断哪些代码属于新代码。
settings.new_code_period.description1=帮助你把注意力集中在项目的最新修改中，这样就可以遵循“编码时清理”方法论。
settings.new_code_period.description2=此配置默认用于所有项目。也可以为项目单独指定新代码。
settings.new_code_period.description3=参考: {link}
settings.new_code_period.description3.link=定义新代码
settings.new_code_period.question=所有代码默认的新代码基线是什么？
settings.languages.select_a_language_placeholder=选择语言
settings.projects.default_visibility_of_new_projects=新项目默认可见性：
settings.projects.change_visibility_form.label=修改新项目默认可见性：
settings.projects.change_visibility_form.header=设置新项目默认可见性：
settings.projects.change_visibility_form.warning=不会修改已存在的项目的可见性。
settings.projects.change_visibility_form.warning.github=不会修改已经存在的项目的可见性。另外，也不会影响绑定 GitHub 的项目，选项会被忽略。
settings.projects.change_visibility_form.warning.gitlab=不会修改已经存在的项目的可见性。另外，也不会影响绑定 GitLab 的项目，选项会被忽略。
settings.projects.change_visibility_form.submit=修改默认可见性
settings.almintegration.title=集成配置
settings.almintegration.description=DevOps 平台集成允许 SonarQube 与你的 DevOps 平台一起交互。可以直接在你的 DevOps 平台接口中启用认证，为拉取请求提供分析详情和质量门禁。
settings.almintegration.empty.server_base_url=需要在通用 General > {serverBaseUrl} 设置服务器 URL，这样就可以在 SonarQube 实例中使用正确的 DevOps 平台链接
settings.almintegration.empty.server_base_url.setting_link=服务器 URL
settings.almintegration.tab.github=GitHub
settings.almintegration.tab.bitbucket=Bitbucket
settings.almintegration.tab.azure=Azure DevOps
settings.almintegration.tab.gitlab=GitLab
settings.almintegration.github.info=需要安装一个拥有特定设置和权限的账号，来启用你的组织或仓库的拉取请求装饰。{link}
settings.almintegration.github.additional_permission=如果私有项目报告了质量门禁失败，可能需要增加额外的权限来访问 GitHub App。{link}
settings.almintegration.bitbucketcloud.info=需要在 Bitbucket Cloud 工作台创建一个 OAuth 消费者来装饰拉取请求。这个拉取请求的私有消费者需要拥有读取权限。Bitbucket 还需要设置一个 OAuth 回调 URL，但是 SonarQube 不用设置 URL 也能正常运行。{link}
settings.almintegration.bitbucketcloud.oauth=OAuth 消费者
settings.almintegration.empty.azure=创建第一个 Azure DevOps 配置，开始 SonarQube 上的代码分析。
settings.almintegration.empty.bitbucket=创建第一个 Bitbucket 配置，开始 SonarQube 上的代码分析。
settings.almintegration.empty.bitbucketcloud=创建第一个 Bitbucket Cloud 配置，开始 SonarQube 上的代码分析。
settings.almintegration.empty.github=创建第一个 GitHub 配置，开始 SonarQube 上的代码分析。
settings.almintegration.empty.gitlab=创建第一个 GitLab 配置，开始 SonarQube 上的代码分析。
settings.almintegration.create=创建配置
settings.almintegration.create.tooltip=升级到 {link} 可以继承多实例 {alm}。
settings.almintegration.create.tooltip.link=企业版
settings.almintegration.check_configuration=检查配置
settings.almintegration.check_configuration_x=检查配置 '{0}'
settings.almintegration.edit_configuration=修改配置 '{0}'
settings.almintegration.delete_configuration=删除配置 '{0}'
settings.almintegration.checking_configuration=正在检查配置
settings.almintegration.configuration_valid=配置正确
settings.almintegration.configuration_invalid=配置中存在如下错误：
settings.almintegration.could_not_validate=无法校验配置
settings.almintegration.delete.header=删除配置
settings.almintegration.delete.message=是否确认删除 {id} 配置？
settings.almintegration.delete.info={0} 项目将不再启用拉取请求装饰功能。
settings.almintegration.delete.no_info=一些项目将不再启用拉取请求装饰功能。
settings.almintegration.form.app_id.github.help=可以在 GitHub App 页面找到 App ID。设置 > 开发者设置 > Github Apps
settings.almintegration.form.header.create=创建配置
settings.almintegration.form.header.edit=修改配置
settings.almintegration.form.name.azure=配置名称
settings.almintegration.form.name.azure.help=配置一个清晰简洁的名称。使用这个名称为项目配置正确的 Azure 实例。
settings.almintegration.form.choose_bitbucket_variant=选择希望配置的变量
settings.almintegration.form.name.bitbucket=配置名称
settings.almintegration.form.name.bitbucket.help=配置一个清晰简洁的名称。使用这个名称为项目配置正确的 Bitbucket 实例。
settings.almintegration.form.name.bitbucketcloud=配置名称
settings.almintegration.form.name.bitbucketcloud.help=设置一个清晰简洁的名称。这个名称会用来为项目指定配置好的 Bitbucket Cloud 实例。
settings.almintegration.form.name.github=配置名称
settings.almintegration.form.name.github.help=配置一个清晰简洁的名称。使用这个名称为项目配置正确的 GitHub App。
settings.almintegration.form.name.gitlab=配置名称
settings.almintegration.form.name.gitlab.help=配置一个清晰简洁的名称。使用这个名称为项目配置正确的 GitLab 实例。
settings.almintegration.form.workspace.bitbucketcloud=工作区 ID
settings.almintegration.form.workspace.bitbucketcloud.error=工作区 ID 只能使用小写字母，数字，破折号和下划线。
settings.almintegration.form.workspace.bitbucketcloud.help=工作区 ID
settings.almintegration.form.oauth_key.bitbucketcloud.help=在 Bitbucket 中创建 OAuth 消费者时会自动创建 OAuth 标识。在 OAuth 消费者的 Bitbucket Cloud 工作台设置下。
settings.almintegration.form.oauth_secret.bitbucketcloud.help=在 Bitbucket 中创建 OAuth 消费者时会自动创建 OAuth 密钥。在 OAuth 消费者的 Bitbucket Cloud 工作台设置下。
settings.almintegration.form.url.azure=Azure DevOps 服务器 URL
settings.almintegration.form.url.azure.help1=对应 Azure DevOps 服务器，提供完整 URL：
settings.almintegration.form.url.azure.help2=对应 Azure DevOps 服务，提供完整组织 URL：
settings.almintegration.form.url.bitbucket=Bitbucket 服务器网址
settings.almintegration.form.url.bitbucket.help=示例：{example}
settings.almintegration.form.url.github=GitHub 网址
settings.almintegration.form.url.github.help1=Github 企业版示例：
settings.almintegration.form.url.github.help2=如果使用 GitHub.com：
settings.almintegration.form.url.github.private_key_warning=为满足安全要求，请提供 GitHub App 私钥更新 URL。
settings.almintegration.form.url.gitlab=GitLab 网址
settings.almintegration.form.url.gitlab.help=提供 GitLab API 网址。比如：
settings.almintegration.form.url.pat_warning=为满足安全要求，请提供个人访问令牌更新 URL。
settings.almintegration.form.app_id=GitHub 应用 ID
settings.almintegration.form.client_id.github=客户端 ID
settings.almintegration.form.client_id.github.help=客户端 ID 位于 GitHub App 页面。
settings.almintegration.form.client_secret.github=客户端密钥
settings.almintegration.form.client_secret.github.help=客户端密钥位于 GitHub App 页面。
settings.almintegration.form.client_id.bitbucketcloud=OAuth 标识
settings.almintegration.form.client_secret.bitbucketcloud=OAuth 密钥
settings.almintegration.form.private_key=私钥
settings.almintegration.form.private_key.github.help=GitHub App 私有密钥。可以在 GitHub App 页面的私有密钥下创建一个.pem 文件。把文件的内容复制粘贴到这里。
settings.almintegration.form.webhook_secret.github=Webhook 密钥
settings.almintegration.form.webhook_secret.github.help=此项请留空，除非使用了 GitHub 代码扫描告警功能。详情请参考文档。
settings.almintegration.form.personal_access_token=个人访问令牌
settings.almintegration.form.personal_access_token.azure.help=用户令牌将用来装饰拉取请求。需要权限："代码（读写）"
settings.almintegration.form.personal_access_token.azure.help.url=个人访问令牌
settings.almintegration.form.personal_access_token.gitlab.help=用户令牌将用来装饰合并请求。需要 API 权限。
settings.almintegration.form.personal_access_token.gitlab.help.url=个人访问令牌
settings.almintegration.form.personal_access_token.bitbucket.help=Bitbucket 服务器用户账号用来装饰拉取请求。建议使用拥有管理员权限的专门 Bitbucket 服务器账号。需要一个拥有被分析仓库的读取权限的账号的 {pat}。使用这个访问令牌在拉取请求中报告质量门禁的状态。
settings.almintegration.form.personal_access_token.bitbucket.help.url=个人访问令牌
settings.almintegration.form.save=保存配置
settings.almintegration.form.cancel=取消
settings.almintegration.form.secret.field=因安全原因隐藏此字段。
settings.almintegration.form.secret.update_field=更新字段值
settings.almintegration.form.secret.update_field_x=更新 {0}
settings.almintegration.form.secret.can_encrypt=可以加密当前值。{learn_more}
settings.almintegration.feature.status_reporting.title=质量门禁状态报告
settings.almintegration.feature.status_reporting.description_pr=通过 ALM 供应商接口，为拉取请求添加分析和质量门禁信息。
settings.almintegration.feature.status_reporting.description_pr_and_commits=通过 ALM 供应商接口，为拉取请求和分析提交奥添加质量门禁信息。
settings.almintegration.feature.status_reporting.description_mr=通过 ALM 供应商接口，为合并请求添加分析和质量门禁信息。
settings.almintegration.feature.pr_decoration.disabled=禁用
settings.almintegration.feature.pr_decoration.disabled.no_branches=升级至 {link} 以启用此功能
settings.almintegration.feature.pr_decoration.disabled.no_branches.link=开发者版本
settings.almintegration.feature.alm_repo_import.title=由 ALM 导入仓库
settings.almintegration.feature.alm_repo_import.description=从 ALM 中选择仓库，把它们导入 SonarQube。
settings.almintegration.feature.alm_repo_import.disabled=禁用
settings.almintegration.feature.alm_repo_import.disabled.no_url=功能已禁用，因为未配置 URL。
settings.almintegration.tabs.authentication_moved=可以集成 DevOps 平台的代理认证。相关配置在 {link} 部分。
settings.authentication.title=认证
settings.authentication.custom_message_information=可以在登录页面配置自定义登录信息，帮助用户认证。对应配置在 {link} 部分。
settings.authentication.custom_message_information.link=通用
settings.authentication.description=以下配置可以使用 SAML 实现代理认证，支持以下 DevOps 平台：GitHub，GitLab，Bitbucket。
settings.authentication.help=如果需要认证配置相关的支持，请参考 {link}。
settings.authentication.legacy_help.github=兼容 GitHub Oauth App 的功能已被废弃，未来将被删除。请参考 {link} 了解如何升级配置。
settings.authentication.help.link=文档
settings.authentication.form.create=创建配置
settings.authentication.form.edit=编辑
settings.authentication.form.delete=删除
settings.authentication.form.delete.tooltip=只能删除已禁用的配置。
settings.authentication.form.loading=加载配置
settings.authentication.form.enable=启用配置
settings.authentication.form.disable=禁用配置
settings.authentication.form.disable.tooltip=使用自动同步时无法禁用配置。只能在实时同步模式下禁用这个配置。
settings.authentication.form.provisioning=同步
settings.authentication.form.provisioning_at_login=实时用户和群组同步 (默认)
settings.authentication.form.other_provisioning_enabled=已启用其他配置。只能启用一个身份供应器实现自动用户和群组同步。
settings.authentication.form.settings.save_success=设置保存成功。
settings.authentication.confirm_auto_provisioning.header=自动管控已增强
settings.authentication.confirm_auto_provisioning.description1=当前版本自动配置已挂起，需要配置一个管控方法。
settings.authentication.confirm_auto_provisioning.description2=自动管控管功能在 10.7 版本进行了增强。更多细节请参考 {documentation}。
settings.authentication.confirm_auto_provisioning.question=选择你的管控方法
settings.authentication.confirm_auto_provisioning.confirm_choice=确认选择
settings.authentication.confirm_auto_provisioning.auto.label=增强自动管控（推荐）
settings.authentication.confirm_auto_provisioning.auto.help=立即同步用户，群组，权限和项目可见性。
settings.authentication.confirm_auto_provisioning.jit.label=实时管控
settings.authentication.confirm_auto_provisioning.jit.help=只同步用户与群组
settings.authentication.github.form.create=新建 GitHub 配置
settings.authentication.github.form.edit=编辑 GitHub 配置
settings.authentication.github.appid_x=App ID: {0}
settings.authentication.github.confirm.AUTO_PROVISIONING=切换至自动管控
settings.authentication.github.confirm.JIT=切换至实时管控
settings.authentication.github.confirm.insecure=潜在不安全配置
settings.authentication.github.confirm.AUTO_PROVISIONING.description=当你迁移至自动管控，群组，用户，群组关系和 GitHub 项目权限都可以从 GitHub 继承。你将不能在 GitHub 中进行编辑。是否确认执行修改？
settings.authentication.github.confirm.JIT.description=切换至实时管控，删除自动同步用户，群组和群组关系。用户登录时会更新用户信息和群组关系。是否确认？
settings.authentication.github.provisioning_change.confirm_changes=确认修改
settings.authentication.github.provisioning_change.insecure_config=你的配置存在潜在不安全因素，因为没有在允许列表中增加组织。如果 GitHub App 是公开的，任何人都可以安装，获取访问你的实例的权限。
settings.authentication.github.configuration=GitHub 配置
settings.authentication.github.form.not_configured=GitHub App 未配置
settings.authentication.github.form.legacy_configured=兼容 GitHub Oauth App 的功能已被废弃，未来将被删除。配置可以继续工作，但是相关的支持是有限的。推荐使用 GitHub Apps。参考 {documentation} 了解更多信息。
settings.authentication.github.form.legacy_configured.link=了解如何创建 GitHub App 配置
settings.authentication.github.enable_first=启用 GitHub 配置获取更多同步配置。
settings.authentication.github.form.allowedOrganizations.name=Organizations
settings.authentication.github.form.allowedOrganizations.description=只允许这些组织成员登录服务器。如果未设置，GitHub App 安装后，所有组织用户都可以登录 SonarQube 实例。
settings.authentication.github.form.apiUrl.name=GitHub 实例的 API 网址。
settings.authentication.github.form.apiUrl.description=GitHub 实例的 API 网址。https://api.github.com/ 对应 Github.com, https://github.company.com/api/v3/ 对应 Github 企业版。
settings.authentication.github.form.applicationId.name=App ID
settings.authentication.github.form.applicationId.description=可以通过 GitHub 的 GitHub App 页面中的 Settings > Developer Settings > GitHub Apps 找到 App ID。
settings.authentication.github.form.clientId.name=客户端标识
settings.authentication.github.form.clientId.description=在 GitHub 注册应用时提供的客户标识 (Client ID)。
settings.authentication.github.form.clientSecret.name=客户端秘钥
settings.authentication.github.form.clientSecret.description=在 GitHub 注册应用时提供的客户秘钥 (Client Secret)。
settings.authentication.github.form.privateKey.name=私钥
settings.authentication.github.form.privateKey.description=GitHub App 的私钥。可以在 GitHub App 页面的私钥 (Private keys) 部分生成一个 .pem 文件。把文件内容粘贴复制到这里。
settings.authentication.github.form.synchronizeGroups.name=同步群组
settings.authentication.github.form.synchronizeGroups.description=用户登录 SonarQube 时，把 GitHub 群组 (team) 同步到 SonarQube 群组。用户在 GitHub 中的每个群组，都会对应到 SonarQube 的同名群组组，只要这个群组存在就可以。
settings.authentication.github.form.webUrl.name=GitHub 实例的 WEB 网址。
settings.authentication.github.form.webUrl.description=GitHub 实例的 WEB 网址。https://github.com/ 对应 Github.com, https://github.company.com/ 对应 GitHub 企业版。
settings.authentication.github.form.private_key.required_for_url_change=请再次提供私钥，以更新 API 网址或 WEB 网址。
settings.authentication.github.form.provisioning_with_github=启动用户和群组同步
settings.authentication.github.form.provisioning_with_github_short.autoProvisioning=自动同步
settings.authentication.github.form.provisioning_with_github_short.jit=实时同步
settings.authentication.github.form.provisioning_with_github.description=从你的 GitHub 组织自动同步用户和群组。激活后，用户和群组只能由 GitHub 群组创建和修改。本地已存在的用户会继续保留，只能禁用。
settings.authentication.github.form.description.doc=更多信息，参考 {documentation}。
settings.authentication.github.form.provisioning_at_login.description=用户登录 SonarQube 时才会更新用户和群组。
settings.authentication.github.form.provisioning.disabled=当前版本不支持与 GitHub 同步。参考 {documentation} 了解更多信息。
settings.authentication.github.form.allowUsersToSignUp.name=允许注册新用户
settings.authentication.github.form.allowUsersToSignUp.description=允许注册新用户。禁用时，只有已存在的用户才能登录服务器。
settings.authentication.github.form.projectVisibility.name=管理项目可见性
settings.authentication.github.form.projectVisibility.description=基于 GitHub 仓库可见性同步项目可见性。禁用时，所有 SonarQube 项目都会设置为私有，只有在 GitHub 中对应仓库下明确设置了权限的用户才能看到。此选项会在下次同步时生效。
settings.authentication.github.synchronize_now=现在同步
settings.authentication.github.synchronization_finish=同步完成。
settings.authentication.github.configuration.validation.details=查看闲情
settings.authentication.github.configuration.validation.valid.short=配置正常
settings.authentication.github.configuration.validation.valid={0} 的配置合法。即将同步 {1}。
settings.authentication.github.configuration.validation.valid_one={0} 的配置合法。即将同步 '{1}'。
settings.authentication.github.configuration.validation.invalid=配置非法 {0}
settings.authentication.github.configuration.validation.invalid_org=组织 "{0}" 出现以下错误： {1}
settings.authentication.github.configuration.validation.details.title=配置有效性：
settings.authentication.github.configuration.validation.details.valid_label=合法
settings.authentication.github.configuration.validation.details.invalid_label=非法
settings.authentication.github.configuration.validation.details.org_not_found={0} (找不到或未安装 app)
settings.authentication.github.configuration.roles_mapping.description=同步用户和群组时，SonarQube 会基于 GitHub 用户和群组角色分配权限。可以自定义权限映射。新映射会在下次同步时生效。
settings.authentication.github.configuration.roles_mapping.save_success=成功保存 GitHub 角色映射。
settings.authentication.github.configuration.roles_mapping.dialog.custom_roles_description=这里添加自定义角色名称和 GitHub 中任何组织中现存的自定义角色一致时，映射关系会对角色下的所有用户生效。如果现存 GitHub 自定义角色没有出现在列表中，会应用它集成的基础角色权限。
settings.authentication.github.configuration.unsaved_changes=存在未保存变更。
settings.authentication.gitlab.configuration=GitLab 配置
settings.authentication.gitlab.form.not_configured=GitLab App 未配置
settings.authentication.gitlab.form.create=创建 GitLab 配置
settings.authentication.gitlab.form.edit=编辑 GitLab 配置
settings.authentication.gitlab.form.applicationId.name=应用 ID
settings.authentication.gitlab.form.applicationId.description=注册应用时 GitLab 提供的应用 ID。
settings.authentication.gitlab.form.url.name=GitLab URL
settings.authentication.gitlab.form.url.description=访问 GitLab 的 URL。
settings.authentication.gitlab.form.secret.name=秘钥
settings.authentication.gitlab.form.secret.description=注册应用时 GitLab 提供的秘钥。
settings.authentication.gitlab.form.secret.required_for_url_change=请再次提供密码，以更新网址。
settings.authentication.gitlab.form.synchronizeGroups.name=同步用户群组
settings.authentication.gitlab.form.synchronizeGroups.description=对每个对应的 GitLab 群组，用户会被分配给 SonarQube 中同名的群组（如果存在）。如果启用，GitLab OAuth 2 应用需要提供 api 范围。
settings.authentication.gitlab.form.allowedGroups.name=允许群组
settings.authentication.gitlab.form.allowedGroups.description.JIT=只有这些群组的成员（子群组）可以认证。请输入 GitLab URL 中的群组部分，比如 `my-gitlab-group`。如果未设置，并启用了 `允许用户注册`，GitLab的所有用户都能登录 SonarQube 实例。
settings.authentication.gitlab.form.allowedGroups.description.AUTO_PROVISIONING=只有这些群组的成员（子群组）可以认证。请输入 GitLab URL 中的群组部分，比如 `my-gitlab-group`。
settings.authentication.gitlab.form.allowUsersToSignUp.name=允许用户注册
settings.authentication.gitlab.form.allowUsersToSignUp.description=允许新用户登录。如果禁用，只有已存在的用户可以登录服务器。
settings.authentication.gitlab.form.provisioningToken.name=管理令牌
settings.authentication.gitlab.form.provisioningToken.description=使用令牌同步用户。你可以使用群组或个人访问令牌，同时它需要在被导入的群组中是可见的。
settings.authentication.gitlab.applicationId.name=App ID: {0}
settings.authentication.gitlab.enable_first=启用 GitLab 配置进行更多同步配置。
settings.authentication.gitlab.provisioning_at_login=实时用户同步（默认）
settings.authentication.gitlab.provisioning_at_login.description=用户登录 SonarQube 时才会同步用户信息。 {documentation}
settings.authentication.gitlab.description.JIT.learn_more=了解更多 GitLab 实时同步
settings.authentication.gitlab.description.AUTO_PROVISIONING.learn_more=了解更多 GitLab 自动同步
settings.authentication.gitlab.confirm.AUTO_PROVISIONING=切换至自动模式
settings.authentication.gitlab.confirm.JIT=切换至实时模式
settings.authentication.gitlab.confirm.AUTO_PROVISIONING.description=切换自动同步后，GitLab 项目的用户和群组会通过 GitLab 继承。不能在 SonarQube 中编辑。是否确认执行变更？
settings.authentication.gitlab.confirm.JIT.description=切换实时同步后，会删除自动同步的用户和群组。只有登录时才能同步和更新用户信息。是否确认？
settings.authentication.gitlab.confirm.insecure=潜在的不安全配置
settings.authentication.gitlab.provisioning_change.confirm_changes=确认修改
settings.authentication.gitlab.provisioning_change.insecure_config=请注意你的配置有潜在风险，因为没有设置允许列表，这就导致所有用户都能注册。任何人都能安装并获取对你实例的访问权限。
settings.authentication.gitlab.form.provisioning_with_gitlab=自动用户和群组同步
settings.authentication.gitlab.form.provisioning_with_gitlab.description=用户和群组通过 GitLab 自动同步，启用时，用户和群组只能通过 GitLab 创建和修改。会保持已存在的本地用户，只能禁用。 {documentation}
settings.authentication.gitlab.form.provisioning.disabled=当前使用的版本不支持 GitLab 同步。参考 {documentation} 获取更多信息。
settings.authentication.gitlab.configuration.unsaved_changes=存在未保存修改。
settings.authentication.gitlab.configuration.valid.JIT=可以对实时同步配置。
settings.authentication.gitlab.configuration.valid.AUTO_PROVISIONING=可以对自动同步配置。
settings.authentication.gitlab.configuration.roles_mapping.description=当同步用户和群组时，SonarQube基于 GitLab 用户角色分配权限。你可以自定义权限映射。新映射会在下次同步时生效。
settings.authentication.gitlab.configuration.roles_mapping.save_success=成功保存 GitLab 角色映射。
settings.authentication.gitlab.configuration.roles_mapping.dialog.custom_roles_description=当此处的自定义角色名称与任何群组或项目中的现存 GitLab 自定义角色匹配时，这个自定义角色会自动映射到匹配的所有用户上。如果现存 GitLab 自定义角色未与列表匹配，会映射到继承的基础角色的权限。
settings.authentication.gitlab.configuration.insecure=BitBucket 认证允许用户注册，但是没有提供允许的工作空间。这是潜在不安全的。我们建议设置允许工作空间列表。 {documentation}
settings.authentication.configuration.validity_check_loading=验证配置
settings.authentication.configuration.test=测试配置
settings.authentication.synchronization_pending=等待同步中。
settings.authentication.synchronization_in_progress=正在执行同步。
settings.authentication.synchronization_successful.with_warning=上一次同步已经在 {date} 结束，存在警告。 {details}
settings.authentication.synchronization_details_link=更新信息
settings.authentication.synchronization_successful=上一次同步在 {0} 结束
settings.authentication.synchronization_failed_short=上次同步失败。 {details}
settings.authentication.synchronization_failed=上一次同步在 {date} 失败
settings.authentication.configuration.roles_mapping.dialog.title=全局 {0} 角色映射
settings.authentication.configuration.roles_mapping.title=角色权限映射
settings.authentication.configuration.roles_mapping.button_label=修改映射
settings.authentication.configuration.roles_mapping.dialog.roles_column=角色
settings.authentication.configuration.roles_mapping.dialog.delete_custom_role=删除自定义角色 {0}
settings.authentication.configuration.roles_mapping.dialog.add_custom_role=添加自定义角色：
settings.authentication.configuration.roles_mapping.role_exists=角色已存在。
settings.authentication.configuration.roles_mapping.empty_custom_role=自定义角色应该拥有权限。
settings.authentication.form.create.saml=创建 SAML 配置
settings.authentication.form.edit.saml=编辑 SAML 配置
settings.authentication.saml.configuration=SAML 配置
settings.authentication.saml.confirm.scim=切换自动配置
settings.authentication.saml.confirm.jit=切换实时配置
settings.authentication.saml.confirm.scim.description=切换自动配置后，无法编辑 SonarQube 中的群组，用户，群组关系。是否确认？
settings.authentication.saml.confirm.jit.description=切换实时配置会删除所有自动配置通过 SCIM 提供的信息，并且无法回滚。是否确认？
settings.authentication.saml.form.loading=加载 SAML 配置
settings.authentication.saml.form.not_configured=SAML 未配置
settings.authentication.saml.form.create=创建 SAML 配置
settings.authentication.saml.form.edit=编辑 SAML 配置
settings.authentication.saml.form.save=保存配置
settings.authentication.saml.form.test=测试配置
settings.authentication.saml.form.test.help.dirty=请保存配置
settings.authentication.saml.form.test.help.incomplete=请完善必填信息
settings.authentication.saml.form.save_success=保存成功
settings.authentication.saml.form.save_partial=部分保存成功
settings.authentication.saml.form.provisioning_at_login=实时用户和群组配置（默认）
settings.authentication.saml.form.provisioning_at_login.sub=账号供应商不支持 SCIM 协议，请使用这项配置。
settings.authentication.saml.form.provisioning_with_scim=通过 SCIM 自动配置用户和群组
settings.authentication.saml.form.provisioning_with_scim.sub=账号供应商支持时，建议使用这项配置。
settings.authentication.saml.form.provisioning_with_scim.description=会使用账号供应商的 SCIM 协议自动配置用户和群组。启用后，只能通过账号供应商管理用户和群组。会保留已存在的用户和群组。
settings.authentication.saml.form.provisioning_with_scim.description.doc=如需了解支持自动配置的供应商以及其他相关信息，请参考 {documentation}。
settings.authentication.saml.form.provisioning.disabled=当前版本不支持与 SCIM 同步。请参考 {documentation}。
settings.authentication.saml.enable_first=启用 SAML 配置，并启用自动用户配置功能。
settings.pr_decoration.binding.category=拉取请求装饰
settings.pr_decoration.binding.no_bindings=此项功能需要首先在全局配置中启用。{link}
settings.pr_decoration.binding.no_bindings.admin=在启用拉取请求装饰之前设置 {link}
settings.pr_decoration.binding.no_bindings.link=全局配置
settings.pr_decoration.binding.title=拉取请求装饰
settings.pr_decoration.binding.description=为此项目启用拉取请求装饰。
settings.pr_decoration.binding.check_configuration=检查配置
settings.pr_decoration.binding.check_configuration.failure=配置存在错误：
settings.pr_decoration.binding.check_configuration.failure.check_global_settings=请检查 {link}。
settings.pr_decoration.binding.check_configuration.failure.check_global_settings.link=全局配置
settings.pr_decoration.binding.check_configuration.contact_admin=请联系系统管理员。
settings.pr_decoration.binding.check_configuration.success=配置正确。
settings.pr_decoration.binding.form.name=配置名称
settings.pr_decoration.binding.form.name.help=需要先给每个 DevOps 平台实例进行权限配置，分配唯一名称。然后选择项目对应的宿主。
settings.pr_decoration.binding.form.monorepo=启用独立仓库支持
settings.pr_decoration.binding.form.monorepo.help=如果你的项目属于一个独立仓库，需要启用此功能。{doc_link}
settings.pr_decoration.binding.form.monorepo.warning=此配置需要对所有属于独立仓库的 SonarQube 项目启用。
settings.pr_decoration.binding.form.azure.project=项目名称
settings.pr_decoration.binding.form.azure.project.help=包含项目的 Azure DevOps 服务器的名称。
settings.pr_decoration.binding.form.azure.repository=仓库名称
settings.pr_decoration.binding.form.azure.repository.help=Azure DevOps 服务器仓库的名称
settings.pr_decoration.binding.form.azure.inline_pr_annotations=启用内联拉取请求注解
settings.pr_decoration.binding.form.azure.inline_pr_annotations.help=如启用，每个文件中的问题都会标记对应的问题详情信息。
settings.pr_decoration.binding.form.github.repository=仓库 ID
settings.pr_decoration.binding.form.github.repository.help=仓库网址路径。示例：{example}
settings.pr_decoration.binding.form.github.summary_comment_setting=在 GitHub 沟通标签下启用分析简介
settings.pr_decoration.binding.form.github.summary_comment_setting.help=启用后，拉取请求分析简介会显示在 GitHub 沟通标签下。会根据 GitHub 中的设置发送提醒。
settings.pr_decoration.binding.form.bitbucket.repository=项目 Key
settings.pr_decoration.binding.form.bitbucket.repository.help=项目标识是 Bitbucket 服务器仓库网址的一部分。示例：({example})
settings.pr_decoration.binding.form.bitbucket.slug=仓库 SLUG
settings.pr_decoration.binding.form.bitbucket.slug.help=仓库 Slug 是 Bitbucket 服务器仓库网址的一部分。示例：({example})
settings.pr_decoration.binding.form.bitbucketcloud.repository=仓库 SLUG
settings.pr_decoration.binding.form.bitbucketcloud.repository.help=仓库 SLUG 是你的 Bitbucket Cloud URL 的一部分。实例：{example}
settings.pr_decoration.binding.form.gitlab.repository=项目 ID
settings.pr_decoration.binding.form.gitlab.repository.help=项目 ID 是数字型唯一标识。可以在项目概述中找到。
settings.email_notification.category=邮件提醒
settings.email_notification.header=SMTP 配置
settings.design_and_architecture.category=设计与架构
settings.design_and_architecture.header=设计与架构
settings.design_and_architecture.description.1=此免费试用由Sonar自行决定，未来可能会停止。试验结束后，设计与架构将成为付费功能。在试用期间，您的组织不会因使用此功能而产生任何变化。
settings.design_and_architecture.description.2=激活此选项，使您组织中的任何用户都可以直接在SonarQube中可视化您的代码库。
settings.design_and_architecture.description.3=激活此选项即表示您同意<link>早期试用条款</link>
settings.design_and_architecture.enable=启用设计与架构
settings.design_and_architecture.disable=禁用设计与架构
settings.design_and_architecture.tour.title=启用设计与架构
settings.design_and_architecture.tour.content=稍后，您可以通过转到“管理”>“配置”>“设计和架构”来启用“设计和体系结构”。
settings.mode.title=模式
settings.mode.description.line1=有两种方式反映实例中所有项目的健康情况：{mqrLink} 和 {standardLink}
settings.mode.description.line2=修改模式会影响基于所有用户分析结果的问题分类和分级。
settings.mode.checking_instance=检查实例...
settings.mode.instance_conditions_from_other_mode=此实例中的一些质量门禁使用了依赖 {isStandardMode, select, true {Standard Experience} other {Multi-Quality Rule Mode}} 的指标。保存修改后就可以更新它们。
settings.mode.standard.name=标准经验
settings.mode.mqr.name=多质量规则 (MQR) 模式
settings.mode.standard.description.line1=包含规则类型的传统用法，比如 bug，异味，漏洞，每个规则对应一个分类和严重性。
settings.mode.standard.description.line2=这种方法侧重把严重性分配给一个规则，问题基于单独的影响最大的软件质量（比如，安全，可靠性，可维护性）。{productName} 9.9 LTA 及之前版本使用这种规范分类。
settings.mode.mqr.description.line1=为了更准确的表示问题对所有软件质量的影响，很少有问题只影响一个软件质量。比如，大多数漏洞都是 bug。反之亦然。MQR 模式把每个规则映射到每个影响的质量上，为每个质量指定单独的严重比率。
settings.mode.mqr.description.line2=这种方法侧重于一个问题对所有软件质量的影响都是明确的，不仅仅是最严重的方面。
settings.mode.save.warning=保存修改了解他们对实例的影响
settings.mode.save=保存模式。当前模式会切换为 {isStandardMode, select, true {Standard Experience} other {Multi-Quality Rule Mode}}
settings.mode.save.success=实例当前为 {isStandardMode, select, true {Standard Experience} other {Multi-Quality Rule Mode}}.
mode.standard.advertisement=寻找安全，可靠性，可维护性问题？如果你的团队更喜欢使用软件质量，可以通过 <a>设置</a> 修改。
mode.mqr.advertisement=寻找 Bug，漏洞或异味？如果你的团队更喜欢这些类型，可以通过 <a>设置</a> 修改。
settings.mode.mqr.advertisement=如果你的团队更喜欢使用漏洞，Bug，异味，可以在通用设置 <a>模式部分</a> 修改
settings.mode.standard.advertisement=如果你的团队更喜欢使用安全，可靠性，可维护性，可以在通用设置 <a>模式部分</a> 修改
settings.early_access.title=早期试用功能
settings.early_access.description=以下列出的功能在Sonar的早期试用中免费提供。试验可随时中止。您的组织在试用期间使用它们不会被收费。条款和条件可能适用。
settings.early_access.misra.title=MISRA合规性
settings.early_access.misra.description.line1=启用此功能可预览其他MISRA C++2023规则。
settings.early_access.misra.description.line2=试验结束后，MISRA合规早期访问功能将被停用，所有新的MISRA C++2023规则将从质量配置文件中删除。您的组织不会被收费。
settings.early_access.misra.checkbox_label=启用早期访问MISRA合规性
settings.early_access.misra.dialog_title=您将要{启用、选择、true{启用}其他{禁用}}MISRA合规功能的早期访问试用
settings.early_access.misra.dialog_description.enable=您将要{启用、选择、true{启用}其他{禁用}}MISRA合规功能的早期访问试用。此实例将提供其他MISRA C++2023规则的预览。<p>Sonar可能随时停止审判。当它停止时，MISRA合规性早期访问功能将被停用，所有新的MISRA C++2023规则将从质量配置文件中删除，所有相关的检测问题将被关闭。</p>您的组织不会被收取费用。
settings.early_access.misra.dialog_description.disable=所有新的MISRA C++2023规则都将从质量配置文件中删除，所有相关的检测问题都将被关闭。只要可以早期访问此功能，您就可以再次启用它。<p>您确定要继续吗？p
settings.early_access.misra.success=此实例的早期试用MISRA合规性{enabled, select, true {已启用} other {已禁用}}
property.category.announcement=通知
property.category.general=通用
property.category.general.email=邮件
property.category.general.duplications=重复
property.category.general.differentialViews=对比视图
property.category.general.localization=本地化
property.category.general.databaseCleaner=数据库清理器
property.category.general.looknfeel=界面外观
property.category.general.issues=问题
property.category.general.qualityGate=质量门禁
property.category.general.qualityProfile=质量配置
property.category.general.subProjects=子项目
property.category.general.subProjectCreation=创建项目
property.category.almintegration=ALM 集成
property.category.authentication=认证
property.category.ai_code=AI 生成代码
property.category.organizations=组织
property.category.security=权限
property.category.security.encryption=加密
property.category.java=Java
property.category.differentialViews=比较视图
property.category.codeCoverage=代码覆盖率
property.category.duplications=重复
property.category.localization=本地化
property.category.exclusions=排除
property.category.webhooks=Webhook
property.category.languages=语言
property.category.aicodefix=AI 代码修复
property.sonar.autodetect.ai.code.confirmation={value, select, true {<p1>“自动检测 AI 生成代码” 将对所有项目启用。</p1><p>项目管理员可以在项目级别关闭此设置，以防止在特定项目中自动检测AI生成的代码。</p>} other {<p1>“自动检测 AI 生成代码” 将对所有项目关闭</p1><p>项目管理员将无法再在项目级别激活此设置。</p>}}
property.sonar.inclusions.name=包含的源文件
property.sonar.inclusions.description=包含源文件的模式，只分析这些文件。
property.sonar.test.inclusions.name=包含的测试文件
property.sonar.test.inclusions.description=包含测试文件的模式，只分析这些文件。
property.sonar.exclusions.name=排除的源文件
property.sonar.exclusions.description=排除源文件的模式。
property.sonar.test.exclusions.name=排除的测试文件
property.sonar.test.exclusions.description=排除测试文件的模式。
property.sonar.global.exclusions.name=全局源码排除
property.sonar.global.exclusions.description=从代码分析中排除源码。作用到所有项目。无法在项目级别重新设置。下次代码分析时修改才会生效。
property.sonar.global.test.exclusions.name=全局测试排除
property.sonar.global.test.exclusions.description=从代码分析中排除测试。作用到所有项目。无法在项目级别重新设置。下次代码分析时修改才会生效。
property.category.exclusions.files=文件
property.category.exclusions.files.description=你可以配置应用中不需要进行哪些分析，每个单独项目的配置中也有类似的配置。
property.sonar.skippedModules.name=从代码分析中排除项目模块
property.sonar.skippedModules.description=这个参数已经在 4.3 中废弃，不应该再使用
property.sonar.includedModules.name=包含的模块
property.sonar.includedModules.description=这个参数已经在 4.3 中废弃，不应该再使用
property.category.exclusions.issues=问题
property.category.exclusions.issues.description=配置哪些问题不要应该被报告的条件。
property.category.exclusions.duplications=重复
property.category.exclusions.duplications.description=配置不需要检测重复代码的文件。
property.category.exclusions.coverage=代码覆盖率
property.category.exclusions.coverage.description=配置不应该检测代码覆盖率的文件。
property.sonar.coverage.exclusions.name=排除的覆盖率
property.sonar.coverage.exclusions.description=用来从覆盖率报告中排除的匹配方式。
property.category.technicalDebt=技术债务
property.error.notBoolean=只能选择 "true" 和 "false"
property.error.notInteger=只允许数字
property.error.notFloat=只允许浮点数字
property.error.notRegexp=错误的 Java 正则表达式
property.error.notInOptions=不是一个合法选项
property.category.scm=SCM
property.category.housekeeping=整理
property.category.housekeeping.general=通用
property.category.housekeeping.branchesAndPullRequests=分支和拉取请求
property.category.housekeeping.auditLogs=审计日志
settings.advanced_security.title=高级安全
settings.advanced_security.description=SonarQube 高级安全将您的保护扩展到第三方开源代码，并允许您访问高级SAST功能。
property.sca.admin.title=软件组成分析 (SCA)
property.sca.admin.description=激活此选项，使任何用户都可以使用Sonar SCA服务扫描其项目的第三方依赖关系中的问题，如漏洞或被禁止的许可证。
property.sca.admin.description2=启用此功能即表示您同意<link>SCA条款和条件</link>
property.sca.admin.checkbox.label=启用软件组成分析 (SCA)
property.sca.default.title=分析所有项目
property.sca.confirm.modal.title.enable=您即将启用软件组合分析（SCA）功能的早期访问试用
property.sca.confirm.modal.description.enable=此实例将提供软件组合分析（SCA）的预览。<p>Sonar可能随时停止审判。当它停止时，SCA早期访问功能将被停用，依赖关系和依赖风险将不再可见。p
property.sca.confirm.modal.title.disable=您将要禁用对软件组合分析（SCA）功能的早期访问
property.sca.confirm.modal.description.disable=用户将无法再扫描其项目的第三方依赖关系中的问题。只要可以早期访问此功能，您就可以再次启用它。您确定要继续吗？
property.sca.message.updated=Sonar SCA {0}
property.sca.admin.selftest.title=验证SCA连接
property.sca.admin.selftest.description=软件组成分析要求您的SonarQube实例能够访问互联网
property.sca.admin.selftest.success=连接检查通过
property.sca.admin.selftest.failure=无法与SCA服务通信。
property.sca.admin.selftest.failure.offline=已离线。
property.sca.admin.selftest.recheck=重新检查连接性
property.sca.admin.selftest.checking=检查连接
property.sca.admin.selftest.show_details=显示详细信息
property.sca.admin.selftest.details.title=自检结果
property.sca.admin.selftest.details.description=以下信息可能有助于诊断与SCA服务云部分的连接问题。
property.sca.admin.rescan.title=配置分支重检测
property.sca.admin.rescan.description=可以使用新漏洞重新扫描分支
property.sca.admin.enabled.message.title=SCA已启用。运行新的分析以查看扫描结果。
property.sca.admin.enabled.message.body=下次在您的某个项目上运行分析时，扫描将检查项目的依赖关系是否存在风险。有关<link>如何确保您的项目已准备好进行SCA分析</link>等信息，请查看我们的完整配置指南。
property.sca.admin.enabled.message.link=查看配置指南
property.sca.admin.disabled.message.title=SCA已启用，并将在逐个在项目中运行。
property.sca.admin.disabled.message.body=您必须为每个需要SCA分析的项目启用SCA。然后，下次在您的某个项目上运行分析时，扫描将检查项目的依赖关系是否存在风险。有关<link>如何确保您的项目已准备好进行SCA分析</link>等信息，请查看我们的完整配置指南。
property.sca.admin.disabled.message.link=查看配置指南
property.aicodefix.admin.title=启用 AI 生成修复建议
property.aicodefix.admin.description=为组织内的所有用户启用使用 Sonar AI 代码修复服务为问题生成 AI 建议代码修复。
property.aicodefix.admin.checkbox.label=启用 AI 代码修复
property.aicodefix.admin.acceptTerm.label=我已阅读并接受 {terms}
property.aicodefix.admin.acceptTerm.terms=AI 代码修复条款
property.aicodefix.admin.enable.title=选择哪些项目应该启用 AI 代码修复
property.aicodefix.admin.enable.all.projects.label=所有项目
property.aicodefix.admin.enable.all.projects.help=为所有现存和未来的项目启用 AI 代码修复
property.aicodefix.admin.enable.some.projects.label=仅选中的项目
property.aicodefix.admin.enable.some.projects.help=仅为选中的项目启用 AI 代码修复
property.aicodefix.admin.enable.some.projects.note=不会为新项目 自动启用 AI 代码修复
property.aicodefix.admin.early_access.title=免费 - 早期使用功能
property.aicodefix.admin.early_access.content1=您使用的这项免费试用基于 Sonar 的自由裁量权。Sonar 可以随时终止试用。
property.aicodefix.admin.early_access.content2=试用终止后，该功能会被禁用，“启用 AI 代码修复”的选择会被忽略。你的组织不需要付费。
property.aicodefix.admin.serviceInfo.learnMore=了解更多启用 AI 代码修复
property.aicodefix.admin.serviceInfo.spinner.label=等待 AI 代码修复服务响应...
property.aicodefix.admin.serviceInfo.unexpected.response.label=AI 代码修复服务返回非法响应。需要升级实例。
property.aicodefix.admin.serviceInfo.empty.response.label=AI 代码修复服务返回空响应。请向维护者反馈问题。
property.aicodefix.admin.serviceInfo.result.unresponsive.message=AI 代码修复服务无响应，或无法访问。
property.aicodefix.admin.serviceInfo.result.unresponsive.causes.title=此问题有几种可能原因：
property.aicodefix.admin.serviceInfo.result.unresponsive.causes.1=SonarQube 实例的网络问题可能搞存在问题。请检查防火墙和连接配置。
property.aicodefix.admin.serviceInfo.result.unresponsive.causes.2=AI 代码修复服务可能已宕机。
property.aicodefix.admin.serviceInfo.result.requestError=错误检查 AI 代码修复服务：
property.aicodefix.admin.serviceInfo.result.serviceError=AI 代码修复服务正常访问，但是返回一个错误。通过日志了解更多信息。
property.aicodefix.admin.serviceInfo.result.unauthorized=SonarQube 实例不允许使用 AI 代码修复。
property.aicodefix.admin.serviceInfo.result.unknown=AI 代码修复服务返回非法消息：
property.aicodefix.admin.serviceInfo.result.error.title=AI 代码修复错误
property.aicodefix.admin.serviceInfo.result.error.retry.message=如果问题仍然存在，稍后重试或 { link }
property.aicodefix.admin.serviceInfo.result.error.retry.get_help=获取帮助
property.aicodefix.admin.serviceInfo.result.error.retry.action=重试
property.aicodefix.admin.promotion.title=收费特性
property.aicodefix.admin.promotion.subtitle=解锁 AI 生成修复建议
property.aicodefix.admin.promotion.content=使用Sonar AI CodeFix服务，使用户能够为选定项目或所有项目的问题生成AI建议的代码修复。
property.aicodefix.admin.promotion.content_2=要访问AI CodeFix，请升级到企业版及以上版本。
property.aicodefix.admin.promotion.learn_more=了解有关{link}的更多信息
property.aicodefix.admin.promotion.more_about_ai_fix_suggestions=更多关于人工智能生成的修复建议
property.aicodefix.admin.promotion.plan_pricing=计划和定价
property.aicodefix.admin.promotion.enterprise_only=仅限企业
property.aicodefix.admin.promotion.checkDocumentation=查看文档
property.aicodefix.admin.promotion.link=启用 AI 代码修复
property.aicodefix.admin.unpaid.promotion.link=探索升级选项
aicodefix.admin.provider.title=供应商
aicodefix.admin.provider.help=在我们的供应商之间进行选择，或携带您自己的型号
aicodefix.admin.provider.self_hosted=自托管（带上自己的模特）
aicodefix.admin.provider.sonar=Sonar
notification.aicodefix.ga.paid.inactive.admin.message=Sonar AI CodeFix现在可用于此实例。使其能够接收针对部分或全部项目的AI生成的代码修复建议。{link}
notification.aicodefix.ga.unpaid.active.admin.message=AI CodeFix的免费早期访问已经结束。若要继续接收AI生成的代码修复建议，请升级您的版本。{link}
notification.aicodefix.ga.unpaid.active.user.message=对AI CodeFix的免费早期访问已经结束——请咨询您的管理员进行升级，以继续接收AI生成的代码修复建议。
aicodefix.azure_open_ai.endpoint.label=终端
aicodefix.azure_open_ai.endpoint.help=提供Azure OpenAI API端点
aicodefix.azure_open_ai.apiKey.label=API 标识
aicodefix.azure_open_ai.apiKey.help=提供Azure OpenAI API密钥
aicodefix.azure_open_ai.apiKey.update_placeholder=值隐藏，请键入新密钥进行更新
aicodefix.updated=您的实例上的AI CodeFix设置为{0}！
aicodefix.update_error=保存设置失败。 {0}
aicodefix.cancel.modal.title=您确定要取消吗？
aicodefix.cancel.modal.description=您有未保存的更改。所有未保存的更改都将丢失。
aicodefix.cancel.modal.continue_editing=继续编辑
search.shortcut_hint=提示：点击 {0} 随时打开搜索条。
search.show_more.hint=点击 {0} 显示
search.placeholder=搜索项目，子项目和文件
search.search_for_projects=搜索项目...
search.search_for_cves=搜索 CVEs...
search.search_for_dependencies=搜索依赖...
search.search_for_members=搜索成员...
search.search_for_users=搜索用户...
search.search_for_users_or_groups=搜索用户或群组...
search.search_by_login_or_name=根据登录名或姓名搜索...
search.search_by_name=根据姓名搜索...
search.search_by_name_or_key=根据姓名或标识搜索...
search.search_for_tags=搜索标签...
search.search_for_repositories=搜索仓库...
search.search_for_rules=搜索规则...
search.search_for_languages=搜索语言...
search.search_for_cwe=搜索 CWEs...
search.search_for_authors=搜索作者...
search.search_for_directories=搜索目录...
search.search_for_files=搜索文件...
search.search_for_modules=搜索模块...
search.search_for_metrics=搜索指标...
search.search_for_profiles=搜索质量配置...
search.tooShort=至少输入 {0} 个字符
global_search.shortcut_hint=提示：随时按下 'S' 键打开搜索栏。
help.section.links=连接
help.section.shortcuts=快捷方式
help.section.tutorials=教程
shortcuts.section.global=全局
shortcuts.section.global.search=快速打开搜索条
shortcuts.section.global.shortcuts=打开窗口
shortcuts.section.global.facets.multiselection=Ctrl + 鼠标左键添加选择
shortcuts.section.issues=问题页
shortcuts.section.issues.navigate_between_issues=问题导航
shortcuts.section.issues.open_details=由问题列表进入源码
shortcuts.section.issues.return_to_list=返回列表
shortcuts.section.issue.do_transition=转移问题
shortcuts.section.issue.assign=分配问题
shortcuts.section.issue.assign_to_me=把问题分配给当前用户
shortcuts.section.issue.change_severity=修改问题严重性
shortcuts.section.issue.comment=评论问题
shortcuts.section.issue.submit_comment=提交评论
shortcuts.section.issue.change_tags=修改问题标签
shortcuts.section.rules=规则页
shortcuts.section.rules.navigate_between_rules=规则导航
shortcuts.section.rules.open_details=由规则列表进入规则详情
shortcuts.section.rules.return_to_list=返回规则列表
shortcuts.section.rules.activate=激活规则
shortcuts.section.rules.deactivate=禁用规则
shortcuts.on_page.intro=本业允许使用以下快捷键：
shortcuts.on_page.left_x=左箭头：{0}
shortcuts.on_page.left_right_x=左右箭头：{0}
shortcuts.on_page.up_down_x=上下箭头：{0}
shortcuts.on_page.meta_x=Alt + 箭头键：{0}
tutorials.onboarding=分析新项目
tutorials.skip=跳过教程
tutorials.finish=完成教程
tutorials.find_tutorial_back_in_help=随时在帮助里找到它
tutorials.find_tutorial_back_in_plus=任何时候在 "+" 菜单中可以找到它
select2.noMatches=没有匹配结果
select2.searching=搜索中...
select2.tooShort=请至少输入 {0} 个字符
select.search.tooShort=请至少输入 {0} 个字符
select.search.noMatches=无匹配
duplications.dups_found_on_deleted_resource=这个文件包含了一些已删除的重复代码。项目应该重新分析移除这些过期的重复代码。
code_viewer.no_source_code_displayed_due_to_empty_analysis.TRK=分析未找到代码。
code_viewer.no_source_code_displayed_due_to_empty_analysis.APP=当前应用下无项目。
code_viewer.no_source_code_displayed_due_to_empty_analysis.VW=当前目录下无项目，应用或目录。
code_viewer.no_source_code_displayed_due_to_empty_analysis.SVW=当前目录下无项目，应用或目录。
code_viewer.no_source_code_displayed_due_to_security=根据安全设置，不显示源代码。
code_viewer.no_source_code_displayed_due_to_source_removed=文件已删除，无法显示源代码。
code_viewer.not_all_measures_are_shown=未包含所有项目和应用
code_viewer.not_all_measures_are_shown.help=无权访问所有项目或应用。
code_viewer.portfolio_code_toggle_disabled.help=搜索项目或应用时，无法查看新代码和总代码指标。
code_viewer.loading=正在加载代码
custom_measures.page=自定义指标
custom_measures.page.description=更新这个项目的自定义指标。修改后下次分析才会起作用。必须在全局范围创建自定义指标。
custom_measures.deprecated=自定义指标已废弃，不久会删除。
custom_measures.pending=待定
custom_measures.pending_tooltip=配置会在下次分析时集成到项目中。
custom_measures.all_metrics_taken=已存在对于自定义指标的描述。
custom_measures.delete_custom_measure=删除自定义指标
custom_measures.delete_custom_measure.confirmation=是否确认删除自定义指标 "{0}"？
custom_measures.create_custom_measure=创建自定义指标
custom_measures.update_custom_measure=修改自定义指标
custom_measures.metric=指标
project_navigation.analysis_status.failed=最后一次分析失败了。
project_navigation.analysis_status.warnings=最后一次分析告警了。
project_navigation.analysis_status.pending=新分析正在等待中
project_navigation.analysis_status.in_progress=新分析正在执行
project_navigation.analysis_status.details_link=查看详情
project_navigation.analysis_status.details_link.label=查看最后一次分析的信息
project_navigation.binding_status.bound_to_x=绑定 {dop}
project_navigation.binding_status.not_bound=未绑定
project_navigation.binding_status.not_bound.tooltip=要启用基于您的 DevOps 平台的自动分析、自动配置的 PR 装饰和隐私设置，请联系管理员绑定此项目
project_navigation.binding_status.bind=绑定项目
project_navigation.binding_status.bind.tooltip=通过绑定您的项目，可以根据您的 DevOps 平台启用自动分析、自动配置的 PR 装饰和隐私设置。
project_activity.analysis=分析
project_activity.analysis_build_string_X=构建内容：{0}
project_activity.add_version=新建版本
project_activity.analysis_X_actions=显示分析 {0} 的操作
project_activity.show_analysis_X_on_graph=显示分析 {0} 的互动图表信息。提示：数据也能显示为表格。可以点击图表下方的按钮进行切换。
project_activity.remove_version=删除版本
project_activity.remove_version.question=是否确认删除这个版本？
project_activity.change_version=修改版本
project_activity.add_custom_event=新建自定义事件
project_activity.change_custom_event=修改事件
project_activity.remove_custom_event=删除事件
project_activity.remove_custom_event.question=是否确认删除这个事件？
project_activity.reset_dates=重置时间
project_activity.delete_analysis=删除分析
project_activity.delete_analysis.question=是否确认从项目历史中删除这次分析？
project_activity.filter_events=过滤事件
project_activity.filter_events.placeholder=选择事件
project_activity.filter_date_range=日期范围条件
project_activity.events.tooltip.edit=修改事件
project_activity.events.tooltip.delete=删除事件
project_activity.new_code_period_start=新代码周期由此开始
project_activity.new_code_period_start.help=此处之前的分析将作为新代码比较的基线
project_activity.graphs.choose_type=选择图表类型
project_activity.graphs.explanation_x=交互图为以下项目显示随时间变化的指标：{0}
project_activity.graphs.issues=问题
project_activity.graphs.coverage=覆盖率
project_activity.graphs.duplications=重复度
project_activity.graphs.custom=自定义
project_activity.graphs.custom.add=添加指标
project_activity.graphs.custom.add_metric=添加一个指标
project_activity.graphs.custom.select_metric=选择显示指标
project_activity.graphs.custom.add_metric_info=图表中只能显示相同类型的三个指标。
project_activity.graphs.custom.remove_metric=从图表中删除 {0} 指标
project_activity.graphs.custom.no_history=没有可显示的历史数据，请为图形添加更多指标。
project_activity.graphs.custom.metric_no_history=这个指标没有可供显示的历史数据。
project_activity.graphs.custom.search=根据名称搜索指标
project_activity.graphs.custom.type_x_message=当前的选择只有 "{0}" 个有效指标。
project_activity.graphs.graph_shown_x=图表显示 {0}
project_activity.graphs.open_in_table=点击 '回车' 可以在表格中显示图表数据。
project_activity.graphs.data_table.title=表格格式显示图表数据
project_activity.graphs.data_table.max_lines_warning=只显示最近 {0} 数据。如果想看其他数据，可以在主页修改日期范围。
project_activity.graphs.data_table.no_data_warning=选中序列没有数据
project_activity.graphs.data_table.no_data_warning_check_dates_x=选择时间范围没有数据（{start} 之后），可以在主页修改时间范围。
project_activity.graphs.data_table.no_data_warning_check_dates_y=选择时间范围没有数据（{end} 之前），可以在主页修改时间范围。
project_activity.graphs.data_table.no_data_warning_check_dates_x_y=选择时间范围没有数据（{start} 至 {end}），可以在主页修改时间范围。
project_activity.graphs.data_table.data_gap=一或多个项目存在不可用信息时，相关的软件质量的历史问题图表可能包含空白。
project_activity.graphs.rating_split.title=度量计算已更改
project_activity.graphs.rating_split.description=我们计算评级的方式已改变，它可能影响度量的值。
project_activity.graphs.rating_split.info_icon=度量计算变化信息
project_activity.custom_metric.covered_lines=覆盖行
project_activity.custom_metric.deprecated.severity=旧的严重性和相关搜索已被废弃。
project_activity.custom_metric.deprecated.quality=问题类型和相关搜索已被废弃。可以使用软件质量进行过滤。
project_activity.custom_metric.deprecated.confirmed=确认问题和相关搜索已被废弃。
update_key.old_key=旧标识
update_key.new_key=新标识
update_key.are_you_sure_to_change_key=是否确认修改 "{0}" 的标识，包含所有的模块和资源？
project_quality_profile.instance_default=实例默认
project_quality_profile.successfully_updated={0} 质量配置更新成功。
project_quality_profile.subtitle=管理项目质量配置
project_quality_profile.always_use_default=使用实例默认质量配置
project_quality_profile.current=当前质量配置
project_quality_profile.always_use_specific=指定一个质量配置
project_quality_profile.change_lang_X_profile=修改 {0} 质量配置
project_quality_profile.requires_new_analysis=下次分析后生效。
project_quality_profile.add_language.title=添加新语言
project_quality_profile.add_language.description=在下次分析前，为新语言手工指定一个配置
project_quality_profile.add_language.action=添加语言
project_quality_profile.add_language_modal.title=添加一门语言
project_quality_profile.add_language_modal.choose_language=选择语言
project_quality_profile.add_language_modal.choose_profile=选择配置
project_quality_profile.add_language_modal.no_active_rules=配置没有启用任何规则
project_quality_profile.add_language_modal.profile_unavailable_no_active_rules=配置没有启用任何规则，无法使用。请在配置中至少启用一条规则。
project_quality_profile.add_language_modal.go_to_profile=进入质量门禁
project_quality_profile.change_profile_x=修改 {x} 配置
project_quality_profile.page=质量配置
project_quality_profile.page.description=每种语言都会自动分配此实例的默认质量配置文件。作为项目管理员，您可以覆盖默认分配并为此项目中使用的语言选择不同的配置文件。
project_quality_profile.profiles_by_languages=语言配置
project_quality_profile.profiles_by_languages.description=为每种语言，选择与此项目关联的配置文件。
project_quality_profile.contains_ai_code.title=该项目包含AI生成的代码
project_quality_profile.contains_ai_code.description=sonar 方式是AI生成代码的推荐质量配置文件。虽然这不是强制性的步骤，但我们建议您查看您的质量配置以确定保障。 <p>浏览文档了解原因</p>
ai_generated_code.page=AI 生成代码
ai_generated_code.contains_code.title=包含 AI 生成代码
ai_generated_code.contains_code=包含 AI 生成代码
ai_generated_code.description= <p>如果您的项目包含人工智能生成的代码，请选择此选项。这是获得Sonar的<link>AI代码保证</link>的第一步。 </p>
ai_generated_code_protected.title=你的 AI 生成代码已被保护
ai_generated_code_protected.description=该项目使用的质量门禁符合AI代码保证的资格。
ai_generated_code_not_protected.title=通过“AI代码保障”保护您的人工智能生成的代码
ai_generated_code_not_protected.description=该项目使用的质量门禁不符合AI代码保证的资格。
ai_generated_code.change_quality_gate=改变质量门禁
ai_generated_code.success_message=AI生成的代码设置已成功更新。
ai_generated_code.autodetect=自动检测AI生成的代码
ai_generated_code.autodetect.description=选择此选项允许SonarQube服务器在本项目中自动检测AI生成的代码。此功能目前支持使用GitHub和GitHub Copilot的组织，并依赖于GitHub应用程序的“GitHub Copilot Business”组织权限。
ai_generated_code.autodetect.label=在此项目中自动检测AI生成的代码
ai_generated_code.autodetect.turned_off_globally=此设置对此 SonarQube Server 实例全局关闭。它不能用于这个项目。
ai_generated_code.autodetect.success_message=AI生成的自动检测已成功更新。
ai_generated_code.autodetect.detected_code=这个项目可能包含AI生成的代码。该项目的一些贡献者最近使用了GitHub Copilot。我们建议您在下面激活“包含人工智能生成的代码”，以便从Sonar的AI代码保障中受益。
ai_generated_code.review_profiles.title=查看本项目的质量概况
ai_generated_code.review_profiles.title.aica_on=人工智能代码保障已启用。请考虑审查本项目的质量概况。
ai_generated_code.review_profiles.description=sonar 方式是AI生成代码的推荐质量配置文件。虽然这不是强制性的步骤，但我们建议您查看质量配置以确保保护。
ai_generated_code.review_profiles.button=审查质量概况
ai_generated_code.review_profiles.link=浏览文档了解原因
project_quality_gate.default_qgate=默认
project_quality_gate.successfully_updated=成功更新质量门禁。
project_quality_gate.always_use_default=使用实例默认质量门禁
project_quality_gate.always_use_specific=使用指定质量门禁
project_quality_gate.select_specific_qg=选择质量门禁
project_quality_gate.requires_new_analysis=修改会在下次分析后生效
project_quality_gate.no_condition=质量门禁为空。如需使用，请添加条件 {link}。
project_quality_gate.no_condition_on_new_code=质量门禁的条件指定为全部代码，但不对新代码生效。它不会出现在拉取请求中。如需用于拉取请求，请添加条件 {link}。
project_quality_gate.no_condition.link=质量门禁定义
project_quality_gate.no_condition.reason=无条件
project_quality_gate.ai_assured_quality_gate=此质量门禁符合 AI 代码保障
project_quality_gate.not_ai_assured_quality_gate=此质量门进不符合 AI 代码保障
project_quality_gate.ai_generated_code_protected.title=正在保护你的 AI 生成代码
project_quality_gate.ai_generated_code_protected.description=<p>此项目包含 AI 生成代码，选择的质量门禁符合 <link>AI 代码保障</link>。</p>
project_quality_gate.ai_generated_code_not_protected.title=使用 ‘AI 代码保障’ 保护你的 AI 生成代码
project_quality_gate.ai_generated_code_not_protected.description=<p>此项目包含 AI 生成代码。今已使用对应的质量门禁以启用 <link>AI 代码保障</link>。</p><p>可以使用 <linkSonarWay>AI 代码 的 Sonar 方案</linkSonarWay> 或 <linkQualifyDoc>为 AI 代码保障配置你自己的定义的质量门禁</linkQualifyDoc>。</p> 
project_deletion.delete_resource_confirmation=确认删除 {0}？
project_deletion.resource_deleted=项目 "{0}" 已删除。
projects_management.delete_resource_confirmation=确认删除 "{0}"？
projects_management.delete_selected_warning=将删除 {0} 条选中信息。
projects_management.delete_all_warning=将删除所有 {0} 信息。
projects_management.project_has_been_successfully_created=项目 {project} 创建成功。
projects_management.select_project=选择项目 {0}
projects_management.show_actions_for_x=显示项目 {0} 的操作 
projects_management.filter_by_component=根据组件过滤
projects_management.filter_by_visibility=根据可见性过滤
project.info.title=项目信息
application.info.title=应用信息
project.about.title=项目简介
application.about.title=应用简介
project.info.description=描述
project.info.empty_description=没有描述
application.info.empty_description=没有描述
project.info.quality_gate=使用的质量门禁
project.info.quality_gate.link_label={gate} - 此项目的质量门禁。点击跳转至质量门禁页面。
project.info.to_notifications=设置提醒
project.info.notifications=设置提醒
project.info.main_branch=主分支
project.info.see_more_info_on_x_locs=显示 {0} 行代码的更多信息
project.info.make_home.title=设置为首页
project.info.make_home.label=把项目设置为我的首页
application.info.make_home.label=把应用设置为我的首页
project.info.make_home.tooltip=当登录 SonarQube 或点击左上方 SonarQube logo 时会自动跳转到此项目。
application.info.make_home.tooltip=当登录 SonarQube 或点击左上方 SonarQube logo 时会自动跳转到此应用。
overview.project_key.tooltip.TRK=项目标识是项目的唯一标识。如果使用 Maven，标识需要匹配 "groupId:artifactId" 格式。
overview.project_key.tooltip.APP=应用标识是应用的唯一标识。
project.info.contain_ai_code.title=AI 代码
project.info.contain_ai_code.description=此项目包含 AI 生成代码。
project.info.detected_ai_code.description=此项目可能包含 AI 生成代码。
project.info.ai_code_assurance.title=AI 代码保障
project.info.ai_code_assurance.on.description=此项目已通过 Sonar AI 代码保障获益。
project.info.ai_code_assurance.off.description=此项目试用了一个 <link>合格的 AI质量门禁</link>，从而通过 AI 代码保障获益。
project.info.ai_code_assurance.off.description_for_admin=为从 AI 代码保障获益，选择一个合格的 AI 质量门禁。
project.info.ai_code_fix.title=AI 代码修复
project.info.ai_code_fix.message=此项目已启用 AI 代码修复。
quality_profiles.page_title_changelog_x={0} 修改记录
quality_profiles.page_title_compare_x={0} 比较
quality_profiles.new_profile=新配置
quality_profiles.compare_with=比较
quality_profiles.filter_by=搜索配置
quality_profiles.select_lang=选择语言
quality_profiles.restore_profile=恢复配置
quality_profiles.restore_profile.success="{0}" 配置的 {1} 个规则已恢复
quality_profiles.restore_profile.warning="{0}" 配置的 {1} 个规则已恢复，{2} 个规则已忽略
quality_profiles.optional_configuration_file=可选配置文件
quality_profiles.new_name=新名称
quality_profiles.no_languages_available=没有可用语言。你不能创建新配置。
quality_profiles.delete_confirm_title=删除配置
quality_profiles.delete_confirm_description=您将要删除配置文件。
quality_profiles.are_you_sure_want_delete_profile_x=确认删除配置 "{0}"？
quality_profiles.are_you_sure_want_delete_profile_x_and_descendants=确认删除配置 "{0}" 和它的所有子项？
quality_profiles.this_profile_has_descendants=配置存在子项。
quality_profiles.profile_inheritance=配置继承
quality_profiles.no_projects_associated_to_profile=这个配置下没有分配任何项目。
quality_profiles.cannot_associate_projects_no_rules=如需为项目启用配置，至少需要启用一条规则。
quality_profiles.cannot_set_default_no_rules=如需将配置设置为默认，至少需要启用一条规则。
quality_profiles.warning.used_by_projects_no_rules=当前配置已用于多个项目，但是没有启用规则。请为配置至少启用一条规则。
quality_profiles.warning.is_default_no_rules=此配置为默认配置，但配置中未包含生效规则。请为此配置至少启用一个规则。
quality_profiles.parent=上级：
quality_profiles.parameter_set_to=参数 {0} 设置为 {1}
quality_profile.summary_additional={count} 多余 {count, plural, one {rule} other {rules}}
quality_profile.summary_fewer={count} 少于 {count, plural, one {rule} other {rules}}
quality_profile.summary_differences1={profile} 对应 {additional} 和 {fewer} 对比 {comparedProfile}.
quality_profile.summary_differences2={profile} 对应 {difference} 对比 {comparedProfile}
quality_profiles.x_rules_only_in={0} 规则只包含在
quality_profiles.x_rules_have_different_configuration={0} 规则存在不同配置
quality_profiles.copy_x_title=复制配置 {0}
quality_profiles.extend_x_title=扩展配置 "{0}" - {1}
quality_profiles.rename_x_title=重命名配置 {0} - {1}
quality_profiles.deprecated=废弃
quality_profiles.severity_set_to=严重性设置为
quality_profiles.changelog.ACTIVATED=激活
quality_profiles.changelog.DEACTIVATED=停用
quality_profiles.changelog.UPDATED=更新
quality_profiles.changelog.parameter_reset_to_default_value=参数 {0} 重置为默认值
quality_profiles.changelog.prioritized_rule_changed=优先规则设置为 {flag}
quality_profiles.changelog.cca_and_category_changed=干净代码分类设置为 {newCleanCodeAttributeCategory} 属性设置为 {newCleanCodeAttribute}，前值为 {oldCleanCodeAttributeCategory} 和 {oldCleanCodeAttribute}
quality_profiles.changelog.cca_only_changed=干净代码属性设置为 {newCleanCodeAttribute}，前值为 {oldCleanCodeAttribute}
quality_profiles.changelog.impact_changed=软件影响设置为 {newSoftwareQuality} 严重性为 {newSeverity}，前值为 {oldSoftwareQuality} 和严重性 {oldSeverity}
quality_profiles.changelog.impact_added=添加了软件影响 {newSoftwareQuality} 和严重性 {newSeverity}
quality_profiles.changelog.impact_removed=删除了软甲影响 {oldSoftwareQuality} 和严重性 {oldSeverity}
quality_profiles.changelog.sq_upgrade=实例更新至 {sqVersion}
quality_profiles.deleted_profile=配置 {0} 已不存在
quality_profiles.projects_for_default=没有指定质量配置的项目，默认会分配为这个配置。
quality_profile.x_rules={count} 条规则
quality_profile.lang_deprecated_x_rules={name}, {count} 条废弃规则
quality_profile.x_active_rules={0} 激活规则
quality_profile.x_inactive_rules={0} 禁用规则
quality_profile.rules.breakdown=规则分解
quality_profile.rules.cct_categories_title=干净代码分类
quality_profile.rules.software_qualities_title=软件质量
quality_profile.rules.see_x_active_x_rules=参考 {0} 启用 {1} 规则
quality_profile.rules.see_x_inactive_x_rules=参考 {0} 禁用 {1} 规则
quality_profiles.x_overridden_rules={0} 覆盖规则
quality_profiles.change_parent=修改父类
quality_profiles.change_parent_warning=修改配置父类后，会丢失对集成规则进行的手工禁用操作。意味着之前禁用的规则会重新启用。
quality_profiles.all_profiles=所有配置
quality_profiles.x_profiles={name}, {count} 配置
quality_profiles.projects.select_hint=点击为此项目分配质量配置
quality_profiles.projects.deselect_hint=点击取消此项目和质量配置的关联
quality_profile.empty_comparison=质量配置是相同的。
quality_profiles.activate_more=更多激活规则
quality_profiles.activate_more.help.built_in=内置质量配置，不能手工修改。如果想激活更多规则，可以通过继承创建一个新的配置，再添加规则。
quality_profiles.activate_more_rules=激活更多规则
quality_profiles.comparison.activate_rule=为配置 {0} 激活规则
quality_profiles.comparison.deactivate_rule=对配置 "{profile}" 禁用规则
quality_profiles.intro=质量配置文件是在分析过程中应用的规则集合。每种语言都有一个默认配置文件。所有未明确分配给其他配置文件的项目都将使用默认值进行分析。理想情况下，所有项目都将对一种语言使用相同的概要文件。
quality_profiles.list.projects=项目
quality_profiles.list.projects.help=分配了配置的项目会使用对应的语言进行分析，无论是否默认的配置。质量配置管理员会为项目分配配置。项目管理员会为每个语言选择非默认的配置。
quality_profiles.list.rules=规则
quality_profiles.list.updated=更新
quality_profiles.list.used=使用
quality_profiles.list.default.help=每个语言都会有一个默认配置。没有特别分配规则的项目会使用默认配置进行分析。
quality_profiles.x_updated_on_y={0}，更新于 {1}
quality_profiles.change_projects=修改项目
quality_profiles.not_found=找不到请求的质量配置。
quality_profiles.back_to_list=返回质量配置列表
quality_profiles.latest_new_rules=最近新规则
quality_profiles.latest_new_rules.activated={0} 已激活，配置 {1}
quality_profiles.latest_new_rules.not_activated={0} 未激活
quality_profiles.latest_new_rules.see_all_x=查看全部 {count} 最近新增规则
quality_profiles.deprecated_rules=废弃规则
quality_profiles.x_deprecated_rules={linkCount} 被废弃 {count, plural, one {rule} other {rules}}
quality_profiles.deprecated_rules_description=被废弃的规则最终都会消失。你应该赶快研究一下如何替换它们。
quality_profiles.deprecated_rules_are_still_activated=废弃规则依然在被质量配置 {0} 使用。
quality_profiles.sonarway_missing_rules=未包含 Sonar 方案规则
quality_profiles.sonarway_missing_rules_description=你的配置中缺少推荐的规则。
quality_profiles.x_sonarway_missing_rules={linkCount} Sonar 方案 {count, plural, one {rule} other {rules}} 未包含
quality_profiles.sonarway_see_x_missing_rules=查看 {0} 确实的 Sonar 方案规则
quality_profiles.stagnant_profiles=停滞的配置
quality_profiles.not_updated_more_than_year=下列配置已经超过一年未更新了：
quality_profiles.exporters=导出
quality_profiles.exporters.deprecated=导出已废弃，会在未来版本中删除。
quality_profiles.updated_=更新：
quality_profiles.used_=使用：
quality_profiles.built_in=内置
quality_profiles.built_in.description=可能自动更新内置质量配置。
quality_profiles.built_in.aica_description=这是一个内置的质量配置文件，可以自动更新。我们建议对包含人工智能生成代码的项目使用 sonar 方式，因为需要严格的标准来确保此类代码的安全性。 </aica> <link>浏览文档了解原因</link>
quality_profiles.extends_built_in=因为它继承自一个内置的质量配置，这个质量配置会根据对应的插件配置而自动更新。
quality_profiles.no_built_in_updates_warning=此质量配置没有继承自内置配置。增加新规则时无法自动更新。
quality_profiles.no_built_in_updates_warning_admin=为了实现自动更新，需要把对应的内置质量设置为质量配置的父类。
quality_profiles.no_built_in_updates_warning.new_profile=新建的质量配置没有继承自内置配置。增减新规则时无法自动更新。
quality_profiles.no_built_in_updates_warning.new_profile.2=为了实现自动更新，应该设置为从内置质量配置继承的方式。
quality_profiles.default_permissions=拥有“管理质量配置”权限的用户才能管理质量配置。
quality_profiles.grant_permissions_to_more_users=授权给更多用户
quality_profiles.grant_permissions_to_user_or_group=授权给一个用户或一个组
quality_profiles.additional_user_groups=更多用户/群组：
quality_profiles.search_description=根据登录或姓名搜索用户，根据名称搜索群组
quality_profiles.permissions.remove.user=删除用户权限
quality_profiles.permissions.remove.user_x=删除用户 {0} 的权限
quality_profiles.permissions.remove.user.confirmation=是否确认删除用户 {user} 的质量配置权限？
quality_profiles.permissions.remove.group=删除群组权限
quality_profiles.permissions.remove.group_x=删除 {0} 的权限
quality_profiles.permissions.remove.group.confirmation=是否确认删除群组 {user} 的质量配置权限？
quality_profiles.copy_help=复制 {0} 为新的质量配置。这两个配置会单独维护。
quality_profiles.extend_help=创建子质量配置，并从 {0} 集成所有启用的规则。对 {0} 的修改会影响子配置。
quality_profiles.extend_description=配置扩展自 {link}。
quality_profiles.extend_description_help=对 {0} 或它父类的修改会影响这个质量配置。
quality_profiles.chose_creation_type=希望创建哪种类型的质量配置？
quality_profiles.creation_from_extend=扩展现存质量配置
quality_profiles.creation_from_extend_description_1=创建子质量配置集成父类已启用规则。
quality_profiles.creation_from_extend_description_2=对父类的修改会影响子配置。
quality_profiles.creation_from_copy=复制现存质量配置
quality_profiles.creation_from_copy_description_1=基于现存父类复制一个新的质量配置。
quality_profiles.creation_from_copy_description_2=两个配置会独立维护。
quality_profiles.creation_from_blank=创建空质量配置
quality_profiles.creation_from_blank_description=创建一个默认不启用任何规则的新质量配置。
quality_profiles.creation.choose_parent_quality_profile=可以扩展的配置
quality_profiles.creation.choose_copy_quality_profile=可以复制的配置
quality_profiles.name_invalid=质量配置名称不能为空
quality_profiles.actions=打开 {0} {1} 质量配置操作
quality_profiles.aica.tooltip.icon=此质量配置文件推荐用于AI生成的代码
quality_gate.create=创建
quality_gates.create=创建质量门禁
quality_gates.rename=重命名质量门禁
quality_gates.delete=删除质量门禁
quality_gates.copy=复制质量门禁
quality_gates.cannot_copy_no_cayc=如需复制质量门禁，需要遵循“编码时清理”。
quality_gates.is_default_no_conditions=当前为默认质量门禁，还没有配置条件。请为此质量门禁至少配置一个条件。
quality_gates.is_built_in.description=大部分项目都可以推荐使用 Sonar 方案。 {link}
quality_gates.is_built_in.cayc.description=只需要联系一个质量门禁 {link}
quality_gates.is_built_in.ai.description=此质量门禁已设置 {link}
quality_gates.conditions=条件
quality_gates.conditions.help=项目中的新代码和全部代码的条件都需要通过质量门禁。
quality_gates.conditions.help.link=参考：清理代码
quality_gates.projects=项目
quality_gates.projects.help=没有特别指定质量门禁的项目都会使用默认门禁。质量配置和质量门禁管理员可以为项目分配质量门禁。项目管理员也可以选择非默认的质量门禁。
quality_gates.add_condition=添加条件
quality_gates.add_condition.metric_from_other_mode=此质量门禁已拥有一个同等条件，基于相同的概念 ("{metric}")，对应{isStandardMode, select, true {Standard Experience} other {Multi-Quality Rule Mode}}。更新指标，可以编辑这些条件。
quality_gates.condition.edit=为 {0} 修改条件
quality_gates.condition.delete=为 {0} 删除条件
quality_gates.condition_added=成功添加条件。
quality_gates.update_condition=修改条件
quality_gates.condition_updated=成功修改条件。
quality_gates.conditions_updated=成功修改条件。
quality_gates.conditions_updated_to_the_mode="{qualityGateName}" 门禁的指标已成功更新
quality_gates.conditions.error_message.percent=数值必须在 0 至 100 之间
quality_gates.conditions.error_message.default=数值不合法
quality_gates.no_conditions=无条件
quality_gates.health_icons=项目健康度图标展示：
quality_gates.projects_for_default=没有指定质量门禁值的项目默认都会分配到此。
quality_gates.projects.with=和
quality_gates.projects.without=非
quality_gates.projects.all=所有
quality_gates.projects.noResults=没有项目
quality_gates.projects.select_hint=点击关联项目和质量门禁值
quality_gates.projects.deselect_hint=点击删除项目和质量门禁值的关联
quality_gates.projects.cannot_associate_projects_no_conditions=如果为项目分配此质量门禁，至少需要配置一个条件。
quality_gates.projects.ai_assured_message=此项目包含 AI 生成代码。必须使用 Sonar 流。
quality_gates.operator.LT=小于
quality_gates.operator.inverted.LT=大于等于
quality_gates.operator.GT=大于
quality_gates.operator.inverted.GT=小于等于
quality_gates.operator.EQ=相等
quality_gates.operator.NE=不是
quality_gates.operator.LT.short=<
quality_gates.operator.GT.short=>
quality_gates.operator.EQ.short==
quality_gates.operator.NE.short=\u2260
quality_gates.operator.LT.rating=优于
quality_gates.operator.GT.rating=劣于
quality_gates.operator.EQ.rating=相等
quality_gates.operator.NE.rating=不相等
quality_gates.operator.least=至少
quality_gates.operator.GTE=大于或等于
quality_gates.delete.confirm.message=确认删除 "{0}" 质量门禁值？
quality_gates.delete_condition=删除条件
quality_gates.condition_deleted=成功删除条件
quality_gates.delete_condition.confirm.message=确认删除 "{0}" 条件？
quality_gates.conditions.fails_when=质量门禁失败，原因
quality_gates.conditions.metric=指标
quality_gates.conditions.builtin_overall.metric={metric} 为 {operator} {value}
quality_gates.conditions.cayc=为了让新代码保持干净：
quality_gates.conditions.cayc.description=这些条件对所有分支和合并请求的新代码生效。
quality_gates.conditions.builtin_new_code.metric={metric} 为 {operator} {value}
quality_gates.conditions.cayc.hint=以下条件必须为真才能让项目通过质量门禁。
quality_gates.conditions.cayc.threshold.hint=Sonar 推荐使用这个阈值。可以创建新质量门禁设置不同的阈值。
quality_gates.conditions.new_code=新代码
quality_gates.conditions.new_code.long=新代码的条件
quality_gates.conditions.new_code.description=应用于所有分支和拉请求的新代码条件
quality_gates.conditions.new_code_1=新代码有 1 个条件失败
quality_gates.conditions.new_code_x=新代码有 {0} 个条件失败
quality_gates.conditions.overall_code=全部代码
quality_gates.conditions.overall_code.long=全部代码条件
quality_gates.conditions.overall_code.description=只应用于长期分支的所有代码的条件
quality_gates.conditions.overall_code_1=全部代码有 1 个条件失败
quality_gates.conditions.overall_code_x=全部代码有 {0} 个条件失败
quality_gates.conditions.x_conditions_failed={conditions} {conditions, plural, one {condition} other {conditions}} 失败
quality_gates.conditions.operator=操作
quality_gates.conditions.value=值
quality_gates.conditions.threshold=设置条件
quality_gates.conditions.where=位置
quality_gates.duplicated_conditions=质量门禁存在重复条件：
quality_gates.intro.1=质量门禁是一系列对项目指标进行评估的条件。项目必须达到所有条件才能算整体上通过了质量门禁。
quality_gates.intro.2=可以为没有特别指定质量门禁的项目设置一个默认的质量门禁。
quality_gates.built_in=内置
quality_gates.built_in.help=内置，不变的质量门禁是一种最佳实践。
quality_gates.built_in.description.1=这个质量门禁是默认提供的。
quality_gates.built_in.description.2=它会随着最新推荐自动更新。
quality_gates.status=质量门禁状态
quality_gates.help.title=什么是质量门禁？
quality_gates.help.desc=质量门禁是一系列基于指标的布尔表达式。它可以帮助我们实时了解项目是否已经满足生产要求了。理想情况下，所有项目使用相同的质量门禁。每个项目的质量门禁状态都会展示在首页。
quality_gates.help.link=了解更多质量门禁信息
quality_gates.permissions=权限
quality_gates.permissions.help=拥有全局“管理质量门禁”权限，以及下列用户可以管理这个质量门禁。
quality_gates.permissions.grant=为用户或群组授予权限
quality_gates.permissions.search=使用账号或姓名搜索用户，使用名称搜索群组：
quality_gates.permissions.remove.user=删除用户权限
quality_gates.permissions.remove.user.confirmation=是否确认为用户 {user} 删除质量门禁权限？
quality_gates.permissions.remove.group=删除群组权限
quality_gates.permissions.remove.group.confirmation=是否确认为群组 {user} 删除质量门禁权限？
quality_gates.cayc=编码时清理
quality_gates.cayc_missing.banner.title=质量门禁未遵循“编码时清理”
quality_gates.cayc_missing.banner.description={cayc_link} 是编写干净代码的最有效方法。此质量门禁没有遵循这个方法论。强烈推荐更新质量门禁。
quality_gates.cayc_condition.review_update=检查并修复质量门禁
quality_gates.cayc.review_update_modal.header=修复 "{0}" 以遵循“编码时清理”
quality_gates.cayc.review_update_modal.confirm_text=修复质量门禁
quality_gates.cayc.review_update_modal.description1=此质量门禁会更新为遵循 {calc_link}。请检查以下修改。
quality_gates.cayc.review_update_modal.description2=其他条件不变
quality_gates.cayc_optimize.banner.title=质量门禁可以根据“编码时清理”进行优化
quality_gates.cayc_optimize.banner.description=质量门禁兼容了 {cayc_link} 方法论，但是可以进一步优化，保证新代码零问题。
quality_gates.cayc_condition.review_optimize=复审优化质量门禁
quality_gates.cayc.review_optimize_modal.header=根据“编码时清理”优化 "{0}"
quality_gates.cayc.review_optimize_modal.confirm_text=优化质量门禁
quality_gates.cayc.review_optimize_modal.description1=质量门禁可以根据 {cayc_link} 优化。请检查以下变更。
quality_gates.cayc.condition_simplification_list=确认新增和修改代码是否清理干净的条件列表。
quality_gates.cayc.condition_simplification_tour.page_1.title=“编码时清理”准备好了
quality_gates.cayc.condition_simplification_tour.page_1.content1=质量门禁的条件已经修改为确保任何新增和变更代码都是干净的。
quality_gates.cayc.condition_simplification_tour.page_2.title=单条件，零问题
quality_gates.cayc.condition_simplification_tour.page_2.content=<p>一个保证新代码没有问题的单独条件。</p> <p>此条件替换了安全评级，可靠性评级，可维护性评级三个条件。</p>
quality_gates.cayc.condition_simplification_tour.page_3.title=处理挂起问题
quality_gates.cayc.condition_simplification_tour.page_3.content1=现在开始，需要处理新代码中的所有问题，才能通过质量门禁。
quality_gates.cayc.condition_simplification_tour.page_3.content2=了解更多信息：解决问题
quality_gates.cayc.new_maintainability_rating.A=技术债务评级小于 {0}
quality_gates.cayc.new_maintainability_rating=技术债务评级大于 {1}
quality_gates.cayc.new_reliability_rating.A=无 bugs
quality_gates.cayc.new_security_rating.A=无安全风险
quality_gates.cayc.unlock_edit=解锁编辑
quality_gates.cayc.tooltip.message=此质量门禁未遵循“编码时清理”
quality_gates.cayc.badge.tooltip.learn_more=了解更多：“编码时清理”
quality_gates.cayc.banner.title=此质量门禁已遵循“自己的干净代码”
quality_gates.cayc.banner.description=此质量门禁已 <link>为编码时清理进行了配置</link>。它可以保证：
quality_gates.cayc_unfollow.description=可以点击解锁编辑质量门禁。向符合的质量门禁增加额外条件反而会增加弊端。请重新考虑 {cayc_link}。强烈建议使用这个方法论来达成干净代码的状态。
quality_gates.cayc.review_update_modal.add_condition.header=增加 {0} 个新代码条件
quality_gates.cayc.review_update_modal.modify_condition.header=修改 {0} 个新代码条件
quality_gates.ai_generated.tooltip.message=此质量门禁符合 AI 代码保障
quality_gates.ai_generated.description=此质量门禁符合 {link}
quality_gates.ai_generated.description.clean_ai_generated_code=AI 代码保障
quality_gates.mqr_mode_update.tooltip.message=为此质量门禁更新指标
quality_gates.mqr_mode_update.single_metric.tooltip.message=为 {mode} 更新 {metric} 指标
quality_gates.update_conditions.update_metrics=更新指标
quality_gates.update_conditions.header=为 “{qualityGate}” 门禁更新所有指标
quality_gates.update_conditions.header.single_metric=更新此指标
quality_gates.update_conditions.description.line1=以下<b>条件</b>会基于此实例的模式进行更新 ({mode})。
quality_gates.update_conditions.description.line2=一些情况下，你会看到一些条件的名称在不同模式下不会变化。这时，具体的计算逻辑会改为类似而非完全相同的情况。对<b>操作</b> 和 <b>值</b>的设置不会改变。
quality_gates.update_conditions.description.line3=注意，修改 {mode} 可能导致质量门禁失败。 {link}
quality_gates.update_conditions.description.link=了解更多信息，可以参考文档
quality_gates.update_conditions.standard_mode_header=标准经验指标
quality_gates.metric.standard_mode_short=标准经验
quality_gates.metric.standard_mode_long=标准经验指标
quality_gates.metric.mqr_mode_short=MQR 模式
quality_gates.metric.mqr_mode_long=MQR 模式指标
quality_gates.update_conditions.operator_and_value_header=操作和数值
quality_gates.update_conditions.removed=条件会被删除
quality_gates.update_conditions.error=无法更新一些条件
quality_gates.mode_banner.title=此质量门禁的条件使用了依赖 {mode} 的指标
quality_gates.mode_banner.description=此实例当前在 {link}。我们建议你更新质量门禁条件的指标，确保此模式下的问题分类和评级准确。
quality_gates.mode_banner.button=复审并更新指标
quality_gates.actions.disqualify_for_ai_code_assurance=取消 AI 代码保障
quality_gates.actions.qualify_for_ai_code_assurance=符合 AI 代码保障
quality_gates.disqualify_ai_modal.title=是否取消此质量门禁的 AI 代码保障 {count} {count, plural, one {project} other {projects}}？
quality_gates.disqualify_ai_modal_default.title=一些项目可能丢失他们的 AI 代码保障
quality_gates.disqualify_ai_modal.content.line1={count} {count, plural, one {project uses} other {projects use}} 此质量门禁会由 AI 代码保障中获益。如果取消，{count, plural, one {this project} other {these projects}} 会丧失 {count, plural, one {its} other {their}} AI 代码保障。
quality_gates.disqualify_ai_modal_default.content.line1=一些项目可能依赖默认质量门禁从 AI 代码保障中获益。如果取消，这些项目会丧失他们的 AI 代码保障。
quality_gates.disqualify_ai_modal.content.line2=是否继续？
quality_gates.disqualify_ai_modal.confirm=取消 AI 代码保障
rules.parameters=参数
rules.status.beta=Beta
rules.status.BETA=Beta
rules.status.deprecated=废弃
rules.status.DEPRECATED=废弃
rules.status.DEPRECATED.help=生成此问题的规则已废弃，即将删除。一旦删除规则，问题也会消失。
rules.status.ready=准备
rules.status.READY=准备
rules.status.REMOVED=删除
rules.status.REMOVED.help=生成此问题的规则已删除。下次分析，问题就会消失。
coding_rules.active_in_all_profiles=此配置已经对所有有效的质量配置进行了激活。
coding_rules.severity_deprecated=修改规则严重性的功能已废弃，未来将不可使用。
coding_rules.custom_severity.title=此质量配置中的规则严重性
coding_rules.custom_severity.description.standard=修改质量配置中的规则严重性 {link}
coding_rules.custom_severity.description.standard.link=不修改推荐严重性
coding_rules.custom_severity.description.mqr=在多质量模式下，严重性直接绑定影戏的软件质量。意味着 {link}
coding_rules.custom_severity.description.mqr.link=每个软件质量都有各自规则自身的严重性。
coding_rules.custom_severity.not_recommended=这时一个自定义严重性，推荐为 {recommended}
coding_rules.custom_severity.choose_severity=选择严重性
coding_rules.custom_severity.severity_with_recommended={severity} (推荐)
coding_rules.activate=激活
coding_rules.activate_in=激活
coding_rules.activate_in_quality_profile=质量配置中激活
coding_rules.activation_severity=激活严重性
coding_rules.activation_custom_severity=自定义 {count, plural, one {严重性} other {严重性}}:
coding_rules.available_since=生效时间
coding_rules.bulk_change=批量修改
coding_rules.bulk_change.success=修改了 {0} 条规则
coding_rules.bulk_change.warning=修改了 {0} 条规则，忽略了 {1} 条规则
coding_rules.bulk_change.no_quality_profile=无质量门禁
coding_rules.can_not_bulk_change=设置了自定义质量配置之后才能使用批量修改。可以从一个现有的内置配置复制新的质量配置，或者在质量配置列表中进行扩展。
coding_rules.can_not_deactivate=这条是继承的规则，不能忽略。
coding_rules.change_details=修改质量配置
coding_rules.change_details_x=修改质量配置 {0}
coding_rules.context.others.title=如何在其他组件或框架中修复该问题？
coding_rules.context.others.description.first=虽然上面没有列出项目使用的主要框架或组件，你可以再我们提供的教程中获取帮助信息。
coding_rules.context.others.description.second=注意：教程中提及的第三方库不一定适合你的代码。
coding_rules.context.others.description.do=第三方库可以用于使用的框架。
coding_rules.context.others.description.dont=不要直接把修复方法复制粘贴到代码里。
coding_rules.context.others.title_feedback=反馈建议
coding_rules.context.others.feedback_description_1=如果教程未生效，请反馈给我们。比如使用了什么框架，为什么解决方法未生效，把这些提交到 SonarQube 产品板块。
coding_rules.context.others.feedback_description_2=我们会尽快给出合适的方案。
coding_rules.context.others.feedback_description.link=提交想法
coding_rules.create=创建
coding_rules.create_custom_rule=创建自定义规则
coding_rules.custom_rule=自定义规则
coding_rules.custom_rule.help=自定义规则是由管理员通过模板创建的，是可以自由修改的规则。
coding_rules.custom_rule.activation_notice=注意：自定义规则的参数不会在激活时配置，只会在创建/编辑阶段配置。
coding_rules.custom_rule.software_quality_x={quality} 软件质量
coding_rules.custom_rule.select_software_quality=请选择至少一个软件质量
coding_rules.custom_rule.removal=需要注意的是自定义规则可能被删除。如果删除了自定义规则，它不会从 SonarQube 实例中消失，而是状态标记为 "已删除"，相关的问题可以继续正常显示。
coding_rules.custom_rules=自定义规则
coding_rules.deactivate_in_quality_profile=质量配置中的禁用项
coding_rules.deactivate_in_quality_profile_x=在质量配置中 {0} 禁用
coding_rules.delete_rule=删除规则
coding_rules.delete_rule_x=删除规则 {0}
coding_rules.delete.custom.confirm=是否确认删除自定义规则 "{0}"？
coding_rules.extend_description=扩展描述
coding_rules.deactivate_in=停用
coding_rules.deactivate=停用
coding_rules.deactivate.confirm=是否要在配置文件中停用此规则吗？
coding_rules.deactivate_in_all_quality_profiles=在所有 {0} 个配置文件中停用
coding_rules.inherits="{0}" 继承自 "{1}"
coding_rules.issues=问题
coding_rules.issues.only_main_branches=只包含项目主分支的问题。
coding_rules.most_violating_projects=违反规则最多的项目
coding_rules.most_violating_projects.more_x={count} 项目包含此规则的问题。 {link}
coding_rules.most_violating_projects.link=查看全部问题列表
coding_rules.need_extend_or_copy=内置质量配置中的规则是无法禁用的。可以从一个现有的内置配置复制新的质量配置，或者在质量配置列表中进行扩展。
coding_rules.no_results=无代码规则
coding_rules.no_issue_detected_for_projects=主项目分支下检测不到对应规则的任何问题。
coding_rules.no_tags=无标签
coding_rules.original=原始：
coding_rules.overrides="{0}" 覆盖了 "{1}"
coding_rules.parameter.empty=（无）
coding_rules.parameters=参数
coding_rules.parameters.default_value=默认值：
coding_rules.quality_profiles=质量配置
coding_rules.quality_profiles.description=列出所有启用了这个规则的质量配置。内置配置不允许修改。
coding_rules.quality_profiles.template_caption=这个规则模板在老版本的 SonarQube 的下列配置中是激活的。以后不能这样使用了。请创建一个自定义规则。
coding_rules.quality_profile=质量配置
coding_rules.reactivate=重新激活
coding_rules.reactivate.help=之前删除了一个编码相同的规则。请重新激活已存在的规则，或修改编码创建一个新规则。
coding_rules.return_to_list=返回列表
coding_rules.see_all=查看所有规则
coding_rules.remove_extended_description=删除扩展描述
coding_rules.remove_extended_description.confirm=是否确认删除这条扩展描述？
coding_rules.repository=规则仓库:
coding_rules.revert_to_parent_definition=回滚到上级定义
coding_rules.revert_to_parent_definition.confirm=这个规则会回滚到配置 {0} 中定义的参数。是否继续？
coding_rules.rule_template=规则模板
coding_rules.rule_template.help=规则模板可以让用户很容易的创建自己的规则。它们就像饼干工具一样，可以快速制作“自定义规则”。同一模板创建的规则会显示在规则详情页中。
coding_rules.rule_template.title=这个规则可以使用一个模板来创建自定义规则，它不能在配置中激活。
coding_rules._rules=规则
coding_rules.show_template=显示模板
coding_rules.skip_to_filters=跳至规则搜索
coding_rules.software_qualities.label=软件质量影响
coding_rules.cct_attribute.label=干净代码属性
coding_rules.to_select_rules=选择规则
coding_rules.to_navigate=跳转至规则
coding_rules.prioritized_rule.title=优先规则
coding_rules.impact_severity.tooltip_customized.standard=严重性为 {severity} 的{type}。这是与所选质量配置文件关联的自定义严重性。单击以获取更多信息。
coding_rules.impact_severity.tooltip_customized.mqr={severity}严重性对{quality}的影响。这是与所选质量配置文件关联的自定义严重性。单击以获取更多信息。
coding_rules.impact_customized.message=此配置中自定义了规则严重性
coding_rules.impact_customized.detail={softwareQuality} 由 {recommended} 改为 {customized}
coding_rules.severity_customized.message=规则严重性由 {recommended} 改为 {customized}
coding_rules.prioritized_rule.switch_label=全部代码中的所有相关问题都应该修复
coding_rules.prioritized_rule.note=为了让质量门禁失败，必须添加一个条件，检查优先规则中是否出现了任何问题。
coding_rules.rule_name.title=规则名称: {name}
coding_rules.quality_profile.title=质量配置: {name}
coding_rules.update_custom_rule=更新自定义规则
coding_rules.filters.activation=激活
coding_rules.filters.activation.active=激活
coding_rules.filters.activation.active_rules=启用规则
coding_rules.filters.activation.inactive=停用
coding_rules.filters.activation.help=选中一个质量配置后，就可以使用活动条件
coding_rules.filters.active_severity=活动严重程度
coding_rules.filters.active_severity.inactive=当选择了质量配置时，就可以配置活动严重程度条件
coding_rules.filters.availableSince=生效时间
coding_rules.filters.characteristic=特征
coding_rules.filters.description=描述
coding_rules.filters.quality_profile=质量配置
coding_rules.filters.inheritance=继承
coding_rules.filters.inheritance.inactive=选中一个继承的质量配置后，就可以使用继承条件
coding_rules.filters.inheritance.none=未继承
coding_rules.filters.inheritance.inherited=继承
coding_rules.filters.inheritance.x_inherited_from_y={0} 继承自 "{1}"
coding_rules.filters.inheritance.overrides=覆盖
coding_rules.filters.key=标识
coding_rules.filters.language=语言
coding_rules.filters.language.inactive=未选择质量配置时，才能使用语言选项
coding_rules.filters.name=名称
coding_rules.filters.repository=仓库
coding_rules.filters.severity=严重性
coding_rules.filters.security_hotspots=安全热点
coding_rules.filters.status=状态
coding_rules.filters.tag=标签
coding_rules.filters.template=模板
coding_rules.filters.template.is_template=只显示模板
coding_rules.filters.template.is_not_template=隐藏模板
coding_rules.filters.prioritizedRule.disabled=选择的质量配置已启用优先规则
coding_rules.filters.prioritizedRule.true=只显示优先
coding_rules.filters.prioritizedRule.false=隐藏优先
coding_rules.facet.languages=语言
coding_rules.facet.repositories=仓库
coding_rules.facet.impactSeverities=严重性
coding_rules.facet.active_impactSeverities=严重性
coding_rules.facet.cleanCodeAttributeCategories=整洁代码属性
coding_rules.facet.impactSoftwareQualities=软件质量
coding_rules.facet.tags=标签
coding_rules.facet.qprofile=质量配置
coding_rules.facet.qprofile.help.title=质量配置
coding_rules.facet.qprofile.help.desc=质量配置文件是在分析过程中应用的规则集合。
coding_rules.facet.qprofile.help.extra=按质量配置文件过滤活动规则时，将显示与之相关的任何自定义规则严重性。
coding_rules.facet.qprofile.help.learn_more=了解更多质量配置
coding_rules.facet.qprofile.link=参考：质量配置
coding_rules.facet.debt_characteristics=特征
coding_rules.facet.severities=默认严重性
coding_rules.facet.active_severities=严重性
coding_rules.facet.statuses=状态
coding_rules.facet.available_since=有效起始期
coding_rules.facet.inheritance=继承
coding_rules.facet.template=模板
coding_rules.facet.rule_key=规则
coding_rules.facet.types=类型
coding_rules.facet.prioritizedRule=优先规则
coding_rules.facet.security_hotspots.show_only=只显示安全热点
coding_rules.facets.languages=语言
coding_rules.facets.tags=标签
coding_rules.facets.repositories=仓库
coding_rules.facets.top=前 {0}
coding_rules.rule_id=规则 ID:
coding_rules.analysis_scope=分析范围:
coding_rules.scope.MAIN=主要源码
coding_rules.scope.TEST=测试源码
coding_rules.scope.ALL=所有源码
coding_rules.remediation_effort=效果:
coding_rules.remediation_function=修复功能
coding_rules.remediation_function.LINEAR=线性
coding_rules.remediation_function.LINEAR_OFFSET=拥有偏移的线性
coding_rules.remediation_function.CONSTANT_ISSUE=常量/任务
coding_rules.remediation_function.coeff=加速系数
coding_rules.remediation_function.offset=偏移
coding_rules.remediation_function.constant=常量
coding_rules.external_rule.engine_tooltip=外部规则引擎提供的规则: {0}
coding_rules.external_rule.engine=外部规则引擎提供的规则： {0}
coding_rules.description_section.title.introduction=间接
coding_rules.description_section.title.root_cause=问题原因
coding_rules.description_section.title.root_cause.SECURITY_HOTSPOT=风险原因
coding_rules.description_section.title.assess_the_problem=评估风险
coding_rules.description_section.title.how_to_fix=修复方法
coding_rules.description_section.title.code_fix=AI 代码修复
coding_rules.description_section.title.more_info=更多信息
coding_rules.description_section.title.activity=活动
coding_rules.description_context.title=哪个组件或框架含有这问题？
coding_rules.description_context.subtitle=如何修复 {0}？
coding_rules.description_context.default_information=与问题关联性最大的组件或框架是 {0}。
coding_rules.description_context.other=其他
coding_rules.more_info.education_principles.title=安全原则
coding_rules.more_info.resources.title=资源
coding_rules.more_info.notification_message=我们在下面增加了安全原则的新信息。安全原则是提升代码安全的通用指南。请花一些时间阅读。
coding_rules.more_info.scroll_message=滚动查看安全原则
coding_rules.detail.extend_description.form=扩展规则描述
coding_rules.create_tag=创建标签
coding_rules.select_profile=选择配置
coding_rules.selected_profiles=选中配置
coding_rules.custom.type.label=类型
coding_rules.custom.type.option.ISSUE=问题
coding_rules.custom.type.option.SECURITY_HOTSPOT=安全热点
coding_rules.system_tags_tooltip=不能删除系统预设的标签
rule.impact.severity.tooltip=此规则对应的问题对软件在 {quality} 方面有一个 {severity} 影响
rule.clean_code_attribute_category.CONSISTENT=一致性
rule.clean_code_attribute_category.CONSISTENT.title=这是一致性规则。
rule.clean_code_attribute_category.INTENTIONAL=目的性
rule.clean_code_attribute_category.INTENTIONAL.title=这是目的性规则。
rule.clean_code_attribute_category.ADAPTABLE=适配性
rule.clean_code_attribute_category.ADAPTABLE.title=这是适配性规则。
rule.clean_code_attribute_category.RESPONSIBLE=责任性
rule.clean_code_attribute_category.RESPONSIBLE.title=这是责任性规则
rule.clean_code_attribute.CLEAR=整洁
rule.clean_code_attribute.CLEAR.title=这是目的性问题，代码应该整洁。
rule.clean_code_attribute.COMPLETE=完整
rule.clean_code_attribute.COMPLETE.title=这是目的性规则，代码应该完整。
rule.clean_code_attribute.CONVENTIONAL=遵守惯例
rule.clean_code_attribute.CONVENTIONAL.title=这是一致性问题，代码应该遵守惯例。
rule.clean_code_attribute.DISTINCT=清晰
rule.clean_code_attribute.DISTINCT.title=这是适配性规则，代码应该清晰。
rule.clean_code_attribute.EFFICIENT=高效
rule.clean_code_attribute.EFFICIENT.title=这是目的性规则，代码应该高效。
rule.clean_code_attribute.FOCUSED=聚焦
rule.clean_code_attribute.FOCUSED.title=这是适配性规则，代码应该聚焦。
rule.clean_code_attribute.FORMATTED=格式化
rule.clean_code_attribute.FORMATTED.title=这是一致性规则，代码应该格式化。
rule.clean_code_attribute.IDENTIFIABLE=识别
rule.clean_code_attribute.IDENTIFIABLE.title=这是一致性规则，代码应该容易识别。
rule.clean_code_attribute.LAWFUL=合法
rule.clean_code_attribute.LAWFUL.title=这是责任性骨子额，代码应该合法。
rule.clean_code_attribute.LOGICAL=逻辑
rule.clean_code_attribute.LOGICAL.title=这是目的性规则，代码应该符合逻辑。
rule.clean_code_attribute.MODULAR=模块化
rule.clean_code_attribute.MODULAR.title=这是适配性规则，代码应该模块化。
rule.clean_code_attribute.RESPECTFUL=尊重
rule.clean_code_attribute.RESPECTFUL.title=这是责任性规则，代码应该标识出足够尊重的态度。
rule.clean_code_attribute.TESTED=测试
rule.clean_code_attribute.TESTED.title=这是适配性规则，代码应该测试。
rule.clean_code_attribute.TRUSTWORTHY=值得信赖
rule.clean_code_attribute.TRUSTWORTHY.title=这是责任性规则，代码应该值得信赖。
email_notification.category=邮件提醒
email_notification.header=SMTP 配置
email_notification.description=按照以下步骤配置并测试认证
email_notification.subheading.1=选择认证类型，填写以下参数
email_notification.subheading.2=完成以下 SMTP 参数
email_notification.subheading.3=输入 ‘发送人’ 信息识别邮件通知
email_notification.form.auth_type=认证类型
email_notification.form.basic_auth.title=Basic 认证
email_notification.form.basic_auth.description=使用账号密码认证
email_notification.form.username=SMTP 账号
email_notification.form.username.description=认证 SMTP 服务器使用的账号。
email_notification.form.basic_password=SMTP 密码
email_notification.form.basic_password.description=认证 SMTP 服务器使用的密码。
email_notification.form.oauth_auth.title=现代认证
email_notification.form.oauth_auth.description=使用 OAuth 认证
email_notification.form.oauth_auth.supported=已支持供应商: Microsoft
email_notification.form.oauth_auth.recommended_reason=更强的安全合规性
email_notification.form.oauth_authentication_host=认证主机
email_notification.form.oauth_authentication_host.description=颁发访问令牌的身份提供者的主机。
email_notification.form.oauth_client_id=客户 ID
email_notification.form.oauth_client_id.description=注册应用时 Microsoft Exchange 提供的客户 ID。
email_notification.form.oauth_client_secret=客户秘钥
email_notification.form.oauth_client_secret.description=注册应用时 Microsoft Exchange 提供的客户秘钥。
email_notification.form.oauth_tenant=租户
email_notification.form.oauth_tenant.description=Microsoft 租户。
email_notification.form.host=SMTP 主机
email_notification.form.host.description=SMTP 服务器 URL。
email_notification.form.port=SMTP 端口
email_notification.form.port.description=SMTP 服务器端口 (通常为 25, 587 或 465).
email_notification.form.security_protocol=安全协议
email_notification.form.security_protocol.description=连接 SMTP 服务器使用的安全协议（推荐SSLTLS）。可选：NONE, SSLTLS, STARTTLS。
email_notification.form.from_address=发件人地址
email_notification.form.from_address.description=发件人的邮件地址。
email_notification.form.from_name=发件人称呼
email_notification.form.from_name.description=发送邮件的称呼（通常为"SonarQube"）。
email_notification.form.subject_prefix=主题前缀
email_notification.form.subject_prefix.description=邮件主题前缀，让邮件容易辨别（通常为"[SonarQube]"）。
email_notification.form.save_configuration=保存配置
email_notification.form.save_configuration.create_success=邮件配置保存成功。
email_notification.form.save_configuration.update_success=邮件配置更新成功。
email_notification.form.delete_configuration=删除配置
email_notification.overview.heading=SMTP 设置配置
email_notification.overview.authentication_type=认证类型
email_notification.overview.private=因安全原因隐藏
email_notification.form.private=**************
email_notification.overview.value={0} 值
email_notification.test.title=测试裴子豪
email_notification.test.modal_title=测试邮件
email_notification.test.to_address=接收人
email_notification.test.subject=主题
email_notification.test.message=信息
email_notification.test.message_text=这是一封来自 SonarQube 的测试邮件。
email_notification.test.create_test_email=创建测试邮件
email_notification.test.submit=发送测试邮件
email_notification.test.success=你的邮件已发送成功
email_notification.test.failure=你的邮件无法发送。确认你的认证配置和邮件收件人正常。
email_notification.state.value_should_be_valid_email=请填写合法的邮件地址。
notification.notification=提醒
notification.for=为我题型
notification.by=由 {channel}
notification.channel.EmailNotificationChannel=邮件
notification.dispatcher.information=订阅下面的频道可以在相关的事件发生时收到提醒。事件的作者不会收到提醒。
notification.dispatcher.ChangesOnMyIssue=分配给我或我报告的问题的修改
notification.dispatcher.NewIssues=新问题
notification.dispatcher.NewAlerts=新警告
notification.dispatcher.NewAlerts.project=质量门禁变更
notification.dispatcher.NewFalsePositiveIssue=问题标记为误报或不会修复
notification.dispatcher.SQ-MyNewIssues=新的问题
notification.dispatcher.QualityGateConditionsMismatch=质量门禁的指标与实例模式不匹配
notification.dispatcher.CeReportTaskFailure=我管理的任务中失败的后台任务
notification.dispatcher.CeReportTaskFailure.project=失败的后台任务
notification.dispatcher.description_x=为 {0} 检查接收的提醒
notification.dispatcher.group.label=项目 {project} 的提醒
notification.calculation_change.message=安全性，可靠性和维护性的数量和等级的计算方式已改变。<link>通过 SonarQube 文档了解更多信息</link>
notification.non_production_database.warning=嵌入式数据库应仅用于测试目的。它不支持扩展、升级到新的SonarQube Server版本或迁移到另一个数据库引擎。 {link}
notification.non_production_database.learn_more=了解更多
alerts.operator.<=小于
alerts.operator.>=大于
alerts.operator.\==等于
alerts.operator.!\==不等于
alert.tooltip.error=有一条错误信息。
alert.tooltip.warning=有一条警告信息。
alert.tooltip.success=有一条成功信息。
alert.tooltip.info=有一条提醒信息。
alert.dismiss=关闭消息
user.password_doesnt_match_confirmation=密码不匹配。
user.password.conditions=密码必须包含以下部分：
user.password.condition.12_characters=12 个字符
user.password.condition.1_upper_case=1 个大写字母
user.password.condition.1_lower_case=1 个小写字母
user.password.condition.1_number=1 个数字
user.password.condition.1_special_character=1 个特殊字符
user.password.invalid=密码必须满足所有要求
user.password.do_not_match=密码不匹配
user.old_password_incorrect=旧代码不正确
user.new_password_same_as_old=新旧代码不能相同
user.login_or_email_used_as_scm_account=登录并且邮箱自动配置为 SCM 账号
user.x_deleted={0}（删除）
user.confirm_password.no_match=密码不匹配
login.page=登录
login.login_to_sonarqube=登录 SonarQube
login.login_with_x=通过 {0} 登录
login.more_options=更多选项
login.unauthorized_access_alert=未授权访问当前页面。请设置权限并重新登录。
login.with_x=通过 {0}
login.authentication_failed=认证失败
login.logout_failed=注销失败
unauthorized.page=无权限
unauthorized.message=无权访问此页。请联系管理员。
unauthorized.reason=原因
my_profile.login=登录
my_profile.email=邮件
my_profile.groups=组
my_profile.scm_accounts=SCM 账号
my_profile.scm_accounts.tooltip=SCM 账号用来实现问题自动分配。账号和邮箱会自动作为 SCM 账号。
my_profile.password.title=修改密码
my_profile.password.old=旧值
my_profile.password.changed=密码已变更
my_profile.notifications.submit=保存修改
my_profile.overall_notifications.title=总览提醒
my_profile.per_project_notifications.title=每个项目的提醒
my_profile.per_project_notifications.add=添加项目
my_profile.per_project_notifications.edit=设置提醒
my_profile.per_project_notifications.filter=过滤项目
my_account.page=我的账号
my_account.notifications=提醒
my_account.no_project_notifications=尚未设置项目提醒。
my_account.profile=配置
my_account.security=安全
my_account.tokens_description=如果想强化安全，不想在执行代码扫描或调用 Web Service 时使用真实 SonarQube 用户的密码，可以使用用户令牌来代替用户登录。这样可以通过避免把分析用户的密码在网络传输，从而提升安全性。
my_account.token_type=类型
my_account.project_name=项目
my_account.tokens_last_usage=最后使用
my_account.tokens.expiration=过期
my_account.tokens.expired=令牌已过期
my_account.projects=项目
my_account.projects.description=这些是你管理的项目。
my_account.projects.no_results=你尚未管理任何项目。
my_account.projects.analyzed_x=分析 {0}
my_account.projects.never_analyzed=未分析
my_account.search_project=选择项目
my_account.set_notifications_for=使用名称搜索项目
my_account.set_notifications_for.title=添加项目
my_account.set_notifications_for.help=最少2个字符
my_account.create_new.TRK=添加项目
my_account.add_project=添加项目
my_account.add_project.manual=手工
my_account.add_project.azure=Azure DevOps
my_account.add_project.bitbucket=Bitbucket
my_account.add_project.bitbucketcloud=Bitbucket
my_account.add_project.github=GitHub
my_account.add_project.gitlab=GitLab
my_account.add_project.more_others=由其他 DevOps 平台导入
my_account.add_project.more=由 DevOps 平台导入
my_account.reset_password.page=修改密码
my_account.reset_password=修改密码
my_account.reset_password.explain=账号不应该使用默认密码。
my_account.create_new_project_portfolio_or_application=分析新项目/创建新视图或应用
my_account.preferences=偏好
my_account.preferences.keyboard_shortcuts=启用键盘快捷键
my_account.preferences.keyboard_shortcuts.description=一些操作可以使用快捷键。如果不想使用快捷键，可以禁用（不会禁用导航快捷键，比如箭头，Esc，回车）。可以使用问题标记快捷键（点击键盘上的 {questionMark}）获取可用的快捷键列表。
provisioning.no_analysis=创建以来还没有进行过分析。目前只能进行配置。
provisioning.no_analysis.delete=你应该重新分析项目，或直接 {0}。
provisioning.no_analysis.delete_project=删除项目
provisioning.no_analysis_on_main_branch="{0}" 分支尚未分析。
provisioning.no_analysis_on_main_branch.bad_configuration="{0}" 尚未分析，你已经拥有多个分支。看起来它不是你的 {branchType}，请检查配置。
provisioning.only_provisioned=只显示预备
provisioning.only_provisioned.tooltip=预备项目是手工创建，尚未分析的项目。
provisioning.no_analysis.application=创建之后还未分析。分析项目之后可以在此查看信息。
provisioning.permission_synch_in_progress=已同步项目权限。
severity.BLOCKER=阻断
severity.BLOCKER.description=必须立即修复。
severity.CRITICAL=严重
severity.CRITICAL.description=必须立即审查并尽快修复。
severity.MAJOR=主要
severity.MAJOR.description=潜在影响，影响大。
severity.MINOR=次要
severity.MINOR.description=潜在影响，影响小。
severity.INFO=提示
severity.INFO.description=并非 Bug 也不是质量问题。只是一个提醒。
severity_impact.title=影响严重性
severity_impact.levels=严重等级
severity_impact.BLOCKER=阻塞
severity_impact.BLOCKER.description=必须立即修复。
severity_impact.HIGH=高
severity_impact.HIGH.description=必须立即确认，尽快修复。
severity_impact.MEDIUM=中
severity_impact.MEDIUM.description=很可能产生严重或中度影响。
severity_impact.LOW=低
severity_impact.LOW.description=可能产生中度或较小影响。
severity_impact.INFO=提示
severity_impact.INFO.description=不是 bug 也不是质量缺陷，只是发现了一个可以关注的地方。
severity_impact.help.description=<p1>严重性现在直接绑定到影响的软件质量上。意味着每个影响的软件质量都拥有一个严重性。</p1><p>可以通过足够权限进行修改。</p>
severity_impact.help.link=了解更多严重性和软件质量信息
severity.icon.label=严重性: {severity}
software_quality=软件质量
software_quality.SECURITY=安全
software_quality.RELIABILITY=可靠性
software_quality.MAINTAINABILITY=可维护性
software_impact.button.popover={severity}严重性对{quality}的影响。单击以获取更多信息。
software_impact.button.change={severity}严重性对{quality}的影响。单击以更改严重性。
metric_domain.Size=大小
metric_domain.Tests=测试
metric_domain.Integration Tests=集成测试
metric_domain.Complexity=复杂度
metric_domain.Documentation=文档
metric_domain.Rules=规则
metric_domain.General=常用
metric_domain.Duplication=重复
metric_domain.Design=设计
metric_domain.SCM=代码版本
metric_domain.Maintainability=可维护性
metric_domain.Releasability=可发布性
metric_domain.Reliability=可靠性
metric_domain.Security=安全性
metric_domain.SecurityReview=安全审查
metric_domain.Issues=问题
metric_domain.Duplications=重复
metric_domain.Coverage=覆盖率
metric_domain.DependencyRisks=依赖性风险
metric.type.INT=整数
metric.type.FLOAT=浮点数
metric.type.PERCENT=百分比
metric.type.BOOL=布尔
metric.type.STRING=字符串
metric.type.MILLISEC=毫秒
metric.type.DATA=数值
metric.type.LEVEL=级别
metric.type.DISTRIB=分布
metric.type.RATING=评级
metric.type.SCA_RISK=依赖风险严重性
metric.type.WORK_DUR=工作持续时间
metric.level.ERROR=错误
metric.level.WARN=警告
metric.level.OK=正常
metric.level.NONE=无
metric.abstractness.description=抽象度
metric.abstractness.name=抽象度
metric.accessors.description=存取
metric.accessors.name=存取
metric.alert_status.description=警报
metric.alert_status.name=警报
metric.authors_by_line.description=作者，按行
metric.authors_by_line.name=作者，按行
metric.blocker_violations.description=阻断违规
metric.blocker_violations.name=阻断违规
metric.branch_coverage.description=分支覆盖率
metric.branch_coverage.name=分支覆盖率
metric.bugs.description=Bug
metric.bugs.name=Bug
metric.bugs.short_name=Bugs
metric.ca.description=传入接口
metric.ca.name=传入接口
metric.ce.description=传出接口
metric.ce.name=传出接口
metric.classes.description=类
metric.classes.name=类
metric.code_smells.description=代码异味
metric.code_smells.name=异味
metric.code_smells.short_name=异味
metric.cognitive_complexity.description=认知复杂度
metric.cognitive_complexity.name=认知复杂度
metric.commented_out_code_lines.description=注释的代码行数
metric.commented_out_code_lines.name=注释的代码行数
metric.comment_blank_lines.description=没有包含内容的注释
metric.comment_blank_lines.name=空注释
metric.comment_lines.description=注释行数
metric.comment_lines.name=注释行
metric.comment_lines_density.description=注释行相对于未注释代码行 (ncloc) + 注释行的比例
metric.comment_lines_density.name=注释 (%)
metric.comment_lines_density.short_name=评论
metric.complexity.description=圈复杂度
metric.complexity.name=圈复杂度
metric.conditions_by_line.description=分支覆盖行
metric.conditions_by_line.name=分支覆盖行
metric.conditions_to_cover.description=可覆盖分支
metric.conditions_to_cover.name=可覆盖分支
metric.confirmed_issues.description=确认问题
metric.confirmed_issues.name=确认问题
metric.coverage.description=单元测试覆盖率
metric.coverage.description.positive=总体代码具有足够的测试覆盖率
metric.coverage.name=覆盖率
metric.coverage_line_hits_data.description=行覆盖命中
metric.coverage_line_hits_data.name=行覆盖命中
metric.covered_conditions.description=覆盖分支
metric.covered_conditions.name=覆盖分支
metric.covered_conditions_by_line.description=覆盖的分支行
metric.covered_conditions_by_line.name=覆盖的分支行
metric.covered_lines.description=覆盖代码行
metric.covered_lines.name=覆盖代码行
metric.critical_violations.description=严重违规
metric.critical_violations.name=严重违规
metric.development_cost.description=开发成本
metric.development_cost.name=SQALE 开发成本
metric.directories.description=目录
metric.directories.name=目录
metric.distance.description=距离
metric.distance.name=距离
metric.dit.description=继承树深度
metric.dit.name=深度
metric.dsm.description=相关矩阵
metric.dsm.name=相关矩阵
metric.duplicated_blocks.description=重复块
metric.duplicated_blocks.name=重复块
metric.duplicated_files.description=重复文件
metric.duplicated_files.name=重复文件
metric.duplicated_lines.description=重复行
metric.duplicated_lines.name=重复行
metric.duplicated_lines_density.description=重复行根据语句的比例
metric.duplicated_lines_density.name=重复行 (%)
metric.duplicated_lines_density.short_name=重复
metric.duplicated_lines_density.extra_short_name=密度
metric.duplications_data.description=重复详情
metric.duplications_data.name=重复详情
metric.efficiency.description=效率
metric.efficiency.name=效率
metric.effort_to_reach_maintainability_rating_a.description=达到可维护性评级 A 所需的工作
metric.effort_to_reach_maintainability_rating_a.name=达到可维护性评级 A 所需的工作
metric.effort_to_reach_maintainability_rating_a.extra_short_name=达到评级 A 的工作
metric.effort_to_reach_software_quality_maintainability_rating_a.description=达到可维护性评级 A 所需的工作
metric.effort_to_reach_software_quality_maintainability_rating_a.name=达到可维护性评级 A 所需的工作
metric.effort_to_reach_software_quality_maintainability_rating_a.extra_short_name=达到评级 A 的工作
metric.false_positive_issues.description=误报问题
metric.false_positive_issues.name=误报问题
metric.files.description=文件数
metric.files.name=文件
metric.file_cycles.description=文件循环
metric.file_cycles.name=文件循环
metric.file_edges_weight.description=文件边界权重
metric.file_edges_weight.name=文件边界权重
metric.file_feedback_edges.description=怀疑文件依赖
metric.file_feedback_edges.name=怀疑文件依赖
metric.file_tangles.description=文件耦合
metric.file_tangles.name=文件耦合
metric.file_tangle_index.description=文件耦合数
metric.file_tangle_index.name=文件耦合数
metric.functions.description=方法
metric.functions.name=方法
metric.generated_lines.description=生成的行数
metric.generated_lines.name.suffix=自动生成行数
metric.generated_lines.name=生成的行数
metric.generated_ncloc.description=生成的非注释代码行数
metric.generated_ncloc.name.suffix=自动生成代码行数
metric.generated_ncloc.name=生成的代码行数
metric.has_rating_X=已评级：{0}
metric.no_rating=未评级
metric.info_violations.description=提示违规
metric.info_violations.name=提示违规
metric.instability.description=不稳定
metric.instability.name=不稳定
metric.it_branch_coverage.description=集成测试分支覆盖率
metric.it_branch_coverage.name=集成测试分支覆盖率
metric.it_conditions_by_line.description=集成测试分支覆盖行
metric.it_conditions_by_line.name=集成测试分支覆盖行
metric.it_conditions_to_cover.description=集成测试可覆盖分支
metric.it_conditions_to_cover.name=集成测试可覆盖分支
metric.it_coverage.description=集成测试覆盖
metric.it_coverage.name=集成测试覆盖
metric.it_coverage_line_hits_data.description=集成测试覆盖命中行
metric.it_coverage_line_hits_data.name=集成测试覆盖命中行
metric.it_covered_conditions_by_line.description=集成测试分支覆盖行
metric.it_covered_conditions_by_line.name=集成测试分支覆盖行
metric.it_lines_to_cover.description=集成测试可覆盖行
metric.it_lines_to_cover.name=集成测试可覆盖行
metric.it_line_coverage.description=集成测试覆盖行
metric.it_line_coverage.name=集成测试覆盖行
metric.it_uncovered_conditions.description=集成测试未覆盖分支
metric.it_uncovered_conditions.name=集成测试未覆盖分支
metric.it_uncovered_lines.description=集成测试未覆盖行
metric.it_uncovered_lines.name=集成测试未覆盖行
metric.last_commit_date.name=最新条件时间
metric.last_commit_datetimes_by_line.description=最新提交日期，按行
metric.last_commit_datetimes_by_line.name=最新提交日期，按行
metric.lcom4.description=LCOM4（缺乏凝聚指标）
metric.lcom4.name=LCOM4（缺乏凝聚指标）
metric.lcom4_blocks.description=LCOM4 块
metric.lcom4_blocks.name=LCOM4 块
metric.lcom4_distribution.description=Class 分布 / LCOM4
metric.lcom4_distribution.name=Class 分布 / LCOM4
metric.lines.description=行数
metric.lines.name=行数
metric.lines_to_cover.description=可覆盖行
metric.lines_to_cover.name=可覆盖行
metric.line_coverage.description=代码覆盖率
metric.line_coverage.name=代码覆盖率
metric.maintainability.description=可维护性
metric.maintainability.name=可维护性
metric.major_violations.description=主要违规
metric.major_violations.name=主要违规
metric.minor_violations.description=次要违规
metric.minor_violations.name=次要违规
metric.ncloc.name=代码行数
metric.ncloc.description=代码行数
metric.ncloc_language_distribution.description=按语言分布的未注释代码行数
metric.ncloc_language_distribution.name=每个语言的代码行数
metric.new_blocker_violations.description=新阻断违规
metric.new_blocker_violations.name=新阻断违规
metric.new_blocker_violations.short_name=阻断问题
metric.new_branch_coverage.description=新/修改代码的分支覆盖率
metric.new_branch_coverage.name=新代码的分支覆盖率
metric.new_branch_coverage.extra_short_name=条件覆盖率
metric.new_bugs.description=新增 Bug
metric.new_bugs.name=新增 Bug
metric.new_bugs.short_name=Bug
metric.new_code_smells.description=新增异味
metric.new_code_smells.name=新增异味
metric.new_code_smells.short_name=异味
metric.new_conditions_to_cover.description=新增可覆盖分支
metric.new_conditions_to_cover.name=新增可覆盖分支
metric.new_conditions_to_cover.extra_short_name=新增可覆盖分支
metric.new_coverage.description=新/修改的代码覆盖率
metric.new_coverage.description.positive=新代码已被充分测试
metric.new_coverage.name=新覆盖率
metric.new_coverage.short_name=覆盖率
metric.new_critical_violations.description=新严重违规
metric.new_critical_violations.name=新严重违规
metric.new_critical_violations.short_name=严重问题
metric.new_development_cost.description=新代码的开发成本
metric.new_development_cost.name=新代码的开发成本
metric.new_duplicated_blocks.name=新代码中的重复块
metric.new_duplicated_blocks.extra_short_name=重复代码块
metric.new_duplicated_blocks.description=新代码中的重复块
metric.new_duplicated_lines.name=新代码中的重复行
metric.new_duplicated_lines.extra_short_name=重复行
metric.new_duplicated_lines.description=新代码中的重复行
metric.new_duplicated_lines_density.description=根据语句计算的新代码中的重复行
metric.new_duplicated_lines_density.description.positive=新代码只有有限的重复
metric.new_duplicated_lines_density.name=新代码中的重复行密度 (%)
metric.new_duplicated_lines_density.short_name=重复度
metric.new_duplicated_lines_density.extra_short_name=密度
metric.new_info_violations.description=新提示违规
metric.new_info_violations.name=新提示违规
metric.new_info_violations.short_name=提示问题
metric.new_it_branch_coverage.description=新/修改的分支集成测试覆盖行
metric.new_it_branch_coverage.name=集成测试的新分支覆盖
metric.new_it_conditions_to_cover.description=集成测试的新增可覆盖分支
metric.new_it_conditions_to_cover.name=集成测试的新增可覆盖分支
metric.new_it_coverage.description=新/修改的代码集成测试分支覆盖率
metric.new_it_coverage.name=集成测试新增分支覆盖率
metric.new_it_lines_to_cover.description=集成测试的新增可覆盖行
metric.new_it_lines_to_cover.name=集成测试的新增可覆盖行
metric.new_it_line_coverage.description=新/修改的代码集成测试覆盖行
metric.new_it_line_coverage.name=集成测试的新行覆盖
metric.new_it_uncovered_conditions.description=集成测试未覆盖的新分支
metric.new_it_uncovered_conditions.name=集成测试未覆盖的新分支
metric.new_it_uncovered_lines.description=集成测试的未覆盖行
metric.new_it_uncovered_lines.name=集成测试未覆盖的行
metric.new_lines_to_cover.description=新增可覆盖行
metric.new_lines_to_cover.name=新增可覆盖行
metric.new_lines_to_cover.extra_short_name=新增覆盖行
metric.new_line_coverage.description=新/修改代码覆盖率
metric.new_line_coverage.name=新代码覆盖率
metric.new_line_coverage.extra_short_name=覆盖行
metric.new_maintainability_rating.description=新代码可维护性评级
metric.new_maintainability_rating.name=新代码可维护性评级
metric.new_maintainability_rating.extra_short_name=评级
metric.new_software_quality_maintainability_rating.description=新代码可维护性评级
metric.new_software_quality_maintainability_rating.name=新代码可维护性评级
metric.new_software_quality_maintainability_rating.extra_short_name=评级
metric.new_major_violations.description=新主要违规
metric.new_major_violations.name=新主要违规
metric.new_major_violations.short_name=主要问题
metric.new_minor_violations.description=新次要违规
metric.new_minor_violations.name=新次要违规
metric.new_minor_violations.short_name=次要问题
metric.new_lines.name=新增代码行数
metric.new_lines.description=新代码中的非注释行数
metric.new_lines.short_name=行
metric.new_overall_branch_coverage.description=总体新/修改的分支覆盖率
metric.new_overall_branch_coverage.name=总体新分支覆盖率
metric.new_overall_conditions_to_cover.description=所有新增可覆盖分支
metric.new_overall_conditions_to_cover.name=所有新增可覆盖分支
metric.new_overall_coverage.description=总体新/修改代码的覆盖率
metric.new_overall_coverage.name=总体新覆盖率
metric.new_overall_lines_to_cover.description=所有覆盖的新行数
metric.new_overall_lines_to_cover.name=总体覆盖的新行数
metric.new_overall_line_coverage.description=总体新/修改的代码覆盖率
metric.new_overall_line_coverage.name=总体新代码覆盖率
metric.new_overall_uncovered_conditions.description=所有代码未覆盖的新分支
metric.new_overall_uncovered_conditions.name=总体未覆盖的新分支
metric.new_overall_uncovered_lines.description=所有测试未覆盖的新行数
metric.new_overall_uncovered_lines.name=总体未覆盖新行数
metric.new_reliability_rating.description=新代码可靠性评级
metric.new_reliability_rating.name=新代码可靠性评级
metric.new_reliability_rating.extra_short_name=评级
metric.new_software_quality_reliability_rating.description=新代码可靠性评级
metric.new_software_quality_reliability_rating.name=新代码可靠性评级
metric.new_software_quality_reliability_rating.extra_short_name=评级
metric.new_reliability_remediation_effort.description=新代码的可靠性修复工作
metric.new_reliability_remediation_effort.name=新代码的可靠性修复工作
metric.new_reliability_remediation_effort.extra_short_name=补救工作
metric.new_sca_count_any_issue.description=具有任何风险的依赖关系数量
metric.new_sca_count_any_issue.name=依赖性风险
metric.new_software_quality_reliability_remediation_effort.description=新代码的可靠性修复工作
metric.new_software_quality_reliability_remediation_effort.name=新代码的可靠性修复工作
metric.new_software_quality_reliability_remediation_effort.extra_short_name=修复工作
metric.new_security_hotspots.description=新安全热点
metric.new_security_hotspots.name=新安全热点
metric.new_security_hotspots.short_name=安全热点
metric.new_security_hotspots_reviewed.description=新代码安全热点审查比例
metric.new_security_hotspots_reviewed.description.positive=已复审所有安全热点
metric.new_security_hotspots_reviewed.name=新代码安全热点审查
metric.new_security_hotspots_reviewed.short_name=安全热点审查
metric.new_security_hotspots_reviewed_status.description=新代码安全热点已审查状态
metric.new_security_hotspots_reviewed_status.name=新代码安全已审查状态
metric.new_security_hotspots_to_review_status.description=新代码安全热点未审查状态
metric.new_security_hotspots_to_review_status.name=新代码安全未审查状态
metric.new_security_rating.description=新代码安全性评级
metric.new_security_rating.name=新代码安全性评级
metric.new_security_rating.extra_short_name=评级
metric.new_software_quality_security_rating.description=新代码安全性评级
metric.new_software_quality_security_rating.name=新代码安全性评级
metric.new_software_quality_security_rating.extra_short_name=评级
metric.new_security_remediation_effort.description=新代码的安全修复工作
metric.new_security_remediation_effort.name=新代码的安全修复工作
metric.new_security_remediation_effort.extra_short_name=修复工作
metric.new_software_quality_security_remediation_effort.description=新代码的安全修复工作
metric.new_software_quality_security_remediation_effort.name=新代码的安全修复工作
metric.new_software_quality_security_remediation_effort.extra_short_name=修复工作
metric.new_security_review_rating.description=新代码安全审查评级
metric.new_security_review_rating.name=新代码安全审查评级
metric.new_security_review_rating.extra_short_name=评级
metric.new_sqale_debt_ratio.description=新/修改代码的技术债务比率。
metric.new_sqale_debt_ratio.name=新代码技术债务比率
metric.new_sqale_debt_ratio.short_name=新债务率
metric.new_sqale_debt_ratio.extra_short_name=债务率
metric.new_software_quality_maintainability_debt_ratio.description=新/修改代码的技术债务比率。
metric.new_software_quality_maintainability_debt_ratio.name=新代码技术债务比率
metric.new_software_quality_maintainability_debt_ratio.short_name=新债务率
metric.new_software_quality_maintainability_debt_ratio.extra_short_name=债务率
metric.new_technical_debt.description=新代码的技术债务
metric.new_technical_debt.name=新代码的技术债务
metric.new_technical_debt.short_name=新债
metric.new_technical_debt.extra_short_name=债
metric.new_software_quality_maintainability_remediation_effort.description=新代码的技术债务
metric.new_software_quality_maintainability_remediation_effort.name=新代码的技术债务
metric.new_software_quality_maintainability_remediation_effort.short_name=新债
metric.new_software_quality_maintainability_remediation_effort.extra_short_name=债
metric.new_uncovered_conditions.description=未覆盖新分支
metric.new_uncovered_conditions.name=未覆盖新分支
metric.new_uncovered_conditions.extra_short_name=未覆盖条件
metric.new_uncovered_lines.description=未覆盖的新代码
metric.new_uncovered_lines.name=未覆盖的新代码
metric.new_uncovered_lines.extra_short_name=未覆盖行
metric.new_violations.description=新违规
metric.new_violations.description.positive=新代码零问题
metric.new_violations.name=新违规
metric.new_vulnerabilities.description=新增漏洞
metric.new_vulnerabilities.name=新增漏洞
metric.new_vulnerabilities.short_name=漏洞
metric.noc.description=子类数
metric.noc.name=子类数
metric.open_issues.description=开启问题
metric.open_issues.name=开启问题
metric.overall_branch_coverage.description=所有测试的分支覆盖率
metric.overall_branch_coverage.name=总体分支覆盖率
metric.overall_conditions_by_line.description=所有测试的分支数
metric.overall_conditions_by_line.name=总体分支数
metric.overall_conditions_to_cover.description=所有可覆盖分支
metric.overall_conditions_to_cover.name=所有可覆盖分支
metric.overall_coverage.description=总体测试覆盖率
metric.overall_coverage.name=总体覆盖率
metric.overall_coverage_line_hits_data.description=所有测试的行数
metric.overall_coverage_line_hits_data.name=总体行数
metric.overall_covered_conditions_by_line.description=所有测试的覆盖分支数
metric.overall_covered_conditions_by_line.name=总体覆盖的分支数
metric.overall_lines_to_cover.description=所有测试可覆盖行
metric.overall_lines_to_cover.name=所有可覆盖行
metric.overall_line_coverage.description=所有测试的代码覆盖率
metric.overall_line_coverage.name=总体代码覆盖率
metric.overall_uncovered_conditions.description=所有测试未覆盖的分支
metric.overall_uncovered_conditions.name=总体未覆盖分支
metric.overall_uncovered_lines.description=所有测试未覆盖的代码
metric.overall_uncovered_lines.name=总体未覆盖代码
metric.packages.description=包
metric.packages.name=包
metric.package_cycles.description=包循环
metric.package_cycles.name=包循环
metric.package_edges_weight.description=包边界权重
metric.package_edges_weight.name=包边界权重
metric.package_feedback_edges.description=削减的包依赖
metric.package_feedback_edges.name=削减的包依赖
metric.package_tangles.description=削减的文件依赖
metric.package_tangles.name=削减的文件依赖
metric.package_tangle_index.description=包耦合数
metric.package_tangle_index.name=包耦合数
metric.portability.description=可移植性
metric.portability.name=可移植性
metric.prioritized_rule_issues.name=优先规则的问题
metric.prioritized_rule_issues.description=优先规则的问题
metric.profile.description=选中的质量配置
metric.profile.name=配置
metric.profile_version.description=选中的质量配置版本
metric.profile_version.name=配置版本
metric.projects.description=项目数
metric.projects.name=项目
metric.public_api.description=公共 API
metric.public_api.name=公共 API
metric.public_documented_api_density.description=有文档的公共类和方法，与未注释代码行 (ncloc) 的比例
metric.public_documented_api_density.name=有文档的公共 API (%)
metric.public_undocumented_api.description=无文档的公共类，方法和变量
metric.public_undocumented_api.name=无文档的公共 API
metric.quality_gate_details.description=与质量门禁相关的项目详情
metric.quality_gate_details.name=质量门禁详情
metric.quality_profiles.description=分析使用的质量配置详情
metric.quality_profiles.name=配置
metric.reliability.description=可靠性
metric.reliability.name=可靠性
metric.reliability_rating.description=可靠性评级
metric.reliability_rating.description.positive=全部代码没有关键 bug
metric.reliability_rating.name=可靠性评级
metric.reliability_rating.extra_short_name=评级
metric.reliability_rating.tooltip.A=没有 Bug 时，可靠性评级为 A。
metric.reliability_rating.tooltip.B=至少有一个次要 Bug，可靠性评级为 B。
metric.reliability_rating.tooltip.C=至少有一个重要 Bug，可靠性评级为 C。
metric.reliability_rating.tooltip.D=至少有一个严重 Bug，可靠性评级为 D。
metric.reliability_rating.tooltip.E=至少有一个阻断 Bug，可靠性评级为 E。
metric.releasability_rating.description=可发布性评级
metric.releasability_rating.name=可发布性评级
metric.sca_count_any_issue.description=具有任何风险的依赖关系数量
metric.sca_count_any_issue.name=依赖风险
metric.software_quality_releasability_rating.description=可发布性评级
metric.software_quality_releasability_rating.name=可发布性评级
metric.software_quality_reliability_rating.description=可靠性评级
metric.software_quality_reliability_rating.description.positive=全部代码没有关键可靠性问题
metric.software_quality_reliability_rating.name=可靠性评级
metric.software_quality_reliability_rating.extra_short_name=评级
metric.software_quality_reliability_rating.tooltip.A=可靠性评级 A，没有超过提示严重性的可发布性问题。
metric.software_quality_reliability_rating.tooltip.B=可靠性评级 B，至少有一个低级可靠性问题。
metric.software_quality_reliability_rating.tooltip.C=可靠性评级 C，至少有一个中级可靠性问题。
metric.software_quality_reliability_rating.tooltip.D=可靠性评级 D，至少有一个高级可靠性问题。
metric.software_quality_reliability_rating.tooltip.E=可靠性评级 E，至少有一个阻塞级可靠性问题。
metric.reliability_remediation_effort.description=可靠性修复工作
metric.reliability_remediation_effort.name=可靠性修复工作
metric.reliability_remediation_effort.extra_short_name=修复工作
metric.software_quality_reliability_remediation_effort.description=可靠性修复工作
metric.software_quality_reliability_remediation_effort.name=可靠性修复工作
metric.software_quality_reliability_remediation_effort.extra_short_name=修复工作
metric.reopened_issues.description=重新问题
metric.reopened_issues.name=重开问题
metric.revisions_by_line.description=版本，按行
metric.revisions_by_line.name=版本，按行
metric.rfc.description=对类的响应（使用的方法数）
metric.rfc.name=类的响应
metric.rfc_distribution.description=类的分布 / RFC(Response for Class)
metric.rfc_distribution.name=类的分布 / RFC(Response for Class)
metric.sca_rating.tooltip.A=当没有依赖风险或只有信息严重性风险时，依赖风险评级为A。
metric.sca_rating.tooltip.B=当至少有一个严重程度较低的依赖风险时，依赖风险评级为B。
metric.sca_rating.tooltip.C=当至少有一个中等严重程度的依赖风险时，依赖风险评级为C。
metric.sca_rating.tooltip.D=当至少有一个严重程度高的依赖风险时，依赖风险评级为D。
metric.sca_rating.tooltip.E=当至少有一个具有阻断严重性的依赖风险时，依赖风险评级为E。
metric.security_hotspots.description=安全热点
metric.security_hotspots.full_description=安全敏感代码需要手工审核，以便判断是否存在安全漏洞。
metric.security_hotspots.name=安全热点
metric.security_hotspots_reviewed.description=安全热点审查比例
metric.security_hotspots_reviewed.description.positive=全部安全热点都已审查
metric.security_hotspots_reviewed.name=安全热点审查
metric.security_hotspots_reviewed_status.description=安全已审查状态
metric.security_hotspots_reviewed_status.name=安全已审查状态
metric.security_hotspots_to_review_status.description=安全未审查状态
metric.security_hotspots_to_review_status.name=安全未审查状态
metric.security_rating.description=安全评级
metric.security_rating.description.positive=全部代码没有漏洞
metric.security_rating.name=安全评级
metric.security_rating.extra_short_name=评级
metric.security_rating.tooltip.A=没有漏洞时，安全评级为 A。
metric.security_rating.tooltip.B=至少有一个次要漏洞，安全评级为 A。
metric.security_rating.tooltip.C=至少有一个主要漏洞，安全评级为 B。
metric.security_rating.tooltip.D=至少有一个严重漏洞，安全评级为 C。
metric.security_rating.tooltip.E=至少有一个阻断漏洞，安全评级为 D。
metric.software_quality_security_rating.description=安全评级
metric.software_quality_security_rating.description.positive=全部代码没有安全问题
metric.software_quality_security_rating.name=安全评级
metric.software_quality_security_rating.extra_short_name=评级
metric.software_quality_security_rating.tooltip.A=没有高于提示严重性的问题时，安全评级为 A。
metric.software_quality_security_rating.tooltip.B=至少有一个低安全问题，安全评级为 B。
metric.software_quality_security_rating.tooltip.C=至少有一个中安全问题，安全评级为 C。
metric.software_quality_security_rating.tooltip.D=至少有一个高安全问题，安全评级为 D。
metric.software_quality_security_rating.tooltip.E=至少有一个阻断安全问题，安全评级为 E。
metric.security_remediation_effort.description=安全修复工作
metric.security_remediation_effort.name=安全修复工作
metric.security_remediation_effort.extra_short_name=修复工作
metric.software_quality_security_remediation_effort.description=安全修复工作
metric.software_quality_security_remediation_effort.name=安全修复工作
metric.software_quality_security_remediation_effort.extra_short_name=修复工作
metric.security_review_rating.description=安全审查评级
metric.security_review_rating.name=安全审查评级
metric.security_review_rating.extra_short_name=审查评级
metric.security_review_rating.tooltip.A=已审查安全热点超过 80%，安全审查评级为 A。
metric.security_review_rating.tooltip.B=已审查安全热点不足 80%，安全审查评级为 B。
metric.security_review_rating.tooltip.C=已审查安全热点不足 70%，安全审查评级为 C。
metric.security_review_rating.tooltip.D=已审查安全热点不足 50%，安全审查评级为 D。
metric.security_review_rating.tooltip.E=已审查安全热点不足 30%，安全审查评级为 E。
metric.skipped_tests.description=单元测试忽略数
metric.skipped_tests.name=单元测试忽略数
metric.skipped_tests.short_name=忽略
metric.sqale_debt_ratio.description=实际技术债务与从头开发全部源码的成本的比率。
metric.sqale_debt_ratio.name=技术债比率
metric.sqale_debt_ratio.short_name=债务率
metric.software_quality_maintainability_debt_ratio.description=实际技术债务与从头开发全部源码的成本的比率
metric.software_quality_maintainability_debt_ratio.name=技术债比率
metric.software_quality_maintainability_debt_ratio.short_name=债务率
metric.sqale_index.description=解决组件的所有问题并满足所有要求所需要的总工作量（以小时为单位）。
metric.sqale_index.name=技术债务
metric.sqale_index.short_name=负债
metric.software_quality_maintainability_remediation_effort.description=解决组件的所有问题并满足所有要求所需要的总工作量（以分钟为单位）。
metric.software_quality_maintainability_remediation_effort.name=技术债务
metric.software_quality_maintainability_remediation_effort.short_name=技术债务
metric.sqale_rating.description=基于技术债务评级的 A 至 E 评级。
metric.sqale_rating.name=可维护性评级
metric.sqale_rating.extra_short_name=评级
metric.sqale_rating.tooltip=技术债评级大于 {1} 时，可维护性评级为 {0}。
metric.sqale_rating.tooltip.A=技术债评级小于 {0} 时，可维护性评级为 A。
metric.software_quality_maintainability_rating.description=A 至 E 评级基于技术债务率
metric.software_quality_maintainability_rating.name=可维护性评级
metric.software_quality_maintainability_rating.extra_short_name=评级
metric.software_quality_maintainability_rating.tooltip=当技术债务率大于 {1} 时，可维护性评级为 {0}
metric.software_quality_maintainability_rating.tooltip.A=当技术债务率小于 {0} 时，可维护性评级为 A。
metric.statements.description=语句数
metric.statements.name=语句
metric.suspect_lcom4_density.description=LCOM4(逻辑凝聚力) > 1 的类的密度
metric.suspect_lcom4_density.name=疑似 LCOM4 密度值
metric.tests.description=单元测试的数量
metric.tests.name=单元测试
metric.test_data.description=单元测试详情
metric.test_data.name=单元测试详情
metric.test_errors.description=单元测试错误数
metric.test_errors.name=单元测试错误数
metric.test_errors.short_name=错误
metric.test_execution_time.description=单元测试持续时间
metric.test_execution_time.name=单元测试持续时间
metric.test_execution_time.short_name=持续时间
metric.test_failures.description=单元测试失败数
metric.test_failures.name=单元测试失败数
metric.test_failures.short_name=失败
metric.test_success_density.description=单元测试成功比例
metric.test_success_density.name=单元测试成功 (%)
metric.test_success_density.short_name=成功
metric.uncovered_conditions.description=未覆盖分支
metric.uncovered_conditions.name=未覆盖分支
metric.uncovered_lines.description=未覆盖的代码
metric.uncovered_lines.name=未覆盖的代码
metric.usability.description=可用性
metric.usability.name=可用性
metric.violations.description=问题
metric.violations.name=问题
metric.violations.short_name=问题
metric.vulnerabilities.description=漏洞
metric.vulnerabilities.name=漏洞
metric.vulnerabilities.short_name=漏洞
metric.wont_fix_issues.description=不修复的问题
metric.wont_fix_issues.name=不修复的问题
metric.accepted_issues.description=接受问题
metric.accepted_issues.name=接受问题
metric.pull_request_fixed_issues.name=合并请求修复问题
metric.pull_request_fixed_issues.description=合并请求即将修复的问题数量。
metric.new_accepted_issues.name=新接受问题
metric.new_accepted_issues.description=新接受问题
metric.high_impact_accepted_issues.name=高影响性接受问题
metric.high_impact_accepted_issues.description=高影响性接受问题
metric.maintainability_issues.name=可维护性问题
metric.maintainability_issues.description=可维护性问题
metric.maintainability_issues.short_name=可维护性
metric.reliability_issues.name=可靠性问题
metric.reliability_issues.description=可靠性问题
metric.reliability_issues.short_name=可靠性
metric.security_issues.name=安全性问题
metric.security_issues.description=安全性问题
metric.security_issues.short_name=安全性
metric.new_maintainability_issues.name=新维护性问题
metric.new_maintainability_issues.description=新维护性问题
metric.new_maintainability_issues.short_name=新维护性
metric.new_reliability_issues.name=新可靠性问题
metric.new_reliability_issues.description=新可靠性问题
metric.new_reliability_issues.short_name=新可靠性
metric.new_security_issues.name=新安全性问题
metric.new_security_issues.description=新安全性问题
metric.new_security_issues.short_name=新安全性
metric.software_quality_blocker_issues.description=阻塞严重性问题
metric.software_quality_blocker_issues.name=阻塞严重性问题
metric.software_quality_high_issues.description=高严重性问题
metric.software_quality_high_issues.name=高严重性问题
metric.software_quality_info_issues.description=提示安全性问题
metric.software_quality_info_issues.name=提示安全性问题
metric.software_quality_medium_issues.description=中安全性问题
metric.software_quality_medium_issues.name=中安全性问题
metric.software_quality_low_issues.description=低安全性问题
metric.software_quality_low_issues.name=低安全性问题
metric.new_software_quality_blocker_issues.description=新阻塞严重性问题
metric.new_software_quality_blocker_issues.name=新阻塞严重性问题
metric.new_software_quality_high_issues.description=新高严重性问题
metric.new_software_quality_high_issues.name=新高严重性问题
metric.new_software_quality_info_issues.description=新提示严重性问题
metric.new_software_quality_info_issues.name=新提示严重性问题
metric.new_software_quality_medium_issues.description=新中严重性问题
metric.new_software_quality_medium_issues.name=新中严重性问题
metric.new_software_quality_low_issues.description=新低严重性问题
metric.new_software_quality_low_issues.name=新低严重性问题
metric.software_quality_maintainability_issues.name=可维护性问题
metric.software_quality_maintainability_issues.short_name=可维护性
metric.software_quality_maintainability_issues.description=可维护性问题
metric.software_quality_reliability_issues.name=可靠性问题
metric.software_quality_reliability_issues.short_name=可靠性
metric.software_quality_reliability_issues.description=可靠性问题
metric.software_quality_security_issues.name=安全问题
metric.software_quality_security_issues.short_name=安全
metric.software_quality_security_issues.description=安全问题
metric.new_software_quality_maintainability_issues.name=新维护性问题
metric.new_software_quality_maintainability_issues.description=新维护性问题
metric.new_software_quality_reliability_issues.name=新可靠性问题
metric.new_software_quality_reliability_issues.description=新可靠性问题
metric.new_software_quality_security_issues.name=新安全问题
metric.new_software_quality_security_issues.description=新安全问题
permission.assign_x_to_y=将权限 {0} 分配给 {1}
permissions.holder=许可持有人
permissions.toggletip.more_information=单击以获取有关"{permission}"权限的更多信息
permissions.filter.label=按权限筛选
global_permissions.permission=权限
global_permissions.users=用户
global_permissions.groups=组
global_permissions.administer=管理员
global_permissions.creator=创建人
global_permissions.admin=系统管理员
global_permissions.admin.desc=能执行所有管理功能，比如：全局配置和默认仪表盘的定制。
global_permissions.profileadmin=质量配置管理员
global_permissions.profileadmin.desc=能执行质量配置的任何功能。
global_permissions.gateadmin=管理质量门禁
global_permissions.gateadmin.desc=可以在质量门禁上执行所有操作。
global_permissions.scan=执行分析
global_permissions.scan.desc=能执行分析，进行执行分析所需的所有设置，包含 scm 账号密码，jira 账号密码，等等这类安全设置。
global_permissions.provisioning=置备项目
global_permissions.provisioning.desc=可以在第一次分析项目之前初始化项目的结构。
global_permissions.filter_by_x_permission=根据 "{0}" 权限搜索
global_permissions.restore_access=恢复访问
global_permissions.restore_access.message=你将获取这个项目的 {浏览} 和 {管理} 权限。是否继续？
global_permissions.applicationcreator=应用
global_permissions.applicationcreator.desc=允许创建应用。
global_permissions.portfoliocreator=视图
global_permissions.portfoliocreator.desc=允许创建视图。
global_permissions.no_actions_available=无可用操作
projects_role.criteria.name=名称包含
projects_role.criteria.key=标识包含
projects_role.role=角色关系
projects_role.groups=群组
projects_role.admin=管理员
projects_role.admin.desc=查看项目配置，执行管理任务。（用户也需要“浏览”权限）
projects_role.issueadmin=问题管理员
projects_role.issueadmin.desc=对问题进行额外编辑：设置误报/不会修复，修改问题严重级别。（用户也需要“浏览”权限）
projects_role.securityhotspotadmin=管理安全热点
projects_role.securityhotspotadmin.desc=通过“安全热点”检测漏洞。驳回，清理，接受，重开“安全热点”（用户也需要“浏览”权限）
projects_role.user=浏览
projects_role.user.desc=访问一个项目，浏览它的指标，创建/编辑它的问题。
projects_role.codeviewer=查看源码
projects_role.codeviewer.desc=查看项目的源代码。（用户也需要“浏览”权限）
projects_role.scan=执行分析
projects_role.scan.desc=可以获取执行分析的所有配置（包含安全配置，比如密码），并可以将分析结果推送至 SonarQube 服务器。
projects_role.bulk_change=批量修改
projects_role.apply_template=应用权限模板
projects_role.apply_template_to_x=为 "{0}" 应用权限模板
projects_role.apply_template.success=权限模板已成功应用。
projects_role.no_projects=这里尚未有应用了权限模板的项目。
projects_role.turn_x_to_public=将 "{0}" 改为公共
projects_role.turn_project_to_public.TRK=项目修改为公共
projects_role.turn_project_to_public.VW=视图修改为公共
projects_role.turn_project_to_public.APP=应用修改为公共
projects_role.are_you_sure_to_turn_project_to_public.TRK=确认把项目修改为公共？
projects_role.are_you_sure_to_turn_project_to_public.warning.TRK=所有人都可以浏览并看到项目源码。
projects_role.are_you_sure_to_turn_project_to_public.VW=确认把视图修改为公共？
projects_role.are_you_sure_to_turn_project_to_public.warning.VW=所有人都能浏览。
projects_role.are_you_sure_to_turn_project_to_public.APP=确认把应用修改为公共？
projects_role.are_you_sure_to_turn_project_to_public.warning.APP=所有人都能浏览。
projects_role.public_projects_warning=默认会给所有人授予这个公开项目的权限（游客和登录用户）。所以，这个选择只会作用于私人项目。
projects_role.applicationcreator=创建应用
projects_role.applicationcreator.desc=允许非系统管理员创建应用。
projects_role.portfoliocreator=创建视图
projects_role.portfoliocreator.desc=允许非系统管理员创建视图。
permission_templates=权限模板
permission_templates.page=权限模板
permission_templates.page.description=管理项目模板的权限。默认模板会应用到所有新项目上。
permission_templates.set_default=设置默认
permission_templates.set_default_for=设置默认为
permission_templates.provisioning_warning=请注意，启用 {0} 自动同步时，权限模板只会作用于非 {0} 项目。
permission_template.new_template=新权限模板
permission_template.delete_confirm_title=删除权限模板
permission_template.do_you_want_to_delete_template_xxx=确认删除权限模板 "{0}" 吗？
permission_template.edit_template=修改权限模板
permission_template.edit_permissions=修改权限：{0}
permission_template.key_pattern=项目标识模式
permission_template.key_pattern.description=需要正确的正则表达式
permission_template.default_for=默认为 {0}
permission_templates.project_creators=项目创建人
permission_templates.project_creators.explanation=创建新项目时，项目创建者会获得此权限。
permission_templates.bulk_apply_permission_template=批量应用权限模板
permission_templates.bulk_apply_permission_template.apply_to_selected=即将把选中的权限赋予 {0} 条选中的数据。
permission_templates.bulk_apply_permission_template.apply_to_all=即将把选中的权限授予 {0} 条数据。
permission_templates.bulk_apply_permission_template.apply_to_managed_projects=无法将选中的权限模板应用到 {0} {1} 项目是哪个。
permission_templates.bulk_apply_permission_template.apply_to_only_managed_projects=无法想权限模板应用到 {0} 项目上。
permission_templates.select_to_delete=至少选择一项
permission_templates.delete_selected=删除所有数据
permission_templates.show_actions_for_x=显示模板 {0} 的操作 
promotion.sonarlint.title=充分利用 SonarQube！
promotion.sonarlint.content=使用 SonarLint 获得整个体系的优势，借助免费 IDE 插件尽早发现并解决问题。把 SonarLink 和 SonarQube 连接起来，自动同步规则配置和问题状态。
sonarlint-connection.request.title=允许 SonarLint 连接？
sonarlint-connection.request.description={0} SonarLint 请求访问 SonarQube.
sonarlint-connection.request.description2=是否允许 SonarLint 连接？将创建一个令牌并分享给 SonarLint。
sonarlint-connection.request.action=允许连接
sonarlint-connection.token-error.title=令牌创建失败
sonarlint-connection.token-error.description=SonarQube 无法创建令牌
sonarlint-connection.token-error.description2=返回 IDE 重试，或访问 SonarQube {link} 手工创建新用户令牌。
sonarlint-connection.token-error.description2.link=安全令牌
sonarlint-connection.connection-error.title=令牌创建成功
sonarlint-connection.connection-error.description=令牌已创建：
sonarlint-connection.connection-error.token-name=令牌名称
sonarlint-connection.connection-error.token-value=令牌值
sonarlint-connection.connection-error.next-steps=下一步
sonarlint-connection.connection-error.step1=复制上述令牌。
sonarlint-connection.connection-error.step2=返回 IDE，把令牌粘贴进 SonarLint。
sonarlint-connection.success.title=SonarLint 连接即将成功！
sonarlint-connection.success.description=新令牌 '{0}' 已创建，并发送给 IDE 中的 SonarLint。
sonarlint-connection.success.last-step=最后一步
sonarlint-connection.success.step=返回 IDE 完成设置。
sonarlint-connection.unspecified-ide=未指定 IDE
sonarlint-connected-mode-doc=SonarLint 连接模式相关问题
formatting.page=格式化
formatting.helplink=格式化帮助
formatting.example.link=超链接，格式为：[链接名称](https://www.domain.com)
formatting.example.link.example=[link label](https://www.domain.com)
keyboard_shortcuts_modal.title=快捷键
keyboard_shortcuts_modal.disable_link=禁用快捷键
keyboard_shortcuts_modal.global=全局
keyboard_shortcuts_modal.global.open_search_bar=打开搜索栏
keyboard_shortcuts_modal.global.open_keyboard_shortcuts_modal=打开快捷键对话框
keyboard_shortcuts_modal.global.focus_toasts_messages=聚焦弹出消息
keyboard_shortcuts_modal.navigate_between_issues=切换问题
keyboard_shortcuts_modal.open_issue=打开问题
keyboard_shortcuts_modal.return_back_to_the_list=返回列表
keyboard_shortcuts_modal.do_issue_transition=进行问题转换
keyboard_shortcuts_modal.assign_issue=分配问题
keyboard_shortcuts_modal.assign_issue_to_me=把问题分给我
keyboard_shortcuts_modal.change_tags_of_issue=修改问题标签
keyboard_shortcuts_modal.select_an_issue=选择问题
keyboard_shortcuts_modal.issues_page=问题页
keyboard_shortcuts_modal.issue_details_page.navigate_issue_locations=导航至问题位置
keyboard_shortcuts_modal.issue_details_page.switch_flows=切换流程
keyboard_shortcuts_modal.issue_details_page.comment_an_issue=评论问题
keyboard_shortcuts_modal.issue_details_page.submit_comment=提交评论
keyboard_shortcuts_modal.code_page=代码页
keyboard_shortcuts_modal.code_page.select_files=选择问题
keyboard_shortcuts_modal.code_page.open_file=打开问题
keyboard_shortcuts_modal.measures_page=度量页
keyboard_shortcuts_modal.rules_page=规则页
keyboard_shortcuts_modal.rules_page.navigate_between_rule=切换规则
keyboard_shortcuts_modal.rules_page.open_rule=打开规则
duration.seconds=小于一分钟
duration.minute=大约一分钟
duration.minutes={0} 分钟
duration.hour=大约一小时
duration.hours={0} 小时
duration.day=一天
duration.days={0} 天
duration.month=大约一个月
duration.months={0} 月
duration.year=大约一年
duration.years={0} 年
component_viewer.measure_section.unit_tests=单测
component_viewer.transition.covers=覆盖
component_viewer.transition.duplication=重复
component_viewer.tests.ordered_by=排序
component_viewer.tests.duration=持续时间
component_viewer.tests.test_name=名称
component_viewer.tests.status=状态
component_viewer.x_lines_are_covered=覆盖了 {0} 行
component_viewer.details=详情
component_viewer.show_raw_source=显示源文件
component_viewer.more_actions=更多操作
component_viewer.new_window=在新窗口打开
component_viewer.open_in_workspace=打开文件
component_viewer.open_in_workspace_X=打开 {0}
component_viewer.copy_permalink=复制永久链接
component_viewer.covered_lines=覆盖行
component_viewer.show_details=显示详情
component_viewer.file_measures=文件指标
component_viewer.show_all_measures=显示所有指标
component_viewer.no_component=组件已删除或不存在。
component_viewer.copy_path_to_clipboard=复制文件路径到粘贴板
component_viewer.action_menu=文件菜单
source_viewer.view_all_issues=查询该文件所有问题
source_viewer.expand_all_lines=显示所有代码
source_viewer.covered=单元测试已覆盖
source_viewer.not_covered=单元测试未覆盖
source_viewer.conditions=条件
source_viewer.line_X=行：{0}
source_viewer.click_for_scm_info=点击查看 SCM 信息
source_viewer.author_X=作者：{0}
source_viewer.click_to_copy_filepath=把文件路径复制至粘贴板
source_viewer.issue_link_x={count} {quality} {count, plural, one {issue} other {issues}}
source_viewer.jupyter.output.image=输出
source_viewer.jupyter.preview.error=加载 Jupyter 记事本时报错。使用代码页签查看原代码。
source_viewer.tooltip.duplicated_line=重复行。点击查看重复代码块。
source_viewer.tooltip.duplicated_block=重复代码块。点击查看详情。
source_viewer.tooltip.covered=单元测试完全覆盖。点击查看详情。
source_viewer.tooltip.covered.conditions=完全覆盖 ({0} 个条件)。
source_viewer.tooltip.partially-covered=单元测试部分覆盖。点击查看详情。
source_viewer.tooltip.partially-covered.conditions=部分覆盖 ({0}/{1} 条件)。
source_viewer.tooltip.uncovered=单元测试未覆盖。
source_viewer.tooltip.uncovered.conditions=未覆盖 ({0} 个条件)。
source_viewer.tooltip.no_information_about_tests=没有关于测试文件的更多信息。
source_viewer.tooltip.scm.commited_on=提交
source_viewer.tooltip.scm.revision=版本
source_viewer.issues_on_line.multiple_issues=此行有多个问题
source_viewer.issues_on_line.multiple_issues_same_category={show, select, true {Show} other {Hide}} {count} {category} {count, plural, one {issue} other {issues}} 在此行
source_viewer.issues_on_line.multiple_issues_same_category.legacy={show, select, true {Show} other {Hide}} {count} {issueType} 在此行
source_viewer.load_more_code=加载更多代码
source_viewer.loading_more_code=加载更多代码...
source_viewer.expand_above=展开上层
source_viewer.expand_below=展开下层
source_viewer.copy_permalink=复制永久链接
source_viewer.copy_line=复制行
source_viewer.copied_to_clipboard=复制到剪切板
source_viewer.new_code=新代码
source_viewer.coverage.covered=已覆盖代码
source_viewer.coverage.uncovered=未覆盖代码
source_viewer.coverage.partially-covered=部分覆盖代码
workspace.minimize=最小化
workspace.full_window=放大至全屏
workspace.normal_size=缩小至正常大小
workspace.close=由打开文件中删除
workspace.no_rule=此规则已删除或不存在。
marketplace.page=应用市场
marketplace.page.description=发现并安装新功能
marketplace.page.description_best_edition=此版本包括 SonarQube-SonarLint 生态系统的所有功能。
marketplace.page.you_are_running.community=正在运行社区版。
marketplace.page.you_are_running.developer=正在运行开发版。
marketplace.page.you_are_running.enterprise=正在运行企业版。
marketplace.page.you_are_running.datacenter=正在运行数据中心版。
marketplace.page.plugins=插件
marketplace.page.plugins.description=应用市场中的插件不是由 SonarSource 提供或进行技术支持。请直接联系对应的维护人获取支持。
marketplace.page.plugins.description2=安装插件是一个手工操作，请参考 {link}。
marketplace.page.plugins.description2.link=文档
marketplace.plugin_list.no_plugins.all=没有可安装或更新的插件
marketplace.plugin_list.no_plugins.installed=未安装插件
marketplace.plugin_list.no_plugins.updates=没有需要更新的插件
marketplace.instance_needs_to_be_restarted_to={instance} 需要重启，来
marketplace.install_x_plugins=安装 {nb} 插件
marketplace.update_x_plugins=更新 {nb} 插件
marketplace.uninstall_x_plugins=卸载 {nb} 插件
marketplace.not_activated=更新中心未启用。
marketplace.all=全部
marketplace.installed=已安装
marketplace.updates_only=可升级
marketplace.restart=重启
marketplace.revert=撤销
marketplace.install=安装
marketplace.upgrade_to_x=升级至 {0}
marketplace.downgrade_to_x=降级至 {0}
marketplace.installing=安装中...
marketplace.upgrade=升级
marketplace.downgrade=降级
marketplace.checking_license=检查协议...
marketplace._installed=已安装
marketplace.available_under_commercial_license=在商业版本下可用
marketplace.learn_more=了解更新
marketplace.request_free_trial=申请免费试用版
marketplace.homepage=首页
marketplace.issue_tracker=任务跟踪器
marketplace.licensed_under_x=授权协议 {license}
marketplace.developed_by_x=由 {organization} 开发
marketplace.install_pending=等待安装
marketplace.update_pending=等待更新
marketplace.uninstall_pending=等待卸载
marketplace.requires_restart=需要重启
marketplace.updates=更新
marketplace.update_status.COMPATIBLE=兼容
marketplace.update_status.INCOMPATIBLE=不兼容
marketplace.update_status.REQUIRES_SYSTEM_UPGRADE=需要系统升级
marketplace.update_status.DEPS_REQUIRE_SYSTEM_UPGRADE=某些依赖需要系统更新
marketplace.installing_this_plugin_will_also_install_x=安装此插件，将会同时安装：{0}
marketplace.show_plugin_changelog=显示 {0} {1} 修改记录
marketplace.update_to_x=更新至 {0}
marketplace.uninstall=卸载
marketplace.i_accept_the=我接受
marketplace.terms_and_conditions=条款和条件
marketplace.release_notes=发布日志
marketplace.how_to_setup_cluster_url=希望了解集群的更多配置。参考 {url} 中的文档。
marketplace.search=根据特性或分类搜索...
marketplace.risk_consent.title=安装插件
marketplace.risk_consent.description=安装非 SonarSource 提供的插件，需要自担风险。SonarSource 对这些插件的安装和使用都不承担责任。
marketplace.risk_consent.installation=确认风险后，你可以直接通过下面列表安装插件。
marketplace.risk_consent.action=我了解风险
plugin_risk_consent.page=插件风险提示
plugin_risk_consent.title=安装插件
plugin_risk_consent.description=检测到一个插件。
plugin_risk_consent.description2=安装非 SonarSource 提供的插件，需要自担风险。SonarSource 对这些插件的安装和使用都不承担责任。
plugin_risk_consent.action=我了解风险
component_navigation.status.failed=最后一次后台作业失败。
component_navigation.status.failed_X={type} 已失败。
component_navigation.status.failed.admin.link=最后一次后台作业失败。更多信息请查看 {url}。
component_navigation.status.failed_X.admin.link={type} 失败。更多信息请查看 {url}。
component_navigation.status.failed.admin.help=最后一次后台作业失败。更多信息请点击下面菜单，"{stacktrace}"。
component_navigation.status.failed_X.admin.help={type} 失败。更多信息请点击下面菜单，"{stacktrace}"。
component_navigation.status.failed_branch=项目 ({branch}) 最近一次后台作业失败了。
component_navigation.status.failed_branch_X=项目 ({branch}) 最后一次 {type} 失败了。
component_navigation.status.failed_branch.admin.link=项目 ({branch}) 最近一次后台作业失败了。更多信息参考 {url} 。
component_navigation.status.failed_branch_X.admin.link=项目 ({branch}) 最近一次 {type} 失败了。更多信息参考 {url} 。
component_navigation.status.failed_branch.admin.help=项目 ({branch}) 最近一次后台作业失败了。更多信息请点击下面菜单，"{stacktrace}"。
component_navigation.status.failed_branch_X.admin.help=项目 ({branch}) 最近一次 {type} 失败了。更多信息请点击下面菜单，"{stacktrace}"。
component_navigation.status.pending=有一个等待中的后台作业。
component_navigation.status.pending_X=有一个等待中的 {type}。
component_navigation.status.pending.admin.link=有一个等待中的后台作业。更多信息请查看 {url}。
component_navigation.status.pending_X.admin.link=有一个等待中的 {type}。更多信息请查看 {url}。
component_navigation.status.pending.admin.help=有一个等待中的后台作业。
component_navigation.status.pending_X.admin.help=有一个等待中的 {type}。
component_navigation.status.in_progress=有一个执行中的后台作业
component_navigation.status.in_progress_X=有一个执行中的 {type}。
component_navigation.status.in_progress.admin.link=有一个执行中的后台作业。更多信息请查看 {url}。
component_navigation.status.in_progress_X.admin.link=有一个执行中的 {type}。更多信息请查看 {url}。
component_navigation.status.in_progress.admin.help=有一个执行中的后台作业。
component_navigation.status.in_progress_X.admin.help=有一个执行中的 {type}。
component_navigation.status.last_blocked_due_to_bad_license_X=上次分析因为非法授权被阻塞了，现在授权已经正常了。请重新分析 {0}。
component_navigation.pr_deco.error_detected_X=发现配置问题。SonarQube 实例无法进行拉取请求装饰。{action}
component_navigation.pr_deco.action.check_project_settings=请检查项目配置。
component_navigation.pr_deco.action.contact_project_admin=请联系系统管理员。
background_task.status.ALL=所有
background_task.status.PENDING=待定
background_task.status.IN_PROGRESS=执行中
background_task.status.SUCCESS=成功
background_task.status.FAILED=失败
background_task.status.CANCELED=取消
background_task.status.ALL_EXCEPT_PENDING=所有（不包含待定）
background_task.type.ALL=所有
background_task.type.REPORT=项目分析
background_task.type.DEV_REFRESH=开发者分析
background_task.type.DEV_PURGE=清除开发者
background_task.type.ISSUE_SYNC=重新加载项目数据
background_task.type.APP_REFRESH=重新计算
background_task.type.PROJECT_EXPORT=导出项目
background_task.type.PROJECT_IMPORT=导入项目
background_task.type.AUDIT_PURGE=清理审计日志
background_task.type.REPORT_SUBMIT=提交报告邮件
background_task.type.GITHUB_AUTH_PROVISIONING=Github 同步
background_task.type.GITHUB_PROJECT_PERMISSIONS_PROVISIONING=Github 项目权限同步
background_task.type.GITLAB_AUTH_PROVISIONING=GitLab 同步
background_task.type.GITLAB_PROJECT_PERMISSIONS_PROVISIONING=Gitlab 项目权限同步
background_task.type.SCA_RESCAN_BRANCH=SCA 扫描分支
background_tasks.page=后台任务
background_tasks.page.description=服务器正在处理批量分析提交的报告。此页面可以监控等待执行的报告队列，同时可以访问过去分析的历史。
background_tasks.currents_filter.ONLY_CURRENTS=只显示最新分析
background_tasks.date_filter=时间
background_tasks.date_filter.ALL=所有时间
background_tasks.date_filter.TODAY=今天
background_tasks.date_filter.CUSTOM=自定义
background_tasks.table.status=状态
background_tasks.table.task=任务
background_tasks.table.id=编号
background_tasks.table.submitted=提交
background_tasks.table.submitter=提交人
background_tasks.table.started=开始
background_tasks.table.finished=完成
background_tasks.table.duration=持续时间
background_tasks.table.nodeName=节点
background_tasks.filter_by_component_x=根据组件 "{0}" 过滤
background_tasks.cancel_task=取消任务
background_tasks.cancel_task.text=是否确认取消此待处理的任务？
background_tasks.cancel_all_tasks=取消所有待定任务
background_tasks.cancel_all_tasks.text=是否确认取消所有待处理的任务？
background_tasks.cancel_all_tasks.submit=全部取消
background_tasks.scanner_context=扫描环境
background_tasks.show_scanner_context=显示扫描环境
background_tasks.show_actions_for_task_x_in_list=为 {0} 行任务显示操作
background_tasks.show_stacktrace=显示错误详情
background_tasks.show_warnings=显示警告
background_tasks.error_message=错误信息
background_tasks.error_stacktrace.title=错误详情: {project} [{type}]
background_tasks.error_stacktrace=错误详情
background_tasks.pending=待定
background_tasks.pending_time=等待时间
background_tasks.pending_time.description=最老的后台作业等待执行的时间。
background_tasks.failures=仍然失败
background_tasks.date_and_time={date} - {time}
background_tasks.submitted_by_x=由 {submitter}
background_tasks.number_of_workers=工作线程数量：
background_tasks.number_of_workers.warning=垂直扩展服务器之前就配置更多工作线程，反而是降低性能。
background_tasks.change_number_of_workers=修改 CE 工作线程：
background_tasks.change_number_of_workers.hint=对于大型项目进行分析报告，增加计算引擎的工作线程可以让你充分利用多核服务器的计算引擎内存（垂直扩展）。
background_tasks.add_more_workers=增加工作线程加速分析
background_tasks.add_more_workers.text=使用企业版增加计算引擎工作线程的数量。
background_tasks.search_by_task_or_component=搜索任务或组件
background_tasks.failing_count=最近执行的失败的分析报告的项目数量
background_tasks.retry_failed_tasks=某些项目数据刷新失败。参考 <link>文档</link> 中的步骤进行重试。
project_dump.page=导入/导出
project_dump.page.description1=三步把项目从一个 SonarQube 实例移动到另一个实例：
project_dump.page.description2=导出项目，把生成的导出文件复制到目标服务器，在目标 SonarQube 实例的对应业务导入文件。
project_dump.page.description_without_import1=导出项目问题，指标和指标历史，再导入到企业版或更高级的同版本配置的实例。
project_dump.page.description_without_import2=导出文件会生成到本地文件系统。需要复制到需要导入的目标文件系统下。
project_dump.refresh=刷新
project_dump.see_details=查看详情
project_dump.export=导出
project_dump.do_export=导出
project_dump.can_not_export=无法导出此项目，因为尚未执行过分析。
project_dump.pending_export=导出已进入计划 {0}，等待执行。
project_dump.in_progress_export=导出执行中，开始于 {0}。
project_dump.failed_export=导出失败。请重试。
project_dump.latest_export_available=最新项目导出已生成至 {0}。对应目录：
project_dump.export_available=项目导出文件已生成。对应目录：
project_dump.export_form_description=把项目导出至文件系统。导出文件需要手工复制至目标服务器。
project_dump.import=导入
project_dump.do_import=导入
project_dump.import_success=项目成功导入至 {0}。
project_dump.can_not_import=项目无法导入，因为已经包含了一些数据。
project_dump.no_file_to_import=项目无法导入，因为找不到导出文件。
project_dump.pending_import=导入已进入计划 {0}，等待执行。
project_dump.in_progress_import=导人执行中，开始于 {0}。
project_dump.failed_import=导入失败。请重试。
project_dump.import_form_description=找到此项目的导出文件。可以点击下面按钮进行导入。
project_dump.import_form_description_disabled=项目无法导入。只有企业版支持此功能。
system.application_nodes_title=应用节点
system.are_you_sure_to_restart=确认重启服务器？
system.cluster_log_level.info=对所有应用服务器应用修复，除了搜索节点依赖。
system.copy_id_info=复制 ID 信息
system.current_health_of_x=当前健康状态 {0}
system.current_health.green=正常状态
system.current_health.yellow=启动中状态
system.current_health.red=下线状态
system.download_logs=下载日志
system.download_system_info=下载系统信息
system.download_x=下载 {0}
system.forcing_shutdown_not_recommended=不建议强制关闭，可能会中断正在执行的分析报告。
system.hide_intermediate_versions=隐藏中间版本
system.how_to_upgrade=如何升级？
system.latest_version=最新版本
system.latest_patch=补丁发布
system.lta_version=最新 LTA 版本
system.log_level.warning=当前级别会影响性能。请确认在你调试完改回 INFO 级别。注意，当重启服务器后，级别会自动重置为 sonar.properties 中的配置。
system.log_level.warning.short=当前级别会影响性能，改回 INFO 级别。
system.log_level.info=不会修改搜索的配置。
system.logs_level=日志级别
system.logs_level.change=修改日志级别
system.new_version_available=发现新版本 SonarQube。
system.restart_does_not_reload_sonar_properties=请注意重启并不会重新加载 sonar.properties 文件。
system.see_whats_new=了解最新更新。
system.release_notes=发布日志
system.released_x=发布 {0}
system.restart_in_progress=正在重启
system.restart_server=重启服务器
system.instance_restarting=正在重启 {instance}。已完成的链接： {link} 。
system.search_nodes_title=搜索节点
system.see_sonarqube_downloads=查看所有 SonarQube 下载
system.not_production_database_warning=server ID 仅用于内嵌数据库，需要谨慎考虑。建议为长久使用配置一个外部数据库，再申请许可证。
system.server_id=服务器 ID
system.set_log_level=设置日志级别
system.show_intermediate_versions=显示中间版本
system.system_upgrade=新更新发布
system.version=版本
system.version_is_availble=发现 {version}
overview.X_conditions_failed={conditions} 个条件失败
overview.failed_condition.x_rating_required={rating} 要求 {value} 达到 {threshold}
overview.failed_condition.x_required={metric} 要求 {threshold}
overview.fix_failed_conditions_with_sonarlint=你可以在 IDE 中使用 {link} 修复问题以避免质量门禁失败。此功能由连接模式提供。
overview.new_issues=新问题
overview.pull_request.fixed_issues=修复问题
overview.pull_request.fixed_issues.help=预计合并请求修复的问题
overview.pull_request.fixed_issues.disclaimer=只会计算合并请求中修改的文件中的问题。未修改的文件中修改的问题不会统计。
overview.pull_request.fixed_issues.disclaimer.2=如果合并请求和目标分支未同步，目标分支产生的新问题会被错误的认为在合并请求中修复了。需要执行 rebase 合并请求更新结果。
overview.accepted_issues.help=未修复的有效问题
overview.quality_gate=质量门禁状态
overview.quality_gate_x=质量门禁: {status}
overview.quality_gate.help=质量门禁是一系列基于指标的布尔表达式。它可以帮助我们实时了解项目是否已经满足生产要求了。如果当前状态为未通过，可以参考哪个指标导致了问题，和需要达标的数值。
overview.quality_gate_failed_with_x={0} 个错误
overview.quality_gate_code_clean=代码没有问题！
overview.you_should_define_quality_gate=应该为此项目定义一个质量门禁。
overview.quality_gate.ignored_conditions=因为代码太少，有些新代码中的质量门禁条件会被忽略。
overview.quality_gate.ignored_conditions.tooltip=分析周期开始时，如果只添加或修改很少代码，就很难达到期望的代码覆盖或重复级别。为了避免质量门禁失效，如果工作量不大时，只有新代码超过 20 行时，才会计算新代码重复读和覆盖率的质量门禁条件。
overview.quality_gate.conditions_on_new_code=只会在新代码中检查质量域中定义的条件。参考项目分配的 {link} 了解更多信息。
overview.quality_gate.conditions.cayc.warning.title.APP=一些项目没有准备好“编码时清理”
overview.quality_gate.conditions.cayc.warning.title.TRK=这个项目没有准备好“编码时清理”
overview.quality_gate.conditions.cayc.details.APP=这些项目使用的质量门禁可以帮助你达到清洁代码的状态：
overview.quality_gate.conditions.cayc.details.TRK=这个质量门禁会帮助你达到清洁代码的状态。
overview.quality_gate.conditions.cayc.details_with_link=修复 {link} 会帮助你达到清洁代码的状态。
overview.quality_gate.conditions.non_cayc.warning.link=此质量门禁
overview.quality_gate.conditions.cayc.link=了解原因
overview.quality_gates.conditions.condition_simplification_tour.title=单条件，零问题
overview.quality_gates.conditions.condition_simplification_tour.content=<p><link>{qualityGateName} 质量门禁</link>中一个保证新代码没有问题的单独条件。</p> <p>必须处理项目中新代码的每个问题，才能通过此质量门禁。</p>
overview.quality_gate.show_project_conditions_x=显示 {0} 项目的失败条件
overview.quality_gate.hide_project_conditions_x=隐藏 {0} 项目的失败条件
overview.quality_gate.coverage=覆盖率
overview.quality_gate.duplications=重复
overview.new_coverage.on_x_new_lines={link} 需要覆盖的新代码行
overview.coverage.on_x_new_lines={link} 需要覆盖的行
overview.new_duplicated_lines_density.on_x_new_lines={link} 新代码行
overview.duplicated_lines_density.on_x_new_lines={link} 代码行
overview.quality_gate.require_fixing={count, plural, one {requires} other {require}} 修复
overview.quality_gate.require_reviewing={count, plural, one {requires} other {require}} 复审
overview.quality_gate.required_x=要求 {operator} {requirement}
overview.quality_gate.required_x_reviewed=需要审核: {requirement}
overview.quality_profiles=质量配置
overview.new_code_period_x=新代码：{0}
overview.max_new_code_period_from_x=最大新代码：{0}
overview.started_x=起始于 {0}
overview.set_as_homepage=设为首页
overview.new_code=新代码
overview.overall_code=全部代码
overview.last_analysis_x=最近分析 {date}
overview.previous_analysis_x=最近分析 {0}
overview.started_on_x=始于 {0}
overview.previous_analysis_on_x=最近分析于 {0}
overview.on_new_code=新代码
overview.on_new_code_long=新代码中的条件
overview.see_list_of_x_y_issues=查看列表 {0} {1}
overview.see_more_details_on_x_of_y=查看 {0} 到 {1} 的更多信息
overview.see_more_details_on_x_y=查看 {0} {1} 的更多信息
overview.metric_not_computed=未计算
overview.about_this_portfolio=关于这个视图
overview.about_this_project.APP=关于这个应用
overview.about_this_project.TRK=关于这个项目
overview.project_activity.APP=应用活动
overview.project_activity.TRK=项目活动
overview.project_activity.click_to_see=点击查看项目活动
overview.external_links=扩展链接
overview.project_key.APP=应用标识
overview.project_key.TRK=项目标识
overview.project_key.click_to_copy=把标识复制到粘贴板
overview.activity=活动
overview.activity.graph_shows_data_for_x=此处通常显示 {0} 的历史数据。点击下方“活动”连接显示更多信息。
overview.recent_activity=最近活动
overview.accepted_issues=接受问题
overview.accepted_issues.description=有效问题，不修复，表示接受技术债务。
overview.accepted_issues.total=全部接受问题
overview.high_impact_accepted_issues=高影响性接受问题
overview.measures.empty_explanation=第二次分析分支后，会出现新代码的指标。
overview.measures.empty_link=参考 {learn_more_link} 了解代码清洁的信息。
overview.measures.same_reference.explanation=此分支配置为引用分支。不会有新代码。
overview.measures.bad_reference.explanation=此分支无法与引用分支比较。通过 SCM 或分析报告了解原因。
overview.measures.bad_setting.link=可以通过 {setting_link} 配置修复。
overview.measures.security_hotspots_reviewed=审查
overview.measures.software_impact.total_open_issues=打开问题
overview.measures.software_impact.count_tooltip=代码中的问题会影响多个软件质量。修改一个问题会影响多个软件质量。
overview.measures.software_impact.see_list_of_x_open_issues=参考 {count} 打开的 {softwareQuality} 问题列表
overview.measures.software_impact.severity.see_x_open_issues=参考 {count} 打开的 {softwareQuality} {severity} 严重性的问题
overview.measures.software_impact.severity.HIGH=H
overview.measures.software_impact.severity.HIGH.tooltip=高影响
overview.measures.software_impact.severity.HIGH.improve_tooltip=高
overview.measures.software_impact.severity.MEDIUM=M
overview.measures.software_impact.severity.MEDIUM.tooltip=中影响
overview.measures.software_impact.severity.MEDIUM.improve_tooltip=中
overview.measures.software_impact.severity.LOW=L
overview.measures.software_impact.severity.LOW.tooltip=低影响
overview.measures.software_impact.severity.LOW.improve_tooltip=低
overview.measures.software_impact.improve_rating_tooltip={softwareQuality} 评级为 {ratingLabel} 当至少有一个问题 {severity} 影响软件的 {_softwareQuality}。
overview.measures.software_impact.improve_rating_tooltip.A={softwareQuality} 评级为 {ratingLabel}，没有影响软件质量 {_softwareQuality} 的问题。
overview.measures.software_impact.improve_rating_tooltip.MAINTAINABILITY=维护性评级为 {ratingLabel}，相对代码规模，技术债务水平比较高。
overview.measures.software_impact.improve_rating_tooltip.MAINTAINABILITY.A=维护性评级为 A。相对代码规模，技术债务水平比较低。
overview.project.no_lines_of_code=项目没有包含代码。
overview.project.empty=空项目。
overview.project.branch_X_no_lines_of_code=分支 "{0}" 没有代码行。
overview.project.branch_X_empty=分支 "{0}" 是空的。
overview.project.main_branch_no_lines_of_code=主分支没有代码行。
overview.project.main_branch_empty=项目的主分支为空。
overview.project.branch_needs_new_analysis=分支数据不完整。重新执行分析进行更新。
overview.project.last_analysis.date_time=上次分析启动时间 {0}
overview.project.next_steps.set_up_pr_deco_and_ci.admin=要使用更多 SonarQube 功能，{link_ci}，在 {link_project_settings} 中设置 DevOps 平台集成。
overview.project.next_steps.set_up_pr_deco_and_ci=要使用更多 SonarQube 功能，{link_ci}，询问项目管理员设置 DevOps 平台集成。
overview.project.next_steps.set_up_pr_deco.admin=要使用更多 SonarQube 功能，在 {link_project_settings} 中设置 DevOps 平台集成。
overview.project.next_steps.set_up_pr_deco=要使用更多 SonarQube 功能，询问项目管理员设置 DevOps 平台集成。
overview.project.next_steps.set_up_ci=要使用更多 SonarQube 功能，{link}
overview.project.next_steps.links.project_settings=配置设置
overview.project.next_steps.links.set_up_ci=使用喜欢的 CI 进行分析
overview.project.software_impact.has_rating=软件质量 {softwareQuality} 评级 {rating}
overview.run_analysis_to_compute.TRK=运行新分析进行计算。
overview.run_analysis_to_compute.APP=需要分析所有项目。
overview.missing_project_data=安全性，可靠性，维护性正在计算中。数值可能在 {qualifier, select, TRK {the next analysis} other {all projects in this {qualifier, select, APP {application} other {portfolio}}。{learn_more}
overview.coverage_on=覆盖
overview.coverage_on_X_lines=覆盖率，代码 {count} 行
overview.coverage_on_X_new_lines=覆盖率，新代码 {count} 行
overview.duplications_on=重复
overview.duplications_on_X_lines=重复率，代码 {count} 行
overview.duplications_on_X_new_lines=重复率，新代码 {count} 行
overview.period.previous_version=自从 {0}
overview.period.previous_version_only_date=自从上个版本
overview.period.previous_analysis=自从上次分析
overview.period.days=最近 {0} 天
overview.period.version=自从 {0}
overview.period.date=自从 {0}
overview.period.manual_baseline=自从 {0}
overview.period.number_of_days=最近 {0} 天
overview.period.specific_analysis=自从 {0}
overview.period.reference_branch=比较 {0}
overview.failed.badge={counter} 失败
overview.gate.ERROR=失败
overview.gate.WARN=警告
overview.gate.OK=通过
overview.gate.view.no_alert=此视图已通过质量门禁。
overview.gate.view.warnings=此视图已达到下列质量门禁的警告条件：{0}。
overview.gate.view.errors=此视图已达到下列质量门禁的错误条件：{0}。
overview.measurement_type.DUPLICATION=重复
overview.measurement_type.COVERAGE=覆盖率
overview.measures.failed_badge=失败
overview.complexity_tooltip.function={0} 函数的复杂度为 {1}
overview.complexity_tooltip.file={0} 文件的复杂度为 {1}
overview.deprecated_profile=质量配置使用了 {0} 已废弃的规则，需要更新。
overview.deleted_profile=自从上次分析，删除了 {0} 。
overview.link_to_x_profile_y=前往 {0} 的配置 "{1}"
overview.sonarlint_ad.header=使用 IDE 扩展，在质量门禁失败之前发现问题，SonarLint
overview.sonarlint_ad.details_1=敲键盘时就能直接使用 Sonar 分析能力
overview.sonarlint_ad.details_2=不用等待 PR 通过所有检查
overview.sonarlint_ad.details_3=使用快速修复实时解决标记问题
overview.sonarlint_ad.details_4=支持 12 种主流 IDE （包括 JetBrain 和 Miscrosoft IDE）
overview.sonarlint_ad.details_5=永久免费
overview.sonarlint_ad.learn_more=了解 SonarLint
overview.sonarlint_ad.close_promotion=关闭 SonarLint 推荐
overview.badges.get_badge=徽章
overview.badges.title=徽章
overview.badges.description.TRK=在 README 或 website 中显示项目指标状态。选择样式：
overview.badges.description.VW=在 README 或 website 中显示视图指标状态。选择样式：
overview.badges.description.APP=在 README 或 website 中显示引用指标状态。选择样式：
overview.badges.type=徽章类型
overview.badges.metric=指标
overview.badges.format=代码格式
overview.badges.options.colors.white=白色
overview.badges.options.colors.black=黑色
overview.badges.options.colors.orange=橘色
overview.badges.options.formats.md=Markdown
overview.badges.options.formats.url=图片网址
overview.badges.measure=指标
overview.badges.measure.alt=标准徽章
overview.badges.measure.description.TRK=这个徽章自动显示你的项目指标的当前状态。
overview.badges.measure.description.VW=这个徽章自动显示你的视图指标的当前状态。
overview.badges.measure.description.APP=这个徽章自动显示你的应用指标的当前状态。
overview.badges.quality_gate=质量门禁
overview.badges.quality_gate.alt=SonarCloud 质量门禁徽章
overview.badges.quality_gate.description=这个徽章动态显示项目的当前质量门禁的状态。
overview.badges.quality_gate.description.APP=这个徽章动态显示应用的当前质量门禁的状态。
overview.badges.quality_gate.description.TRK=这个徽章动态显示项目的当前质量门禁的状态。
overview.badges.quality_gate.description.VW=这个徽章动态显示视图的当前质量门禁状态。
overview.badges.ai_code_assurance=AI 代码保障
overview.badges.ai_code_assurance.alt=AI 代码保障徽章
overview.badges.ai_code_assurance.description=显示 Sonar AI 代码保障的状态
overview.badges.ai_code_assurance.description.TRK=显示你的项目的 Sonar AI 代码保障的状态
overview.badges.leak_warning=项目徽章会暴露你的安全率和其他指标。确保只在授信环境使用项目徽章。
overview.badges.renew=重置令牌
overview.badges.renew.description=如果项目徽章安全令牌被泄漏到不安全环境，可以执行重置：
overview.badges.copy_snippet=为选中徽章复制代码片段
overview.quality_profiles_update_after_sq_upgrade.message=升级 SonarQube {sqVersion} 更新质量配置。会对项目的问题造成影响。 {link}
overview.quality_profiles_update_after_sq_upgrade.link=了解更多信息
overview.activity.variations.new_analysis=新分析:
overview.activity.variations.first_analysis=第一次分析:
overview.promoted_section.title=不要让问题积累。参考“编码时清理”！
overview.promoted_section.content=学习如何通过只清理新代码来提升代码质量
overview.promoted_section.button_primary=参考教程
overview.promoted_section.button_secondary=先不看
overview.ai_assurance.unsolved_overall.title=所有代码中未解决的问题
overview.ai_assurance.unsolved_overall.description=此分支的代码中发现的未解决问题可能存在风险。我们建议在发布分支之前复审这些问题。
overview.ai_assurance.unsolved_overall.dismiss=忽略未解决的代码问题
overview.issues.issue_from_update={count} 来自 SonarQube 更新
overview.issues.issue_from_update.tooltip=SonarQube更新后出现的问题
guiding.cayc_promotion.1.title=新代码的能量
guiding.cayc_promotion.1.content.1=只清理新代码更加简单，而且能保证不会增加新债务。当修改老代码时，也能随时时间推移让编码变得更加干净。我们称之为“编码时清理”。
guiding.cayc_promotion.2.title=定义新代码
guiding.cayc_promotion.2.content.1=你的团队或组织可以确定你的项目开始执行的新代码的区间，比如，项目每次发布后。
guiding.cayc_promotion.3.title=绿色代表整洁
guiding.cayc_promotion.3.content.1=质量门禁状态会告诉你，新代码是否足够干净。尽可能让它一直是绿色的，你的项目就处于时刻发布的状态。
guiding.cayc_promotion.4.title=在所有级别进行清理
guiding.cayc_promotion.4.content.1=使用 SonarLint，在你的 {value} 中一边写代码，一边清理。
guiding.cayc_promotion.4.content.2=一旦完成一个功能，分析 {value} (商业版本独有) 确认没有错过任何问题。
guiding.cayc_promotion.4.content.3=最后，通过一次全量 {value} 分析确认新代码是干净的。
api_documentation.domain_nav=Web API 域导航
api_documentation.internal_tooltip=风险自付；不会通知内部服务的修改和删除。
api_documentation.page=Web API
api_documentation.page.v2=Web API v2
api_documentation.show_deprecated=显示废弃 API
api_documentation.show_deprecated.learn_more=了解更多废弃 Web API
api_documentation.show_internal=显示内部 API
api_documentation.show_internal_v2=显示内部
api_documentation.possible_values=可能值
api_documentation.default_values=默认值
api_documentation.example_values=示例值
api_documentation.max_values=最大值
api_documentation.min_value=最小值
api_documentation.max_value=最大值
api_documentation.min_length=最小长度
api_documentation.max_length=最大长度
api_documentation.internal=内部
api_documentation.deprecated=废弃
api_documentation.deprecated_since_x=废弃自 {0}
api_documentation.parameters=参数
api_documentation.response_example=响应示例
api_documentation.changelog=修改日志
api_documentation.search=根据名称搜索...
api_documentation.v2.search=搜索 API...
api_documentation.v2.parameter_header=请求
api_documentation.v2.response_header=响应
api_documentation.v2.request_subheader.query=查询参数
api_documentation.v2.request_subheader.path=路径参数
api_documentation.v2.request_subheader.header=头部
api_documentation.v2.request_subheader.request_body=请求体
api_documentation.v2.request_subheader.request_content_type=Content-Type: 
api_documentation.v2.enum_description=有效数据: {values}
code.ai_badge_tooltip.application=此应用程序包含具有AI生成代码的项目。
code.ai_badge_tooltip.project=此项目包含AI生成的代码。
code.ai_badge_tooltip.sub_portfolio=此嵌套组合包含具有AI生成代码的项目。
code.aica_disabled_projects=未启用AI代码保证的项目
code.aica_disabled_projects.tooltip=此投资组合中不使用Sonar AI代码保证功能的项目。
code.aica_enabled_projects=支持AI代码保证的项目
code.aica_enabled_projects.tooltip=该组合中的项目包含AI生成的代码，并受益于Sonar的AI代码保证。
code.open_component_page=打开组件页
code.search_placeholder=搜索文件和子项目...
code.search_placeholder.application=搜索项目...
code.search_placeholder.portfolio=搜索项目和子组合...
code.parent_folder=上级目录
code.last_analysis_date=上次分析
code.name=名称
code.pin=固定文件
promotion.security_dev_edition.title=是否了解...
promotion.security_dev_edition.text=SonarQube 开发者版可以检测到项目语言中的260多种不同类型的安全问题。
promotion.security_dev_edition.action=比较收益
component_measures.details_are_not_available=暂时无法使用评估指标的信息。
component_measures.domain_x_overview={0} 总览
component_measures.domain_overview=总览
component_measures.items=项目
component_measures.tab.tree=树
component_measures.tab.list=列表
component_measures.show_metric_history=显示度量历史
component_measures.tab.treemap=树图
component_measures.view_as=显示为
component_measures.legend.color=颜色:
component_measures.legend.size=大小:
component_measures.legend.worse_of_x_y={0} 和 {1} 中更差的
component_measures.legend.help_x=显示或隐藏 {0} 评级的数据。
component_measures.legend.only_first_500_files=只显示前面 500 个文件的数据
component_measures.no_history=没有历史数据。
component_measures.not_found=未找到请求的指标。
component_measures.empty=无指标。
component_measures.select_files=选择文件
component_measures.navigate=导航
component_measures.to_select_files=选择文件
component_measures.to_navigate=跳转
component_measures.to_navigate_files=下一个/上一个文件
component_measures.hidden_best_score_metrics=还有 {0} 个评分为 {1} 的隐藏组件。
component_measures.hidden_best_score_metrics_show_label=显示隐藏组件
component_measures.navigation=度量导航
component_measures.skip_to_navigation=跳过度量导航
component_measures.see_metric_history=查看历史
component_measures.leak_legend.new_code=新代码:
component_measures.awaiting_analysis.name=问题
component_measures.leak_awaiting_analysis.name=问题
component_measures.overview.project_overview.subnavigation=项目总览
component_measures.overview.project_overview.title=风险
component_measures.overview.project_overview.description=快速了解操作风险。绿色之外的颜色表示风险：包含 Bug 或漏洞。右上方的图像表示长期看来存在风险。左下侧的绿色气泡表示质量最佳。
component_measures.overview.Reliability.description=了解 Bug 的操作风险。气泡越红，Bug 越严重。气泡大小表示 Bug 的规模，气泡竖直位置反应了定位 Bug 的时间。底部的小绿气泡表示质量最佳。
component_measures.overview.Security.description=了解漏洞的操作风险。气泡越红，漏洞越严重。气泡大小表示漏洞的规模，气泡竖直位置反应了定位漏洞的时间。底部的小绿气泡表示质量最佳。
component_measures.overview.Maintainability.description=了解代码异味长期风险。气泡越红，技术债务评级越高。气泡大小表示异味的规模，气泡竖直位置反应了覆盖的缺失程度。底部的小绿气泡表示质量最佳。
component_measures.overview.Coverage.description=了解缺失测试覆盖的长期风险。气泡大小表示未覆盖行数，气泡竖直位置反映了覆盖的缺失程度。底部的小气泡表示质量最佳。
component_measures.overview.Duplications.description=了解重复代码的长期风险。气泡大小表示重复层度，气泡竖直位置反应了重复行数。底部的小气泡表示质量最佳。
component_measures.overview.see_data_as_list=将图表数据展示为列表
component_measures.domain_subnavigation.Reliability.help=这个区域对应的代码，会遇到更多期望外的问题。
component_measures.domain_subnavigation.Maintainability.help=这个区域对应的代码，会发现比预期更难维护。
component_measures.domain_subnavigation.Security.help=这个区域对应的代码，可能被黑客攻击。
component_measures.domain_subnavigation.SecurityReview.help=这个区域对应的潜在安全风险，包含热点和审查状态。
component_measures.domain_subnavigation.Complexity.help=应用的控制流是简单还是复杂。圈复杂度可以计算出达到全面覆盖需要的最少测试用例。认知复杂度对应这个应用是否很难被理解。
component_measures.subnavigation_category.new_code_category=新代码
component_measures.subnavigation_category.overall_category=全部代码
component_measures.subnavigation_category.tests_category=测试
component_measures.facet_category.overall_category.estimated=合并后评估
component_measures.bubble_chart.zoom_level=当前缩放登记。滚动图表进行放大或缩小，或点击重置。
component_measures.not_all_measures_are_shown=未包含所有项目和应用
component_measures.not_all_measures_are_shown.help=无权访问所有项目或应用。会继续基于所有项目和应用进行计算指标。
component_measures.metric.new_security_issues.name=问题
component_measures.metric.new_software_quality_security_issues.name=问题
component_measures.metric.new_security_issues.detailed_name=新问题
component_measures.metric.new_software_quality_security_issues.detailed_name=新问题
component_measures.metric.new_vulnerabilities.name=问题
component_measures.metric.new_vulnerabilities.detailed_name=新问题
component_measures.metric.new_reliability_issues.name=问题
component_measures.metric.new_software_quality_reliability_issues.name=问题
component_measures.metric.new_reliability_issues.detailed_name=新问题
component_measures.metric.new_software_quality_reliability_issues.detailed_name=新问题
component_measures.metric.new_maintainability_issues.name=问题
component_measures.metric.new_software_quality_maintainability_issues.name=问题
component_measures.metric.new_maintainability_issues.detailed_name=新问题
component_measures.metric.new_software_quality_maintainability_issues.detailed_name=新问题
component_measures.metric.new_code_smells.name=问题
component_measures.metric.new_code_smells.detailed_name=新问题
component_measures.metric.new_violations.name=打开问题
component_measures.metric.new_violations.detailed_name=新打开问题
component_measures.metric.new_accepted_issues.name=已接受的问题
component_measures.metric.new_accepted_issues.detailed_name=新已接受的问题
component_measures.metric.new_bugs.name=问题
component_measures.metric.new_bugs.detailed_name=新问题
component_measures.metric.security_issues.name=问题
component_measures.metric.software_quality_security_issues.name=问题
component_measures.metric.vulnerabilities.name=问题
component_measures.metric.reliability_issues.name=问题
component_measures.metric.software_quality_reliability_issues.name=问题
component_measures.metric.bugs.name=问题
component_measures.metric.maintainability_issues.name=问题
component_measures.metric.software_quality_maintainability_issues.name=问题
component_measures.metric.code_smells.name=问题
component_measures.metric.violations.name=打开问题
component_measures.metric.accepted_issues.name=已接受的问题
component_measures.metric.confirmed_issues.name=确认的问题
component_measures.metric.false_positive_issues.name=误报问题
docs.documentation=文档
docs.get_help=获得帮助
docs.roadmap=产品路线图
docs.news=产品新闻
docs.stay_connected=保持联系
docs.suggestion=页面建议
footer.community=社区
footer.contact_us=联系我们
footer.documentation=文档
footer.help=帮助
footer.license.lgplv3=LGPL v3
footer.license.sqs=SonarQube Server 条款和条件
footer.news=新闻
footer.plugins=插件
footer.pricing=定价
footer.privacy=隐私
footer.security=安全
footer.status=状态
footer.terms=成员
footer.version.full=v{version}{status}
footer.version.short=v{version}
footer.version.status={status}
footer.version.status.active=活跃
footer.version.status.inactive=不活跃
footer.web_api=Web 接口
footer.mode.STANDARD=标准经验
footer.mode.MQR=MQR 模式
new_code_definition.question=此项目的新代码基线是什么？
new_code_definition.question.multiple_projects=为项目选择新代码基线
new_code_definition.global_setting=使用全局设置
new_code_definition.specific_setting=为此项目定义特定配置
new_code_definition.specific_setting.multiple_projects=为项目进行特别设置
new_code_definition.previous_version=上个版本
new_code_definition.previous_version.usecase=建议用于遵循常规版本或发行版的项目。
new_code_definition.previous_version.description=上次版本之后修改的代码都会视为新代码。
new_code_definition.number_days=天数
new_code_definition.number_days.specify_days=指定天数
new_code_definition.number_days.usecase=建议用于遵循持续交付的项目。
new_code_definition.number_days.description=过去 x 天修改的代码都会视为新代码。如果 x 天后没有任何操作，这个问题会归为全部代码的一部分。
new_code_definition.number_days.invalid=请提供 {0} 和 {1} 之间的数字
new_code_definition.reference_branch=引用分支
new_code_definition.reference_branch.description=为新代码选择一个分支作为基线。
new_code_definition.reference_branch.usecase=建议用于使用特性分支的项目。
new_code_definition.reference_branch.notice=项目创建时会把主分支作为引用分支。项目拥有更多分支时，也可以选择其他分支作为引用分支。
new_code_definition.auto_update.branch.message=以下分支的新代码定义自动修改为 {date}，由于 SonarQube 升级，超过了最大值 {branchesList} {link}
new_code_definition.auto_update.branch.list_item={branchName}: 天数从 {previousDays} 改为 {days}。
new_code_definition.auto_update.global.message=全局新代码定义自动由 {previousDays} 改为 {days} 天 {date}，由于 SonarQube 升级，超过了最大值。 {link}
new_code_definition.auto_update.ncd_page.message=天数自动由 {previousDays} 改为 {days} {date}，由于 SonarQube 升级，超过了最大值。 {link}
new_code_definition.auto_update.project.message=项目的新代码定义自动由 {previousDays} 改为 {days} 天 {date}，由于 SonarQube 升级，超过了最大值。 {link}
new_code_definition.auto_update.review_link=查看新代码定义
onboarding.alm.azure=Azure DevOps 服务器
onboarding.alm.bitbucket=Bitbucket 服务器
onboarding.alm.bitbucketcloud=Bitbucket Cloud
onboarding.alm.gitlab=GitLab
onboarding.project_analysis.header=分析你的项目
onboarding.project_analysis.description=我们已经在 SonarCloud 初始化了你的项目，现在已准备好进行分析！
onboarding.project_analysis.guide_to_integrate_pipelines=按照指南来集成流水线
onboarding.create_project.manual.step1=1 / 2
onboarding.create_project.manual.step2=2 / 2
onboarding.create_project.manual.title=创建项目
onboarding.create_project.select_method=希望如何创建项目？
onboarding.create_project.select_method.manually=想要测试一下或有高级需求？手工创建项目。
onboarding.create_project.select_method.devops_platform=希望使用所有 SonarQube 功能（比如仓库导入，拉取请求装饰）？通过喜欢的 DevOps 平台创建项目。
onboarding.create_project.select_method.devops_platform_second=通过喜欢的 DevOps 平台创建项目。
onboarding.create_project.select_method.no_alm_yet.admin=我们推荐设置一个 DevOps 平台，这样可以使用更多 SonarQube 功能。
onboarding.create_project.select_method.manual=手工
onboarding.create_project.select_method.azure=来自 Azure DevOps 服务器
onboarding.create_project.select_method.bitbucket=来自 Bitbucket 服务器
onboarding.create_project.select_method.bitbucketcloud=来自 Bitbucket 云
onboarding.create_project.select_method.github=来自 GitHub
onboarding.create_project.select_method.gitlab=来自 GitLab
onboarding.create_project.import_select_method.manual=手工创建项目
onboarding.create_project.import_select_method.azure=导入 Azure DevOps
onboarding.create_project.import_select_method.bitbucket=导入 Bitbucket Server
onboarding.create_project.import_select_method.bitbucketcloud=导入 Bitbucket Cloud
onboarding.create_project.import_select_method.github=导入 GitHub
onboarding.create_project.import_select_method.gitlab=导入 GitLab
onboarding.create_project.alm_not_configured=当前未启用
onboarding.create_project.check_alm_supported=检查是否生效
onboarding.create_project.project_key=项目标识
onboarding.create_project.project_key.duplicate_key=项目标识名称已被占用。
onboarding.create_project.project_key.wrong_format=输入值不符合格式要求。
onboarding.create_project.project_key.description=最多 400 个字符。字符，数字，连字符，下划线，点或冒号。
onboarding.create_project.project_key.error.empty=至少输入一个字符。
onboarding.create_project.project_key.error.too_long=长度过长。
onboarding.create_project.project_key.error.invalid_char=包含非法字符。
onboarding.create_project.project_key.error.only_digits=标识只包含数字。
onboarding.create_project.display_name=显示名
onboarding.create_project.display_name.description=最多 500 个字符
onboarding.create_project.main_branch_name=主分支名称
onboarding.create_project.main_branch_name.error.empty=请提供主分支名称。
onboarding.create_project.main_branch_name.description=项目默认分支名称 { learn_more }
onboarding.create_project.pr_decoration.information=手工创建的项目无法使用 SonarQube DevOps 平台集成功能，需要在项目配置中手工启用。
onboarding.create_project.repository_imported=已导入
onboarding.create_project.import=导入
onboarding.create_project.see_project=查看项目
onboarding.create_project.search_projects_by_name=查找指定开头的项目名称...
onboarding.create_project.search_repositories_by_name=查找指定开头的仓库名称...
onboarding.create_project.search_mode=搜索
onboarding.create_project.search_mode.project=项目
onboarding.create_project.search_mode.repository=仓库
onboarding.create_project.search_projects_repositories=查找项目和仓库
onboarding.create_project.search_repositories=搜索仓库
onboarding.create_project.select_repositories=选择仓库
onboarding.create_project.select_all_repositories=选择所有可用仓库
onboarding.create_application.key.description=如果指定，会用作应用标识而不是根据应用名称生成。只能使用字母、数字、破折号和下划线。
onboarding.create_project.pat_form.title=为仓库授予权限
onboarding.create_project.pat_form.help.azure=SonarQube 需要个人访问令牌来访问并列出 Azure DevOps 服务器上的仓库。
onboarding.create_project.pat_form.help.bitbucket=SonarQube 需要个人访问令牌与 Bitbucket 服务器通讯。令牌用来访问和列出仓库。
onboarding.create_project.pat_form.help.bitbucket_cloud=SonarQube 需要 app 密码来访问和列出来自 Bitbucket Cloud 的仓库。
onboarding.create_project.pat_form.help.gitlab=SonarQube 需要个人访问令牌与 GitLab 通讯。令牌用来访问和列出项目。
onboarding.create_project.pat_form.pat_required=请输出个人访问令牌
onboarding.create_project.wrong_binding_count=至少需要配置一个 {alm} 实例，才能使用这个方法，现在没有任何实例配置。请手工创建项目，或联系系统管理员。
onboarding.create_project.wrong_binding_count.admin=为了使用此功能，需要只配置一个 {alm} 实例，可以通过 {url} 进行配置。
onboarding.create_project.azure.no_url.admin=Azure DevOps 实例配置缺少一个 URL。当前无法导入项目。你可以对实例进行配置 {url}。
onboarding.create_project.azure.no_url=Azure DevOps 实例配置缺少一个 URL。当前无法导入项目。请联系系统管理员。
onboarding.create_project.enter_pat=输入个人访问令牌
onboarding.create_project.bitbucket_cloud.enter_password=App 密码
onboarding.create_project.bitbucket_cloud.enter_username=BitBucket 账号
onboarding.create_project.pat_incorrect.azure=无法验证个人访问令牌。
onboarding.create_project.pat_incorrect.bitbucket=个人令牌校验失败。
onboarding.create_project.pat_incorrect.bitbucket_cloud=无法校验 app 密码。
onboarding.create_project.pat_incorrect.gitlab=个人令牌校验失败。请确认范围正确并且未过期。
onboarding.create_project.pat.expired.info_message=请重新操作，因为令牌可能已过期或被收回。
onboarding.create_project.pat.expired.info_message_contact=如果无法修复问题，请联系系统管理员。
onboarding.create_project.pat_help.instructions.azure=创建并提供 Azure DevOps 服务器 {link}。需要选择 {scope} 范围，我们才能显示能够分析的仓库列表。
onboarding.create_project.pat_help.instructions.link.azure=个人访问令牌
onboarding.create_project.pat_help.instructions.gitlab=在 GitLab 创建个人访问令牌，通过 {link} 设置名称，比如 "SonarQube" 选择 "read_api" 范围。
onboarding.create_project.pat_help.instructions.gitlab.link=生成令牌
onboarding.enter_username.instructions.bitbucket_cloud=可以通过 {link} 查看账号
onboarding.enter_username.instructions.bitbucket_cloud.link=BitBucket 配置
onboarding.create_project.enter_password.instructions.bitbucket_cloud=在 BitBucket 创建一个 app 密码，通过 {link} 设置名称，比如 "SonarQube" 选择 "Repositories: Read" 选择。
onboarding.create_project.enter_password.instructions.bitbucket_cloud.link=添加一个 app 密码
onboarding.create_project.pat_help.instructions.bitbucket_server=在 BitBucket 服务器创建个人访问令牌，进入 {link} 点击 "Create token"。设置名称，比如 "SonarQube" 选择以下权限 "Projects: Read", "Repositories: Read"。
onboarding.create_project.pat_help.instructions.bitbucket_server.link=HTTP 访问令牌
onboarding.create_project.pat_help.instructions2.bitbucket=设置名称，比如 "SonarQube"，选择下面的权限：
onboarding.create_project.pat_help.instructions2.bitbucketcloud=设置一个名称，比如 "SonarQube"，选择以下权限：
onboarding.create_project.pat_help.instructions2.gitlab=设置名称，比如 "SonarQube"，选择下面的权限：
onboarding.create_project.pat_help.gitlab.read_api_permission=read_api
onboarding.create_project.no_bbs_projects=从 Bitbucket 服务器中读取不到任何项目。联系系统管理员，或者 {link}。
onboarding.create_project.no_bbs_repos=找不到项目对应的仓库。联系系统管理员，或者 {link}。
onboarding.create_project.update_your_token=更新个人访问令牌
onboarding.create_project.no_bbs_repos.filter=找不到符合条件的仓库
onboarding.create_project.only_showing_X_first_repos=只显示前 {0} 个仓库。如果找不到期望的仓库，请使用上面的搜索条件。
onboarding.create_project.see_on=在 {almName} 查看
onboarding.create_project.search_prompt=搜索项目
onboarding.create_project.set_up=设置
onboarding.create_project.subtitle_monorepo_setup_link=建立单项目
onboarding.create_project.azure.title=想要配置哪个 Azure DevOps 服务器仓库？
onboarding.create_project.azure.subtitle=从一个 Azure 项目导入项目
onboarding.create_project.azure.subtitle.reset_pat=重置 Azure DevOps 个人访问令牌
onboarding.create_project.azure.subtitle.with_monorepo=从一个 Azure 项目或 {monorepoSetupLink} 导入项目。
onboarding.create_project.azure.no_projects=无法从 Azure DevOps 服务器获取项目。请联系系统管理员，或 {link}。
onboarding.create_project.azure.search_results_for_project_X=搜索结果 "{0}"
onboarding.create_project.azure.no_repositories=无法从此项目获取仓库。请联系系统管理员，或 {link}。
onboarding.create_project.azure.no_results=找不到匹配的仓库。
onboarding.create_project.bitbucketcloud.title=希望设置哪个 Bitbucket Cloud 仓库？
onboarding.create_project.bitbucketcloud.subtitle.reset_pat=重置您的Bitbucket Cloud应用程序密码
onboarding.create_project.bitbucketcloud.subtitle=从 Bitbucket Cloud 工作空间导入项目
onboarding.create_project.bitbucketcloud.subtitle.with_monorepo=从一个 Bitbucket Cloud 工作空间或 {monorepoSetupLink} 导入项目。
onboarding.create_project.bitbucketcloud.no_projects=无法从 Bitbucket 获取项目。联系系统管理员，或 {link}。
onboarding.create_project.bitbucketcloud.link=前往 Bitbucket
onboarding.create_project.github.title=期望配置哪个 GitHub 仓库？
onboarding.create_project.github.subtitle=从 GitHub 组织导入仓库
onboarding.create_project.github.subtitle.with_monorepo=从一个你 GitHub 组织或 {monorepoSetupLink} 导入仓库。
onboarding.create_project.github.choose_organization=选择组织
onboarding.create_project.github.choose_repository=选择仓库
onboarding.create_project.github.warning.message=请联系管理员配置 GitHub 集成功能。
onboarding.create_project.github.warning.message_admin=请确认正确配置了 GitHub 实例，通过 {link} 由一个仓库创建新项目。
onboarding.create_project.github.warning.message_admin.link=ALM 集成配置
onboarding.create_project.github.no_orgs=无法通过 key 记载任何组织。请联系管理员。
onboarding.create_project.github.no_orgs_admin=无法加载任何组织。确认已经在组织中安装了 GitHub App，并检查 {link} 中的 GitHub 实例配置。
onboarding.create_project.github.no_projects=无法从 GitHub 获取项目。请联系系统管理员。
onboarding.create_project.gitlab.title=配置哪个 GitLab 项目？
onboarding.create_project.gitlab.subtitle=从 GitLab 群组导入项目
onboarding.create_project.gitlab.subtitle.reset_pat=重置您的 GitLab 个人访问令牌
onboarding.create_project.gitlab.subtitle.with_monorepo=从一个你的 GitLab 组或 {monorepoSetupLink} 导入项目。
onboarding.create_project.gitlab.no_projects=无法从 Gitlab 获取项目。请联系系统管理员，或 {link}。
onboarding.create_project.gitlab.link=参考 GitLab
onboarding.create_project.bitbucket.title=Bitbucket 服务器项目
onboarding.create_project.bitbucket.subtitle.reset_pat=重置您的 Bitbucket 服务器个人访问令牌
onboarding.create_project.bitbucket.subtitle=从 Bitbucket 服务器工作空间导入项目
onboarding.create_project.bitbucket.subtitle.with_monorepo=从 Bitbucket 服务器工作空间或 {monorepoSetupLink} 导入项目。
onboarding.create_project.x_repositories_selected={count} {count, plural, one {repository} other {repositories}} 选中
onboarding.create_project.x_repository_created={count} {count, plural, one {repository} other {repositories}} 会创建为 {count, plural, one {a project} other {projects}} 在 SonarQube
onboarding.create_project.please_dont_leave=离开页面会导致导入失败。确认离开？
onboarding.create_project.import_in_progress=已导入 {count} / {total} 个项目。导入完成前请不要关闭页面。
onboarding.create_project.monorepo.title={almName} 单仓库项目启动
onboarding.create_project.monorepo.subtitle=为相同单仓库创建多个 SonarQube 项目，并绑定到相同仓库。
onboarding.create_project.monorepo.doc_link=了解如何配置但仓库
onboarding.create_project.monorepo.choose_organization_and_repository=选择组织和仓库
onboarding.create_project.monorepo.choose_dop_setting=选择 {almKey} 配置
onboarding.create_project.monorepo.choose_organization=选择组织
onboarding.create_project.monorepo.choose_organization.placeholder=组织列表
onboarding.create_project.monorepo.choose_repository=选择仓库
onboarding.create_project.monorepo.choose_repository.placeholder=仓库列表
onboarding.create_project.monorepo.choose_repository.no_already_bound_projects=这个仓库没有把任何项目导入到 SonarQube 里。
onboarding.create_project.monorepo.choose_repository.existing_already_bound_projects=此仓库已导入，已与 SonarQube 中的这些项目关联：
onboarding.create_project.monorepo.no_orgs=无法加载组织。请联系系统管理员。
onboarding.create_project.monorepo.no_orgs_admin=无法加载组织。请确认至少给一个组织安装了 {almApp} App，可以通过 {link} 检查 {almKey} 的实例配置。 
onboarding.create_project.monorepo.no_projects=通过 {almKey} 无法获取项目。请联系系统管理员。
onboarding.create_project.monorepo.project_title=创建新项目
onboarding.create_project.monorepo.add_project=添加新项目
onboarding.create_project.monorepo.remove_project=删除项目
onboarding.create_project.monorepo.warning.message=无法连接 {almKey}。请联系系统管理员，配置 {almKey} 集成。
onboarding.create_project.monorepo.warning.message_admin=无法连接 {almKey}。请确认通过 {link} 正确配置了 {alm} 实例，通过仓库创建一个新项目。
onboarding.create_project.monorepo.warning.message_admin.link=DevOps 平台集成设置
onboarding.create_project.new_code_definition.title=为“编码时清理”设置项目
onboarding.create_x_project.new_code_definition.title=为“编码时清理”设置 {count, plural, one {project} other {# projects}}
onboarding.create_project.new_code_definition.description=新代码定义用来决定哪部分代码是新代码。
onboarding.create_project.new_code_definition.description.link=定义新代码
onboarding.create_project.new_code_definition.create_x_projects=创建 {count, plural, one {project} other {# projects}}
onboarding.create_projects.new_code_definition.change_info=在项目管理配置中，可以随时修改每个项目的配置。
onboarding.create_project.success={count, plural, one {project has} other {# projects have}} 已创建。
onboarding.create_project.monorepo.success=成功设置了单仓库。{count, plural, one {1 new project was} other {# new projects were}} 已创建。
onboarding.create_project.success.admin=成功创建项目 {project_link}。
onboarding.create_project.failure={count, plural, one {# project} other {# projects}} 导入失败。
onboarding.token.header=创建一个令牌
onboarding.token.text=此令牌用于执行分析时进行认证，如果这个令牌存在问题，可以随时撤销令牌。{link}
onboarding.token.text.PROJECT_ANALYSIS_TOKEN=项目令牌用于执行分析时进行认证，如果令牌存在问题，可以随时撤销令牌。{link}
onboarding.token.text.GLOBAL_ANALYSIS_TOKEN=全局令牌用于执行分析时进行认证，如果令牌存在问题，可以随时撤销令牌。{link}
onboarding.token.text.user_account=用户账号
onboarding.token.generate=创建
onboarding.token.generate.long=创建令牌
onboarding.token.generate.PROJECT_ANALYSIS_TOKEN=创建项目令牌
onboarding.token.generate.GLOBAL_ANALYSIS_TOKEN=创建全局令牌
onboarding.token.use_existing_token=使用已有令牌
onboarding.token.use_existing_token.label=已有令牌值
onboarding.token.use_existing_token.help=在输入框中粘贴已存在的令牌
onboarding.token.warning_project_token_scope=请注意此令牌只允许分析当前项目。如果希望使用一个令牌分析多个项目，需要通过 {link} 创建全局令牌。可以参考文档 {doc_link}。
onboarding.token.name.label=令牌名称
onboarding.token.name.placeholder=输入令牌名称
onboarding.token.name.help=输入项目令牌名称
onboarding.token.invalid_format=令牌名称格式有误。
onboarding.token.delete=删除令牌
onboarding.tutorial.env_variables=在 {field} 字段，输入 {value} {extra}
onboarding.tutorial.env_variables.field=数值
onboarding.tutorial.env_variables.token_generator.value=现存令牌，或新生成一个：
onboarding.analysis.header=分析你的项目
onboarding.analysis.auto_refresh_after_analysis.done=分析是否已经结束？
onboarding.analysis.auto_refresh_after_analysis.auto_refresh=如果分析成功，页面一会儿就会自动刷新。
onboarding.analysis.auto_refresh_after_analysis.check_these_links=等待分析结果的同时可以看一下这些文档：{link_branches}，{link_pr_analysis}。
onboarding.analysis.auto_refresh_after_analysis.check_these_links.pr_analysis=拉取请求分析
onboarding.analysis.auto_refresh_after_analysis.check_these_links.branches=分支分析
onboarding.analysis.auto_refresh_after_analysis.community.check_these_links=在这个等待过程中，为什么不考虑升级我们的 {edition}？它提供了更多功能，比如 {branch} 和 {pull_requests}。
onboarding.analysis.auto_refresh_after_analysis.community.check_these_links.edition=开发者版
onboarding.build=使用什么构建技术？
onboarding.build.maven=Maven
onboarding.build.gradle=Gradle
onboarding.build.make=Make
onboarding.build.dotnet=.NET
onboarding.build.dotnet.win_core=Windows + .NET Core
onboarding.build.dotnet.win_msbuild=Windows + .NET Framework
onboarding.build.dotnet.linux_core=Linux + .NET Core
onboarding.build.cpp=C 或 C++
onboarding.build.objectivec=Objective-C
onboarding.build.dart=Flutter 或 Dart
onboarding.build.other=其他 (比如 Go, PHP, ...)
onboarding.build.jsts=JS/TS & Web
onboarding.analysis.jsts.install.header=为npm项目安装Scanner
onboarding.analysis.jsts.links.documentation=npm项目扫描器的官方文档
onboarding.analysis.jsts.execute.header=执行扫描器
onboarding.analysis.jsts.execute.text=使用Scanner为npm项目运行SonarQube分析很简单。您只需在项目文件夹中运行以下命令。
onboarding.analysis.jsts.step.footer=请访问{link}了解更多详细信息。
onboarding.build.python=Python
onboarding.analysis.python.install.header=安装 Python 项目扫描器
onboarding.analysis.python.links.documentation=Python项目扫描器的官方文档
onboarding.analysis.python.execute.header=运行扫描仪
onboarding.analysis.python.execute.text=使用Scanner for Python项目运行SonarQube分析非常简单。您只需要在项目文件夹中运行以下命令。
onboarding.analysis.python.step.footer=请访问 {link} 了解更多详情。
onboarding.build.dotnet.variant=选择构建工具
onboarding.build.dotnet.variant.dotnet_core=.NET Core
onboarding.build.dotnet.variant.dotnet_framework=.NET Framework
onboarding.build.other.os=使用哪种操作系统？
onboarding.build.other.os.linux=Linux
onboarding.build.other.os.win=Windows
onboarding.build.other.os.mac=macOS
onboarding.build.other.architecture=架构
onboarding.build.other.architecture.x86_64=x86_64
onboarding.build.other.architecture.arm64=ARM64
onboarding.build.cpp.autoconfig=使用自动配置还是手工配置？
onboarding.build.cpp.autoconfig.automatic=自动
onboarding.build.cpp.autoconfig.automatic.description=自动配置适用于大部分项目。不需要对项目或语言有什么特殊知识。
onboarding.build.cpp.autoconfig.manual=手工
onboarding.build.cpp.autoconfig.manual.description=手工配置为配置提供了更强的控制能力，更适用于特定情况。但是，它无法支持所有场景，需要深入了解项目的构建流程。
onboarding.analysis.docs=请访问 {link} 了解更多详情。
onboarding.analysis.build_wrapper.header.linux=下载解压 Linux 应用包
onboarding.analysis.build_wrapper.header.win=下载解压 Windows 应用包
onboarding.analysis.build_wrapper.header.mac=下载解压 macOS 应用包
onboarding.analysis.build_wrapper.text=把可执行文件目录添加到 {env_var} 环境变量
onboarding.analysis.build_wrapper.execute=把构建封装设置为命令前缀
onboarding.analysis.build_wrapper.execute_text=在项目目录执行以下命令。
onboarding.analysis.build_wrapper.execute_build_command=<构建命令>
onboarding.analysis.build_wrapper.docs=访问 {link} 获取构建封装的更多信息。
onboarding.analysis.build_wrapper.docs_link=官方文档
onboarding.analysis.java.maven.header=在你的电脑上使用 Maven 执行 SonarQube 扫描
onboarding.analysis.java.maven.text=使用 Maven 执行 SonarQube 分析是非常简单的。只需要在你的项目目录下执行如下命令。
onboarding.analysis.java.maven.docs_link=Maven 扫描器官方文档
onboarding.analysis.java.maven.text.custom=在项目目录下执行以下命令。
onboarding.analysis.java.gradle.header=在你的电脑上使用 Gradle 执行 SonarQube 扫描
onboarding.analysis.java.gradle.text.1=使用 Gradle 执行 SonarQube 分析是非常简单的。只需要在你的 <code>build.gradle</code> 文件中声明 <code>org.sonarqube</code> 插件：
onboarding.analysis.java.gradle.text.2=然后执行如下命令：
onboarding.analysis.java.gradle.latest_version=可以使用最新版本的 Gradle 插件 {link}。
onboarding.analysis.java.gradle.docs_link=Gradle 扫描器官方文档
onboarding.analysis.msbuild.header=下载并解压适用于 .NET 的扫描器
onboarding.analysis.msbuild.text=访问 {link} 下载最新版本，并将可执行文件的目录添加到 {code} 环境变量中
onboarding.analysis.msbuild.execute=执行 .NET 扫描器
onboarding.analysis.msbuild.execute.text=执行 {instance} 分析非常简单，只需要在你的项目目录执行以下命令。
onboarding.analysis.msbuild.docs_link=.NET 扫描器的官方文档
onboarding.analysis.sq_scanner.header.linux=下载并解压 Linux 平台的扫描器
onboarding.analysis.sq_scanner.header.win=下载并解压 Windows 平台的扫描器
onboarding.analysis.sq_scanner.header.mac=下载并解压 macOS 平台的扫描器
onboarding.analysis.sq_scanner.text=访问 {link} 下载最新版本，并将 {dir} 目录添加到 {env_var} 环境变量
onboarding.analysis.sq_scanner.prepare=准备扫描器
onboarding.analysis.sq_scanner.prepare.flutter=在执行分析之前，我们强烈建议：
onboarding.analysis.sq_scanner.prepare.flutter.pub_get=检索在<snippet>pubspec.yaml</spidget>中声明的所有项目依赖关系，例如，对flutter项目运行<snippet>flutter-pub-get</spippet>，对dart项目运行<snippet>dart-pub-get</sippet>等。
onboarding.analysis.sq_scanner.prepare.flutter.build=执行Flutter或Dart项目的完整和成功构建
onboarding.analysis.sq_scanner.prepare.flutter.tip=否则，您可能会得到不完整且可能不正确的分析结果。仅检索项目依赖关系可能不足以产生正确的分析，例如，在分析生成的代码时。
onboarding.analysis.sq_scanner.execute=执行扫描器
onboarding.analysis.sq_scanner.execute.text=执行 {instance} 分析非常简单。只需要在你的项目目录下执行如下命令。
onboarding.analysis.sq_scanner.execute.text.custom=在项目目录下执行以下命令。
onboarding.analysis.sq_scanner.docs=请访问 {link} 了解更多信息。
onboarding.analysis.sq_scanner.docs_use_case=请访问 {link} 了解更多信息，并通过 {useCaseLink} 了解更多相关信息。
onboarding.analysis.sq_scanner.docs_link=扫描器官方文档
onboarding.analysis.sq_scanner.sonar_token_env.header=在 CI 设置中配置 SONAR_TOKEN 环境变量
onboarding.analysis.sq_scanner.sonar_token_env.var_name=添加一个环境变量
onboarding.analysis.sq_scanner.sonar_token_env.var_value=使用下面的值
onboarding.analysis.sqscanner.docs.gradle.title=Gradle 扫描器官方文档
onboarding.analysis.sqscanner.docs.gradle.example_project.title=基于 Gradle 的示例项目
onboarding.analysis.dotnetcore.global=扫描器 .NET Core 全局工具
onboarding.analysis.dotnetcore.global.text=作为先决条件，你需要使用以下命令全局安装 sonarscanner 工具：
onboarding.analysis.dotnetcore.global.text.path=请确保 dotnet 工具目录在 path 路径下，参考 dotnet 全局工具文档了解更多细节。
onboarding.tutorial.return_to_list=选择其他选项
onboarding.tutorial.ci_outro.all_set.title=都准备好了！
onboarding.tutorial.ci_outro.done=完成！
onboarding.tutorial.ci_outro.refresh_text=如果所有任务都运行成功，当分析完成，会重定向到项目的概览页面，会显示新分析结果。需要等待几分钟。
onboarding.tutorial.ci_outro.commit=提交并推送代码，启动分析。
onboarding.tutorial.ci_outro.commit.why.gitlab=每次向分支的推送或合并请求都会触发 SonarQube 执行代码分析。我们会在 GitLab 直接装饰合并请求。
onboarding.tutorial.ci_outro.commit.why.github=每次向分支的推送或拉取请求都会触发 SonarQube 执行代码分析。我们会在 GitHub 直接装饰拉取请求。
onboarding.tutorial.ci_outro.commit.why.bitbucket=每次向分支的推送或拉取请求都会触发 SonarQube 执行代码分析。我们会在 Bitbucket 直接装饰拉取请求。
onboarding.tutorial.ci_outro.commit.why.bitbucketcloud=每次向分支的推送或拉取请求都会触发 SonarQube 执行代码分析。我们会在 Bitbucket Cloud 直接装饰拉取请求。
onboarding.tutorial.ci_outro.commit.why.azure=每次向分支的推送或拉取请求都会触发 SonarQube 执行代码分析。我们会在 Azure 直接装饰拉取请求。
onboarding.tutorial.ci_outro.commit.why.no_branches=每次向主分支的推送都会触发 SonarQube 执行代码分析。
onboarding.tutorial.ci_outro.refresh=当前页面刷新后会显示分析结果。
onboarding.tutorial.ci_outro.refresh.why=如果页面没有刷新，可以双击分析配置。
onboarding.tutorial.other.project_key.sentence=在仓库中创建 {file} 文件，粘贴如下代码：
onboarding.tutorial.other.project_key.monorepo.sentence=在项目根目录下创建一个 {file} 文件，粘贴以下代码：
onboarding.tutorial.other.project_key.monorepo.info=为但仓库里的所有项目重复这个步骤。
onboarding.tutorial.cfamilly.compilation_database_info=如果在使用构建封装时遇到问题，可以试试 {link}
onboarding.tutorial.cfamilly.compilation_database_info.link=兼容数据库
onboarding.tutorial.cfamily.examples_repositories_description=可以参考我们配置好 SonarQube 的 C 和 C++ 示例项目
onboarding.tutorial.page.title=分析方法
onboarding.tutorial.page.description=在这里管理设置执行分析的方式。
onboarding.tutorial.choose_method=期望如何分析仓库？
onboarding.tutorial.choose_method.devops_platform.description=是否需要集成自己喜欢的 CI？请参考下面的教程。
onboarding.tutorial.choose_method.local.description=想要测试一下或有高级需求？可以本地分析项目。
onboarding.tutorial.choose_method.local=本地
onboarding.tutorial.choose_method.other-ci=其他 CI
onboarding.tutorial.choose_method.jenkins=使用 Jenkins
onboarding.tutorial.choose_method.github-actions=使用 GitHub Actions
onboarding.tutorial.choose_method.gitlab-ci=使用 GitLab CI
onboarding.tutorial.choose_method.azure-pipelines=使用 Azure 流水线
onboarding.tutorial.choose_method.bitbucket-pipelines=使用 Bitbucket 流水线
onboarding.tutorial.breadcrumbs.home=分析方法
onboarding.tutorial.breadcrumbs.local=本地
onboarding.tutorial.breadcrumbs.other-ci=其他 CI
onboarding.tutorial.breadcrumbs.jenkins=Jenkins
onboarding.tutorial.breadcrumbs.github-actions=GitHub Actions
onboarding.tutorial.breadcrumbs.gitlab-ci=GitLab CI
onboarding.tutorial.breadcrumbs.azure-pipelines=Azure Pipelines
onboarding.tutorial.breadcrumbs.bitbucket-pipelines=Bitbucket Pipelines
onboarding.mode.help.manual=这个方式用于测试或高级用例。推荐使用其他模式来协助设置 CI 环境。
onboarding.mode.help.otherci=无论使用什么 CI 工具，都可以把 SonarQube 集成到工作流中。
onboarding.tutorial.with.yaml.gradle=修改 {gradle} 文件，添加 {sq} 插件和如下配置：
onboarding.tutorial.with.bitbucket_ci.title=使用 Bitbucket CI 分析项目
onboarding.tutorial.with.bitbucket_pipelines.variables.title=创建仓库变量
onboarding.tutorial.with.bitbucket_pipelines.yaml.title=创建流水线构建配置
onboarding.tutorial.with.bitbucket_pipelines.variables.intro=在 Bitbucket 仓库，进入 {repository_variables} 创建两个新变量：
onboarding.tutorial.with.bitbucket_pipelines.variables.intro.link=仓库配置 > 仓库变量
onboarding.tutorial.with.bitbucket_pipelines.variables.name.sentence=在 {name} 控件，输入
onboarding.tutorial.with.bitbucket_pipelines.variables.name.sentence.name=名称
onboarding.tutorial.with.bitbucket_pipelines.variables.add.sentence=点击 {add}
onboarding.tutorial.with.bitbucket_pipelines.variables.add.sentence.add=新增
onboarding.tutorial.with.bitbucket_pipelines.variables.secured.sentence=确认选中 {secured}
onboarding.tutorial.with.bitbucket_pipelines.variables.secured.sentence.secured=安全
onboarding.tutorial.with.github_ci.title=使用 GitHub CI 分析项目
onboarding.tutorial.with.github_action.create_secret.title=创建 GitHub 密钥
onboarding.tutorial.with.github_action.create_secret.monorepo_project_level_token_info=如果使用项目级令牌，通过 {link} 为单仓库的每个项目创建对应的秘钥，类似前面一步（密码名称不能重复，例如 SONAR_TOKEN_1, SONAR_TOKEN_2...）
onboarding.tutorial.with.github_action.create_secret.monorepo_project_level_token_info.link=生成令牌
onboarding.tutorial.with.github_action.create_secret.monorepo_global_token_info=如果使用全局令牌，可以联系系统管理员，使用之前步骤创建一个全局令牌。
onboarding.tutorial.with.github_action.monorepo.see_yaml_instructions=在单仓库的根目录下，创建或更新 .github/workflow/build.yml 文件的对应内容。
onboarding.tutorial.with.github_action.secret.intro=在 GitHub 仓库中，进入 {settings_secret}，创建新密钥：
onboarding.tutorial.with.github_action.secret.intro.link=设置 > 密钥
onboarding.tutorial.with.github_action.secret.name.sentence=在 {name} 字段，输入
onboarding.tutorial.with.github_action.secret.name.sentence.name=名称
onboarding.tutorial.with.github_action.secret.new.sentence=点击 {new_secret}
onboarding.tutorial.with.github_action.secret.new.sentence.new_secret=新仓库密钥
onboarding.tutorial.with.github_action.secret.add.sentence=点击 {add_secret}
onboarding.tutorial.with.github_action.secret.add.sentence.add_secret=添加密钥
onboarding.tutorial.with.github_action.yaml.title=创建工作流 YAML 文件
onboarding.tutorial.with.github_action.yaml.create_yml=创建或修改 {file} YAML 文件，使用如下内容：
onboarding.tutorial.with.github_action.dart=将以下步骤添加到 GitHub Actions 工作流的构建 Flutter 或 Dart 项目步骤之后：
onboarding.tutorial.with.gitlab_ci.title=使用 GitLab CI 分析项目
onboarding.tutorial.with.gitlab_ci.project_key.title=设置项目编码
onboarding.tutorial.with.gitlab_ci.project_key.maven.step2=下列内容加入 {file} 文件：
onboarding.tutorial.with.gitlab_ci.project_key.gradle.step2=下列内容加入 {file} 文件：
onboarding.tutorial.with.gitlab_ci.project_key.jsts.step2=在您的存储库中创建一个 {file} 文件，并粘贴以下代码：
onboarding.tutorial.with.gitlab_ci.project_key.python.step2=在您的存储库中创建一个 {file} 文件并粘贴以下代码：
onboarding.tutorial.with.gitlab_ci.project_key.other.step2=在仓库中创建 {file} 文件，粘贴以下代码：
onboarding.tutorial.with.gitlab_ci.project_key.dart.step2=在仓库中创建 {file} 文件，粘贴以下代码：
onboarding.tutorial.with.gitlab_ci.project_key.dotnet.step2=在仓库中创建 {file} 文件，粘贴以下代码：
onboarding.tutorial.with.gitlab_ci.project_key.cpp.step2=在仓库中创建 {file} 文件，粘贴以下代码：
onboarding.tutorial.with.gitlab_ci.project_key.objectivec.step2=在仓库中创建 {file} 文件，粘贴以下代码：
onboarding.tutorial.with.gitlab_ci.variables.title=添加环境变量
onboarding.tutorial.with.gitlab_ci.variables.description.link=配置 > CI/CD > 变量
onboarding.tutorial.with.gitlab_ci.variables.section.title=a. 定义 SonarQube 令牌环境变量
onboarding.tutorial.with.gitlab_ci.variables.section.description=在 GitLab 中，进入 {link} 添加下列变量，确认在项目中生效：
onboarding.tutorial.with.gitlab_ci.variables.edit.token.tooltip=使用已有令牌或创建新令牌。
onboarding.tutorial.with.gitlab_ci.variables.step1=键 {value} {extra}
onboarding.tutorial.with.gitlab_ci.variables.step3=取消 {value} 复选框
onboarding.tutorial.with.gitlab_ci.variables.step3.value=保护变量
onboarding.tutorial.with.gitlab_ci.variables.section.step4=选择 {value} 复选框
onboarding.tutorial.with.gitlab_ci.variables.section.step4.value=掩码变量
onboarding.tutorial.with.gitlab_ci.variables.section2.title=b. 定义 SonarQube 网址环境变量
onboarding.tutorial.with.gitlab_ci.variables.section2.description=在 {link} 添加新变量，确认在项目中生效：
onboarding.tutorial.with.gitlab_ci.variables.section2.step4=让 {value} 保持未选中
onboarding.tutorial.with.gitlab_ci.yaml.title=创建或修改配置文件
onboarding.tutorial.with.gitlab_ci.yaml.description=使用以下内容创建或更新你的 {filename} 文件。
onboarding.tutorial.with.gitlab_ci.yaml.filename=.gitlab-ci.yml
onboarding.tutorial.with.gitlab_ci.yaml.baseconfig=注意这是运行 SonarQube 分析的最小配置，用于主分分支和合并请求。
onboarding.tutorial.with.gitlab_ci.yaml.existing=如果已经配置了一个流水线并正在使用，你可以把这一步的例子添加到 yml 文件中。
onboarding.tutorial.with.gitlab_ci.yaml.premium=只有 GitLab Ultimate 版本可以使用 GitLab 缺陷报告。如果你没有订阅专项服务，可以安全的删除 sonarqube-vulnerability-report 步骤。
onboarding.tutorial.with.jenkins.title=使用 Jenkins 分析项目
onboarding.tutorial.with.jenkins.alm_selection.title=选择 DevOps 平台
onboarding.tutorial.with.jenkins.prereqs.title=前置要求
onboarding.tutorial.with.jenkins.prereqs.intro.sentence=期望使用 Jenkins 分析项目，以下插件 {must_have}
onboarding.tutorial.with.jenkins.prereqs.intro.sentence.installed=已安装
onboarding.tutorial.with.jenkins.prereqs.intro.sentence.configured=已配置
onboarding.tutorial.with.jenkins.prereqs.plugins.branch_source.bitbucket=Bitbucket 分支源 Jenkins 插件 - 2.7 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.branch_source.bitbucketcloud=Bitbucket 分支源 Jenkins 插件 - 2.7 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.branch_source.github=Jenkins 的 GitHub 分支源插件 - 2.7.1 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.branch_source.gitlab=Jenkins 的 GitLab Branch Source 插件 - 1.5.3 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.gitlab_plugin=Jenkins 的 GitLab 插件 - 1.5.13 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.sonar_scanner=SonarQube 分析 Jenkins 插件 - 2.11 或更新版本
onboarding.tutorial.with.jenkins.prereqs.step_by_step_guide=可以参考 {link} 文档，这里按步骤介绍了如何在 Jenkins 安装和配置这些插件。
onboarding.tutorial.with.jenkins.prereqs.step_by_step_guide.link=分析前提条件
onboarding.tutorial.with.jenkins.prereqs.following_are_recommendations=建议按照以下步骤进行配置已获取最佳结果，你也可以根据需要进行定制。
onboarding.tutorial.with.jenkins.prereqs.done=配置分析
onboarding.tutorial.with.jenkins.multi_branch_pipeline.title=创建多分支管道作业
onboarding.tutorial.with.jenkins.multi_branch_pipeline.intro=创建多分支管道，自动分析所有分支和拉取请求。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step1.sentence=在 Jenkins 面板中，点击 {new_item} 创建一个 {type}。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step1.sentence.new_item=新项目
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step1.sentence.type=多分支管道作业
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.sentence=在 {tab} 下，添加 Bitbucket 源，输入以下信息：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.sentence.tab=分支源
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.sentence.source=Bitbucket
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.server.label=服务器
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.server.action=选择仓库中需要分析的实例。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.creds.label=凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.creds.action=选择 Bitbucket 服务器凭证。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.owner.label=创建人
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.owner.action=输入项目编码。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.repo.label=仓库
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.repo.action=选择需要分析的仓库。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.sentence=在 {tab} 下，添加 {source} 源，输入如下信息：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.sentence.tab=分支源
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.sentence.source=Bitbucket
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.server.label=服务器
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.server.action=确认选中 Bitbucket Cloud。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.creds.label=凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.creds.action=选择 Bitbucket Cloud 凭证。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.owner.label=拥有者
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.owner.action=输入工作区 ID
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.repo.label=仓库
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.repo.action=选择希望分析的仓库
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.sentence=在 {tab} 下，添加 GitHub 源，输入以下信息：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.sentence.tab=分支源
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.sentence.source=GitHub
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.creds.label=凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.creds.action=选择或添加 GitHub 凭证。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.repo_url.label=仓库 HTTPS 网址
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.repo_url.action=输入仓库网址。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.sentence=在 {tab} 下，添加 {source} 源，输入如下内容：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.sentence.tab=分支源
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.sentence.source=GitLab 项目
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.creds.label=获取凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.creds.action=选择或添加 GitLab 凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.owner.label=作者
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.owner.action=输入用户或群组名称。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.repo.label=项目
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.repo.action=选择项目。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.label=行为
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.branches_prs.action=排除 PR 的分支
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.branches_prs.label=发现分支
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.branches_mrs.action=排除 MR 的分支
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.branches_mrs.label=发现分支
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.discover_prs.action=当前拉取请求版本
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.discover_prs.label=通过 origin 发现拉取请求
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.discover_mrs.action=当前合并请求版本
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.discover_mrs.label=通过 origin 发现合并请求
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.label=指定 ref 规范
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.add_behaviour.sentence=默认，此行为不会启用。如果看不到此行为，点击 {add} 查看可用行为列表，选择 {ref_spec}。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.add_behaviour.sentence.add=添加
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.add_behaviour.sentence.ref_spec=指定 ref 规范
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.set_pr_ref_specs.sentence=为了在拉取请求中正确计算新代码，扫描器需要目标分支的 refs。确认 {ref_spec} 会包含所有目标分支（默认值应该够了）。比如：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.set_pr_ref_specs.sentence.ref_spec=ref 规范
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.set_mr_ref_specs.sentence=为了在合并请求中正确计算新代码，扫描器需要目标分支的 refs。确认 {ref_spec} 会包含所有目标分支（默认值应该够了）。比如：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.set_mr_ref_specs.sentence.ref_spec=ref 规范
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.leave_defaults=保留其他配置使用默认值
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.sentence=跳转到 {tab} 部分，设置以下参数：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.sentence.tab=构建配置
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.mode.label=模式
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.mode.action=使用 Jenkinsfile
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.script_path.label=脚本路径
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.script_path.action=Jenkinsfile
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step4.sentence=点击 {save}.
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step4.sentence.save=保存
onboarding.tutorial.with.jenkins.pipeline.title=创建流水线作业
onboarding.tutorial.with.jenkins.pipeline.intro=创建自动分析项目的流水线。
onboarding.tutorial.with.jenkins.pipeline.step1.sentence=在 Jenkins 工作台，点击 {create_item} 创建一个 {type}。
onboarding.tutorial.with.jenkins.pipeline.step1.sentence.new_item=新项目
onboarding.tutorial.with.jenkins.pipeline.step1.sentence.type=流水线作业
onboarding.tutorial.with.jenkins.pipeline.step2.sentence=在 {tab} 下，选择 {option}。需要设置一个唯一的密钥令牌。
onboarding.tutorial.with.jenkins.pipeline.step2.sentence.tab=构建触发器
onboarding.tutorial.with.jenkins.pipeline.step2.sentence.option=远程触发构建
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.trigger.sentence=在 {tab} 下，选择 {option}。记下提供的 Webhook 网址。在 GitLab 配置 Webhook 需要使用。
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.trigger.sentence.tab=构建触发器
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.trigger.sentence.option=推送到 GitLab 时进行构建
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.pick_triggers.sentence=在 {triggers} 下，只选择 {push_events}.
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.pick_triggers.sentence.triggers=启用 GitLab 触发器
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.pick_triggers.sentence.push_events=推送事件
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.click_advanced.sentence=点击 {advanced}
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.click_advanced.sentence.advanced=高级...
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.secret_token.sentence=找到 {secret_token} 部分，点击 {generate}。记下密钥令牌。在 GitLab 配置 Webhook 时需要使用。
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.secret_token.sentence.secret_token=密钥令牌
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.secret_token.sentence.generate=生成
onboarding.tutorial.with.jenkins.pipeline.step3.sentence=在 {tab} 下，确认按照下面配置参数：
onboarding.tutorial.with.jenkins.pipeline.step3.sentence.tab=流水线
onboarding.tutorial.with.jenkins.pipeline.step3.definition.label=定义
onboarding.tutorial.with.jenkins.pipeline.step3.definition.action=SCM 中的流水线脚本
onboarding.tutorial.with.jenkins.pipeline.step3.scm.sentence={label} 配置 SCM。确认只构建主分支。比如，如果主分支为 "main"。在 {branches_to_build} 输入 "*/main"。
onboarding.tutorial.with.jenkins.pipeline.step3.scm.sentence.label=SCM:
onboarding.tutorial.with.jenkins.pipeline.step3.scm.sentence.branches_to_build=需要构建的分支
onboarding.tutorial.with.jenkins.pipeline.step3.script_path.label=脚本路径
onboarding.tutorial.with.jenkins.pipeline.step3.script_path.action=Jenkinsfile
onboarding.tutorial.with.jenkins.pipeline.step4.sentence=点击 {save}。
onboarding.tutorial.with.jenkins.pipeline.step4.sentence.save=保存
onboarding.tutorial.with.jenkins.webhook.bitbucket.title=创建一个 Bitbucket 服务器 Webhook
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.title=创建一个 Bitbucket Cloud Webhook
onboarding.tutorial.with.jenkins.webhook.github.title=创建一个 GitHub Webhook
onboarding.tutorial.with.jenkins.webhook.gitlab.title=创建一个 GitLab Webhook
onboarding.tutorial.with.jenkins.webhook.intro.sentence=在仓库中创建一个 Webhook，发送推送时就会触发 Jenkins 作业。查看是否配置过 Webhook？ {link}
onboarding.tutorial.with.jenkins.webhook.step1.sentence=访问 {link}，输入以下信息：
onboarding.tutorial.with.jenkins.webhook.bitbucket.step1.link=对应仓库的 Bitbucket 服务器 Webhook 创建页面
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step1.link=对应仓库的 Bitbucket Cloud Webhook 创建页面
onboarding.tutorial.with.jenkins.webhook.github.step1.link=对应仓库的 GitHub Webhook 创建页面
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.link=对应仓库的 GitLab Webhook 创建页面
onboarding.tutorial.with.jenkins.webhook.step1.name.label=名称
onboarding.tutorial.with.jenkins.webhook.step1.name.action=输入一个唯一名称。
onboarding.tutorial.with.jenkins.webhook.bitbucket.step1.url.label=URL
onboarding.tutorial.with.jenkins.webhook.bitbucket.step1.url.action=输入以下 URL，替换对应令牌：
onboarding.tutorial.with.jenkins.webhook.bitbucket.step1.url.warning=需要在 Jenkins 配置中指定 Bitbucket 服务器 URL。注意结尾是否没写 "/"，或者有多余的 "/"。
onboarding.tutorial.with.jenkins.webhook.github.step1.url.label=URL
onboarding.tutorial.with.jenkins.webhook.github.step1.url.action=输入 Jenkins 实例网址，添加如下路径：
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.url_with_branches.label=URL
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.url_with_branches.action=如果以下网址，根据需要替换 *** 之间的值：
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.url_no_branches.label=URL
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.url_no_branches.action=输入前一步记下的 URL。
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.secret_token.label=密钥令牌
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.secret_token.action=输入前一步记下的令牌。
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.sentence=对应 {events}，确认对以下选型进行检查：
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.sentence.events=事件
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.sentence=在 {triggers} 下，选择 {option} 确认选中了以下选项：
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.sentence.triggers=触发器
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.sentence.option=从触发器列表中选择
onboarding.tutorial.with.jenkins.webhook.github.step2.sentence=对应 {events} 选择 {option}，检查如下选项：
onboarding.tutorial.with.jenkins.webhook.github.step2.sentence.events=希望哪些事件触发 Webhook？
onboarding.tutorial.with.jenkins.webhook.github.step2.sentence.option=选择独立事件
onboarding.tutorial.with.jenkins.webhook.gitlab.step2.sentence=在 {trigger} 下检查如下内容：
onboarding.tutorial.with.jenkins.webhook.gitlab.step2.sentence.trigger=触发器
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.repo.label=仓库
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.repo.action=推送
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.pr.label=拉取请求
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.pr.action=打开
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.repo.label=仓库
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.repo.action=推送
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.pr.label=拉取请求
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.pr.action=创建
onboarding.tutorial.with.jenkins.webhook.github.step2.repo=推送
onboarding.tutorial.with.jenkins.webhook.github.step2.pr=拉取请求
onboarding.tutorial.with.jenkins.webhook.gitlab.step2.repo=推送事件
onboarding.tutorial.with.jenkins.webhook.gitlab.step2.mr=合并请求事件
onboarding.tutorial.with.jenkins.webhook.github.step3.sentence=点击 {add_webhook}.
onboarding.tutorial.with.jenkins.webhook.github.step3.sentence.add_webhook=添加 Webhook
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step3.sentence=点击 {save}。
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step3.sentence.save=保存
onboarding.tutorial.with.jenkins.webhook.bitbucket.step3.sentence=点击 {create}.
onboarding.tutorial.with.jenkins.webhook.bitbucket.step3.sentence.create=创建
onboarding.tutorial.with.jenkins.webhook.gitlab.step3.sentence=点击 {add_webhook}。
onboarding.tutorial.with.jenkins.webhook.gitlab.step3.sentence.add_webhook=添加 Webhook
onboarding.tutorial.with.jenkins.jenkinsfile.title=创建 Jenkinsfile
onboarding.tutorial.with.jenkins.jenkinsfile.jenkinsfile_step.sentence=在仓库中新建 {file} 文件，复制以下代码：
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.replace.sentence=确认把 {default} 修改成 {in_jenkins} 实际使用的 Maven 名称。
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.replace.sentence.default=默认 Maven
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.replace.sentence.in_jenkins=使用 Jenkins
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help1.sentence=想要查看 Jenkins 中 Maven 工具的名称，访问 {path}。
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help1.sentence.path=管理 Jenkins > 全局工具配置
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help2.sentence=名称位于 {path} 部分，{name} 字段。
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help2.sentence.path=Maven > Maven 安装
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help2.sentence.name=名称
onboarding.tutorial.with.jenkins.jenkinsfile.gradle.step2.sentence=把以下内容添加至 {file} 文件：
onboarding.tutorial.with.jenkins.jenkinsfile.dotnet.build_agent=选择构建代理。
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.title.sentence=前提：添加 {default_msbuild} 工具
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.title.sentence.default_msbuild=MSBuild
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.info=每个 Jenkins 实例只需要配置一次。
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step1.sentence=在 Jenkins 中，确认安装好 {msbuild}。
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step1.sentence.msbuild=MSBuild 插件
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step2.sentence=进入 {path}.
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step2.sentence.path=管理 Jenkins > 全局工具配置
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence=在 {msbuild} 下，点击 {add_msbuild}，设置一个 {name}，最后一步会用到。参考 {msbuild_plugin} 文档了解如何安装：
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence.msbuild=MSBuild
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence.msbuild_plugin=MSBuild 插件
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence.add_msbuild=添加 MSBuild
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence.name=名称
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.title.sentence=前提：添加一个 {default_scanner} 工具
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.title.sentence.default_scanner=MSBuild 版本的 SonarScanner
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.info=每个 Jenkins 实例只需要安装一次，或者需要不同版本的扫描器。
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step1.sentence=在 Jenkins 里，进入 {path}。
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step1.sentence.path=管理 Jenkins > 全局工具配置
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step2.sentence=在 {default_scanner} 下，点击 {add_scanner_for_msbuild}
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step2.sentence.default_scanner=MSBuild 版本的 SonarScanner
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step2.sentence.add_scanner_for_msbuild=为 MSBuild 添加 SonarScanner
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step3.sentence=选择一个 {name}，最后一步需要使用：
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step3.sentence.name=名称
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step4.sentence=选择 {install_auto}
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step4.sentence.install_auto=自动安装
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step5.sentence=在 {install_from} 下选择项目需要的对应 .NET Core 扫描器。
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step5.sentence.install_from=从 GitHub 安装
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step5.sentence.install_auto=自动安装
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.replace.sentence=确认把 {default} 修改为 {in_jenkins} 实际使用的 SonarQube Scanner 工具对应的名称。
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.replace.sentence.default=SonarScanner
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.replace.sentence.in_jenkins=使用 Jenkins
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help1.sentence=想要查看 Jenkins 中 SonarQube Scanner 工具的名称，访问 {path}。
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help1.sentence.path=管理 Jenkins > 全局工具配置
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help2.sentence=名称位于 {path} 部分，{name} 字段。
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help2.sentence.path=SonarQube Scanner > SonarQube Scanner 安装
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help2.sentence.name=名称
onboarding.tutorial.with.jenkins.jenkinsfile.cfamilly.agent_setup=假设 Jenkins 代理已经安装了构建项目所需的工具。
onboarding.tutorial.with.azure_pipelines.os=客户端的宿主是什么？
onboarding.tutorial.with.azure_pipelines.architecture=代理对应了什么架构?
onboarding.tutorial.with.azure_pipelines.title=使用 Azure DevOps 流水线分析项目
onboarding.tutorial.with.azure_pipelines.ExtensionInstallation.title=为 Azure DevOps 服务器安装 SonarQube 扩展
onboarding.tutorial.with.azure_pipelines.ExtensionInstallation.sentence=进入 Azure DevOps 服务器实例，进入 Visual Studio 市场，点击 {button} 按钮安装 {link}。
onboarding.tutorial.with.azure_pipelines.ExtensionInstallation.sentence.link=SonarQube 扩展
onboarding.tutorial.with.azure_pipelines.ExtensionInstallation.sentence.button=免费获取
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.title=添加一个 SonarQube 服务终端
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step1.sentence=进入 Azure DevOps 服务器，进入 {menu}
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step1.sentence.menu=项目配置 > 服务连接
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step2.sentence=添加新服务连接类型 {type}
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step2.sentence.type=SonarQube
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step3.sentence=输入好记的连接名称
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step4.sentence=输入 SonarQube 服务器 url：{url} {button}
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step5.sentence=输入建好的令牌，或新生成一个令牌
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step6.sentence=创建服务链接
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.title=配置分支分析
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.info=下面的步骤假设正在使用 Azure 流水线经典编辑器。参考 {doc_link} 中的 yaml 相关配置。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.info.doc_link=Azure DevOps 集成页面
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.sentence=使用 Azure DevOps，创建或修改 {pipeline} 为代理启用构建封装。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.script.sentence=为代理添加 {task} 任务，下载解压构建封装。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.win.sentence.task=PowerShell 脚本
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.nix.sentence.task=Bash 脚本
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.win.sentence.inline=内联
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.nix.sentence.inline=内联
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.ccpp.sentence=在构建任务 {before} 添加新 {task} 任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare_additional.ccpp=在 {advanced} 部分的 {additional}，添加设置输出目录的新属性，构建封装会用于输出结果：{property} {button}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare_additional.ccpp.additional=更多参数
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare_additional.ccpp.advanced=高级
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build.ccpp.sentence=添加或修改 {task} 任务。执行分析时，应该通过命令行进行构建，这样就可以使用构建封装处理。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build.ccpp.sentence.task=构建命令行
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_script.ccpp.sentence=运行 {button_wrapper} 可执行文件。传递参数 (1) 作为输出目录配置到前面的任务，(2) 通过命令执行一次完整的项目构建 (不能使用增量构建)。示例：
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_script.ccpp.sentence.build_wrapper=构建封装
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.ccpp.sentence=在构建任务 {after} 添加新 {task} 任务。要在前面的任务完成后立即运行，不需要在执行分析之前对运行环境进行修改。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.sentence=在 Azure DevOps，创建或编辑 {pipeline} 并创建 {task} 任务 {before} 构建任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.sentence.pipeline=构建流水线
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.sentence.task=准备分析配置
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.sentence.before=然后
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.endpoint.sentence=选择第 2 步中创建的 {endpoint}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.endpoint.sentence.endpoint=SonarQube 服务器终端
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis=在 {section} 下面，选择 {run_analysis_value}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.section=选择执行分析的方式
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.dotnet=集成 MSBuild
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.maven=集成 Maven 或 Gradle
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.gradle=集成 Maven 或 Gradle
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.cpp=使用独立扫描器
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.objectivec=使用独立扫描器
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.other=集成独立的分析器
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.manual.sentence=选择 {mode} 模式
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.manual.sentence.mode=手工配置
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.sentence=添加 {task} 任务 {after} 构建任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.sentence.task=执行代码分析
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.sentence.after=使用之前的
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.key.sentence=在项目标识控件中，输入 {key} {button}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.key.sentence.project_key=项目标识
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.advanced_properties.sentence=展开 {section} 替换 {properties} 使用下面配置
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.advanced_properties.sentence.section=高级章节
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.advanced_properties.sentence.properties=附加配置
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.title=添加新 Java 工具安装任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.sentence=进入 {field}，选择 {value}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.java_version=JDK 版本
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.or_higher=(及以上)
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.java_architecture=JDK 架构
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.java_source=JDK 源码
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.pre-installed=预安装
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java=编辑或创建新 {0} 任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java.settings.sentence=在 {section} 下，检查 {option}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java.settings.sentence.section=代码分析
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java.settings.sentence.option=执行 SonarQube 或 SonarCloud 分析
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.publish_qg.sentence=添加 {task} 任务，把 SonarQube 质量门禁结果发布到你的构建流水线简介中
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.publish_qg.info.sentence1=这个任务可能会增加你的构建时间，因为流水线会等待 SonarQube 执行分析报告。强烈推荐，但是属于可选项。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.publish_qg.sentence.task=公共质量门禁结果
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.sentence=在流水线标签下，选中 {continuous_integration} 选择所有需要自动执行 SonarQube 分析的分支
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.sentence.tab=触发器
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.sentence.continuous_integration=启用持续集成
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.no_branches.sentence=在流水线的 {tab} 标签下，选中 {continuous_integration} 选择主干分支
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.no_branches.sentence.tab=触发器
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.no_branches.sentence.continuous_integration=启用持续集成
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.branch_protection=如果希望拉取请求会自动分析，并在质量门禁失败时不自动执行合并，可以参考 {link}。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.branch_protection.link=文档
onboarding.tutorial.no_scan_rights=无权分析此项目。请联系项目管理员。
branches.branch=分支
branches.main_branch=主分支
branches.pr=PR
branches.see_the_pr=查看 PR
branches.see_the_pr_on_x=查看 PR {0}
branch_like_navigation.manage=管理分支和拉取请求
branch_like_navigation.search_for_branch_like=搜索分支或拉取请求...
branch_like_navigation.list=分支和拉取请求
branch_like_navigation.pull_requests=拉取请求
branch_like_navigation.pull_requests_targeting=拉取请求目标 "{branch}"
branch_like_navigation.orphan_pull_requests=孤儿拉取请求
branch_like_navigation.orphan_pull_requests.tooltip=当拉取请求的基线被删除了，拉取请求就变为了孤儿。
branch_like_navigation.for_merge_into_x_from_y=从 {branch} 合并入 {target}
branch_like_navigation.for_merge_into_x_from_y.title=由 {0} 合并至 {1}
branch_like_navigation.no_branch_support.title=充分利用 SonarQube 的分支分析
branch_like_navigation.no_branch_support.title.pr=充分利用 SonarQube 的分支和 PR 分析
branch_like_navigation.no_branch_support.title.mr=充分利用 SonarQube 的分支和 MR 分析
branch_like_navigation.no_branch_support.content=开发者版可以独立分析项目的每个分支。
branch_like_navigation.no_branch_support.content_x.pr=开发者版本可以分析所有拉取请求并获取对应结果 {0}。你也可以在 SonarQube 中单独分析每个 PR 来观察发布分支的质量。
branch_like_navigation.no_branch_support.content_x.mr=开发者版本可以分析所有合并请求并获取对应结果 {0}。你也可以在 SonarQube 中单独分析每个 MR 来观察发布分支的质量。
branch_like_navigation.only_one_branch.title=了解如何在 SonarQube 中分析分支
branch_like_navigation.only_one_branch.content=快速设置分支分析，为每个分支和拉取请求进行独立分析。
branch_like_navigation.only_one_branch.documentation=分支文档
branch_like_navigation.only_one_branch.pr_analysis=拉取请求分析
branch_like_navigation.tutorial_for_ci=显示如何设置 CI
application.cannot_access_all_child_projects1=浏览项目，需要在应用中访问所有项目的权限。
application.cannot_access_all_child_projects2=请联系项目管理员。
portfolio.has_always_been_x=一直为 {rating}
portfolio.was_x_y=为 {rating} {date}
portfolio.x_in_y={projects} 在 {rating}
portfolio.project_branch=项目分支
portfolio.project_branches=项目分支
portfolio.has_qg_status=质量门禁状态
portfolio.have_qg_status=质量门禁状态
portfolio.empty=视图为空。
portfolio.no_lines_of_code=视图中的所有项目都是空的。
portfolio.not_computed=视图尚未计算。
portfolio.app.empty=空应用。
portfolio.app.no_lines_of_code=应用中的所有项目都是空的。
portfolio.metric_trend=指标趋势
portfolio.lowest_rated_project_branches=评级最低项目分支
portfolio.health_factors=视图健康度因数
portfolio.activity_link=活动
portfolio.measures_link=指标
portfolio.language_breakdown_link=语言分解
portfolio.breakdown=视图分解
portfolio.number_of_projects=项目数量
portfolio.number_of_lines=代码行数
portfolio.details=视图详情
portfolio.details.breakdown=按项目、应用程序和嵌套组合细分
portfolio.metric_domain.security=安全漏洞
portfolio.metric_domain.security_review=安全漏洞审核
portfolio.metric_domain.releasability.help=视图中通过质量门禁的项目等级
portfolio.metric_domain.reliability.help=视图中所有项目的平均可靠性等级
portfolio.metric_domain.vulnerabilities.help=视图中所有项目的平均安全等级
portfolio.metric_domain.security_hotspots.help=每千行代码需要审核或正在审核的安全热点评级。
portfolio.metric_domain.maintainability.help=视图中所有项目平均可维护性等级。
encryption.form_intro=已注册密钥。可以对下面表单的任何参数进行加密：
encryption.form_note=可以修改密钥，但是所有加密的属性都会更新。{moreInformationLink}
encryption.encrypted_value=加密数据
encryption.generate_secret_key=生成密钥
encryption.generate_new_secret_key=生成新密码
encryption.encrypt=加密
encryption.secret_key_description=需要密钥才能加密属性。{moreInformationLink}
encryption.secret_key=密钥
encryption.how_to_use=如何使用
encryption.how_to_use.content1=把密钥存储在服务器的 {secret_file} 。如果想修改文件位置，可以修改 {propreties_file} 中的 {property} 属性。
encryption.how_to_use.content2=需要限制这个文件的权限，只允许拥有者拥有只读权限。
encryption.how_to_use.content3=如果配置 {property} 发生了变化，需要重启服务。
encryption.how_to_use.content4=如果想要加密属性，生成加密后的值，替换存储的原始值（配置文件，命令行）。
users.page=用户
users.page.description=创建管理个人用户
users.page.managed_description={provider} 正在管理你的实例。只允许修改令牌。可以删除本地用户。其他操作都应该在账号供应商操作。可以通过 {link} 了解如何管理用户。
users.page.managed_description.recommendation=我们推荐删除本地用户，确保所有操作都在身份供应商上执行。参考 {link}。
users.page.managing_users=管理用户
users.info=用户
users.deactivate=禁用
users.deactivate_user=禁用用户
users.deactivate_user.confirmation=确认禁用 "{0} ({1})"？
users.delete_user=删除用户个人信息
users.delete_user.help=删除个人信息后，用户账户将无法重新激活。{link}
users.delete_user.help.link=了解更多
users.delete_user.documentation=认证
users.create_user=创建用户
users.create_user.scm_account_new=新 SCM 账号
users.create_user.scm_account_x=SCM 账号 '{0}'
users.update=编辑用户
users.list=用户列表
users.update_user=更新用户
users.cannot_update_delegated_user=无法更新此用户的姓名和邮箱，因为他是由外部账号供应商控制的。
users.minimum_x_characters=最少 {0} 个字符
users.login_already_used=此帐号已使用。请选择另外一个。
users.login_invalid_characters=帐号只能包含字母，数字和 .-_@。
users.login_start_with_letter_or_number=帐号需要以 _ 或字母开头。
users.email=邮箱
users.email.invalid=非法邮箱
users.last_connection=最后连接
users.last_sonarlint_connection=最近 SonarLint 连接
users.last_sonarlint_connection.help_text=SonarLint 最后连接时间显示用户在使用 SonarLint 的连接模式。
users.update_users_groups=修改 {0} 的群组关系
users.view_users_groups=查看 {0} 的群组关系
users.update_groups=修改群组
users.update_groups.saml_enabled=启用 SAML 时，更新群组关系是临时的。用户下次登录时会更新群组关系。
users.view_groups=查看群组
users.manage_user=修改 {0}
users.update_tokens=修改令牌
users.update_tokens_for_x=为用户 {0} 修改令牌
users.user_name=名称
users.add=添加用户
users.remove=删除用户
users.search_description=根据登录账号或姓名搜索用户
users.activity_filter.label=根据活动搜索用户
users.activity_filter.placeholder=所有用户
users.activity_filter.helptext.sonarqube=最近 30 天内连接过 SonarQube 的用户会被视为活跃。
users.activity_filter.helptext.sonarlint=最近 30 天内使用过 SonarLint 的连接模式的用户会被视为活跃。
users.activity_filter.all_users=所有用户
users.activity_filter.active_sonarlint_users=使用 SonartLint 的活跃用户
users.activity_filter.active_sonarqube_users=未使用 SonarLint 的活跃用户
users.activity_filter.inactive_users=不活跃用户
users.tokens=令牌
users.user_X_tokens={user} 的令牌
users.tokens.sure=确认？
users.tokens.sure_X=是否确认回收令牌 {token}？
users.tokens.revoke=回收
users.tokens.revoke_label=回收令牌 {0}
users.tokens.remove_label=删除过期令牌 {0}
users.no_tokens=无令牌
users.generate=生成
users.tokens.PROJECT_ANALYSIS_TOKEN=项目分析令牌
users.tokens.PROJECT_ANALYSIS_TOKEN.short=项目
users.tokens.GLOBAL_ANALYSIS_TOKEN=全局分析令牌
users.tokens.GLOBAL_ANALYSIS_TOKEN.short=全局
users.tokens.USER_TOKEN=用户令牌
users.tokens.USER_TOKEN.short=用户
users.tokens.generate=通用令牌
users.tokens.name=名称
users.tokens.enter_name=输入令牌名称
users.tokens.type=类型
users.tokens.select_type=选择令牌类型
users.tokens.project=项目
users.tokens.select_project=选择项目
users.tokens.expires_in=过期时间
users.tokens.expiration.30=30 天
users.tokens.expiration.90=90 天
users.tokens.expiration.365=1 年
users.tokens.expiration.0=永不过期
users.tokens.new_token_created=创建了新令牌 "{0}"。请立即复制，不会再显示第二次！
users.generate_new_token=生成新令牌
users.new_token=新令牌
users.change_admin_password.page=修改密码
users.change_admin_password.instance_is_at_risk=保护你的 SonarQube 实例
users.change_admin_password.header=正在使用默认的管理员凭证
users.change_admin_password.description=你的 SonarQube 还在使用默认管理员凭证。你必须修改 "admin" 账户的密码，以保证 SonarQube 实例的安全。
users.change_admin_password.form.header=修改 'admin' 用户的密码
users.change_admin_password.form.success=成功修改 admin 用户的密码。
users.change_admin_password.form.continue_to_app=继续使用 SonarQube
users.filter.by=搜索
user_groups.page=群组
user_groups.page.description=创建和管理用户群组。
user_groups.page.group_header=名称
user_groups.page.managed_description={provider} 正在管理你的实例。无法进行修改操作。可以删除本地群组。其他操作都应该在账号供应商中操作。可以通过 {link} 了解如何管理群组。
user_groups.page.managed_description.recommendation=我们推荐删除本地群组，所有操作都应该在身份供应商执行。参考 {link}。
user_groups.page.managing_groups=管理群组
user_groups.anyone.description=任何访问系统的用户都属于此群组。如果未强制认证才能访问系统，分配的权限也会应用于未认证用户。
groups.delete_group=删除群组
groups.delete_group.confirmation=确认删除 "{0}"？
groups.create_group=创建群组
groups.update_group=更新群组
groups.users.edit=修改 {0} 成员
groups.users.view=查看 {0} 成员
groups.edit=编辑 {0}
group_membership.remove_user.error=用户 {0} 不是群组 {1} 的成员
maintenance.page=维护
maintenance.upgrade_failed=升级失败
maintenance.upgrade_failed.text=无法连接数据库，请检查数据库状态和 JDBC 配置。
maintenance.migration_not_supported=不支持迁移
maintenance.migration_not_supported.text=嵌入式数据库不支持迁移。
maintenance.back_up_database=备份数据库
maintenance.back_up_database.1=升级开始后，您将无法再备份数据库或恢复任何丢失的数据。
maintenance.back_up_database.2=只有在备份数据库后才能继续。
maintenance.upgrade_database=升级数据库
maintenance.upgrade_database.1=数据库升级可能花费几分钟时间。
maintenance.upgrade_database.2=升级前必须备份数据。
maintenance.upgrade_database.2.link=SonarQube Server 更新手册
maintenance.upgrade=升级
maintenance.database_migration=数据库迁移
maintenance.database_is_up_to_date=数据库是最新的
maintenance.is_down={instance} 已停机
maintenance.sonarqube_is_down.text=遇到一些问题。请联系系统管理员。
maintenance.try_again=重试
maintenance.is_under_maintenance={instance} 正在维护
maintenance.sonarqube_is_under_maintenance.1=等待过程中，你可以将 {link} 安装到你的 IDE。
maintenance.sonarqube_is_under_maintenance_link.1=SonarLint
maintenance.sonarqube_is_under_maintenance.2=如果你是系统管理员，但是不知道这条信息的含义，请阅读 {link}。
maintenance.sonarqube_is_under_maintenance_link.2=升级指南
maintenance.is_starting={instance} 正在启动
maintenance.is_up={instance} 已启动
maintenance.all_systems_opetational=所有系统都已启动。
maintenance.is_offline={instance} 已离线
maintenance.sonarqube_is_offline.text=SonarQube 无法连接，请联系系统管理员。
maintenance.running.progress=迁移完成率 {completed} / {total}
maintenance.running.estimate=预计完成时间： {date}
indexation.in_progress=SonarQube 正在重新加载项目数据。执行完成前有些项目可能无法使用。
indexation.details_unavailable=执行完成前详情不可用。
indexation.features_partly_available=大部分功能可用。一些详情会在完成后显示。 {link}
indexation.features_partly_available.link=更多
indexation.progression={0}% 完成。
indexation.progression_with_error={0}% 完成，包含 {link}。
indexation.progression_with_error.link=任务失败
indexation.completed=所有项目数据都已重新加载
indexation.completed_with_error=SonarQube 已完成项目数据的重新加载。一些 {link} 导致一些项目还不可用。
indexation.completed_with_error.link=任务失败
indexation.admin_link=参考 {link} 获取更多信息。
indexation.page_unavailable.title.issues=问题页面暂时不可用
indexation.page_unavailable.title.portfolios=视图页面暂时不可用
indexation.page_unavailable.title={componentQualifier} {componentName} 暂时不可用
indexation.page_unavailable.description=数据重新加载后此页面将恢复可用，它将因为 SonarQube 实例中的项目和问题数量的多少而等待一段时间。
indexation.page_unavailable.description.additional_information=可以在这段时间中继续分析项目。
indexation.filter_unavailable.description=执行完成前过滤器不可用。
indexation.learn_more=更多：
indexation.reindexing=重建索引
indexation.filters_unavailable=执行完成前一些过滤不可用。 {link}
indexation.upgrade_survey_link=帮我们提升升级体验。 <link>点击此处分享你的想法。</link>
homepage.current=此为首页。任何时候点击左上角的 Logo 即可到达。
homepage.current.is_default=此页为主页。任何时候都可以点击左上方图标跳转到这里。
homepage.check=将当前页面设置为自己的首页
favorite.action.TRK.add=收藏项目
favorite.action.TRK.remove=取消收藏项目
favorite.action.VW.add=收藏视图
favorite.action.VW.remove=取消收藏视图
favorite.action.SVW.add=收藏子视图
favorite.action.SVW.remove=取消收藏子视图
favorite.action.APP.add=收藏应用
favorite.action.APP.remove=取消收藏应用
favorite.action.TRK.add_x=收藏项目 {0}
favorite.action.TRK.remove_x=取消收藏项目 {0}
favorite.action.VW.add_x=收藏视图 {0}
favorite.action.VW.remove_x=取消收藏视图 {0}
favorite.action.SVW.add_x=收藏子视图 {0}
favorite.action.SVW.remove_x=取消收藏子视图 {0}
favorite.action.APP.add_x=收藏应用 {0}
favorite.action.APP.remove_x=取消收藏应用 {0}
webhooks.page=Webhook
webhooks.create=创建 Webhook
webhooks.delete=删除 Webhook
webhooks.delete.confirm=确认删除 Webhook "{0}"？
webhooks.description0=Webhook 在任务分析完成后提醒外部服务。
webhooks.description1=一个包含 JSON 负载的 HTTP POST 请求会发送给每个设置的 URL。参考 {url}。
webhooks.deliveries.show=显示当前信息
webhooks.show_actions=显示 webhook {0} 的操作
webhooks.deliveries_for_x=当前 {0} 条信息
webhooks.delivery.duration_x=持续：{0}
webhooks.delivery.payload=负载：
webhooks.delivery.response_x=响应：{0}
webhooks.delivery.server_unreachable=服务器无法访问
webhooks.documentation_link=Webhook 文档
webhooks.last_execution=最后信息
webhooks.last_execution.none=没有信息
webhooks.last_execution.open_for_x=打开 {0} 的最后信息
webhooks.latest_delivery_for_x=最后 {0} 条信息
webhooks.maximum_reached=Webhook 个数超过最大限制。你可以更新或删除已有的 Webhook。
webhooks.name=名称
webhooks.name.required=请填写名称。
webhooks.no_result=未定义 Webhook
webhooks.update=更新 Webhook
webhooks.secret=密码
webhooks.secret_header=密码？
webhooks.secret.bad_format=密码必须小于 200 个字符
webhooks.secret.description=如果提供了密码，会用来生成 16 进制（小写）HMAC 摘要，对应值会包含在 'X-Sonar-Webhook-HMAC-SHA256' 头部。
webhooks.secret.description.update=如果为空，会删除所有之前配置的密钥。如果未设置，密钥会保持不变。
webhooks.secret.field_mask.description=因安全原因隐藏。
webhooks.secret.field_mask.link=点击更新密钥
webhooks.url=URL
webhooks.url.bad_format=URL 格式错误。
webhooks.url.bad_protocol=URL 必须以 "http://" 或 "https://" 开始。
webhooks.url.description=接收 Webhook 负载内容的服务器地址，比如："http://my_server/foo"。如果要使用 HTTP Basic 认证，推荐使用 HTTPS 防御中间人攻击。比如："https://myLogin:myPassword@my_server/foo"
webhooks.url.required=URL 是必填项。
component_report.report={0} 报告
component_report.download=下载 {0} 报告 (PDF)
component_report.download.help_text=新代码和质量门禁状态的关键指标
component_report.no_email_to_subscribe=邮件订阅需要输入一个邮件地址。
component_report.subscribe_x=订阅 {0} 报告
component_report.unsubscribe_x=取消订阅 {0} 报告
component_report.unsubscribe=取消订阅报告
component_report.unsubscribe.description=如果不想收到邮件报告，可以点击下面按钮取消订阅。
component_report.subscribe_x_success=订阅成功。你会收到 {1} 的 {0} 报告邮件。
component_report.subscribe_x_success_no_frequency=订阅成功。你将开始收到 {qualifier} 的报告邮件。
component_report.unsubscribe_x_success=订阅成功取消。你不会再收到 {1} 的 {0} 报告邮件。
component_report.unsubscribe_x_success_no_frequency=你已成功取消订阅，不会再接收到 {qualifier} 的PDF报告。
component_report.unsubscribe_success=订阅成功取消。你不会再收到报告邮件。
component_report.unsubscribe.page_title=取消订阅报告
component_report.toggletip.permanent_branches.description=报告仅适用于永久分支。永久分支是指标记为“不活动时保留”的分支。
component_report.toggletip.permanent_branches.documentation_link=访问有关如何启用“非活动时保留”设置的文档
component_regulatory_report.report=监管报告
component_regulatory_report.download=下载监管报告 (.zip)
component_regulatory_report.download.help_text=详细的指标、问题列表和项目配置
component_regulatory_report.dropdown=可下载的报告
guiding.step_x_of_y={1} 的 {0}
mode_tour.name=标准经验和 MQR 之旅
mode_tour.link=通过文档了解更多模型相关的信息
mode_tour.step1.title=欢迎使用 SonarQube Server {version}!
mode_tour.step1.img_alt=可视化两种新模式之间的问题差别。
mode_tour.step1.description=<p1>我们介绍了两种模式 - <b>标准经验</b> 和 <b>多质量规则 (MQR) 模式</b> - 使你和你的团队可以继续使用熟悉的工作流，或探索新的概念。</p1><p>通过这次旅行来了解两者的区别。</p>
mode_tour.step2.title=标准经验
mode_tour.step2.img_alt=可视化标准经验徽章：漏洞，Bug 和异味
mode_tour.step2.description=<p1>标准经验包含使用的规则类型，比如 <b>漏洞</b>, <b>Bugs</b>, 和 <b>异味</b>。每个规则有一个单独的类型和严重级别，可以使用对应的权限进行定制化。</p1><p>此方法侧重于基于独立的软件质量为最受影响的规则分配严重性 (比如，安全，可靠性，可维护性)。</p>
mode_tour.step3.title=多质量规则模式
mode_tour.step3.img_alt=可视化新软件质量徽章：安全，可靠性和可维护性，并且它们关联至相关的标准经验徽章。
mode_tour.step3.description=<p1>新的多质量规则模式目标时更精确的展示一个问题对所有软件质量的影响。</p1><p>通过对一个规则为每个软件质量分配严重性（安全，可靠性，可维护性），替代了原本的类型（漏洞，Bug 和异味）。可以通过合适的权限自定义严重级别。</p><p>此方法确保对所有软件质量的影响是清洗的，不仅影响最严重的方面。</p>
mode_tour.step4.title=切换模式
mode_tour.step4.img_alt=在管理设置中切换标准经验和 MQR 模式。
mode_tour.step4.description=<p1>当在处于 <b>{mode}</b>。</p1><p>可以使用满足的权限在 管理 > 配置 > 通用配置 > 模式 中修改。</p><p>你的实例会使用最近一次升级的软件版本的模式进行启动。</p>
mode_tour.step5.title=可以在帮助部分重播此旅程
application_console.edit=编辑应用
application_console.project_inaccessible=无法访问此项目
application_console.branches=应用分支
application_console.branches.action_x=打开应用分支 {0} 操作
application_console.branches.edit_x=编辑应用分支 {0}
application_console.branches.enable_x=在此分支检查启用项目 {0}
application_console.branches.delete_x=删除应用分支 {0}
application_console.branches.cannot_access_all_child_projects=您必须有权访问此应用程序中的所有项目才能管理分支。
application_console.branches.cancel=取消
application_console.branches.configuration=分支配置
application_console.branches.create=创建分支
application_console.branches.create.verb=创建
application_console.branches.create.help=对于应用程序的每个项目，选择一个将显示在应用程序分支内的项目分支。
application_console.branches.delete=删除分支
application_console.branches.delete.warning_x=是否确认删除 "{0}" ?
application_console.branches.help=跟踪此应用程序项目的主分支以外的分支。
application_console.branches.main_branch=主分支
application_console.branches.update=更新分支
application_console.branches.update.verb=更新
application_console.branches.rename=重命名分支
application_console.branches.no_branches=还没有分支。一旦为此应用程序选择了项目，您就可以创建分支。
application_console.page=编辑定义
application_console.delete_application=删除应用
application_console.recompute=重新计算
application_console.refresh_started=即将重新计算应用
application_console.do_you_want_to_delete=是否确认删除 "{0}"?
views.add=添加
views.all=全部
views.apply=应用
views.by_default=其余所有项目没有分配至 "{0}"
views.by_language=所有项目的语言是
views.by_manual_measure=所有项目的手工描述
views.by_manual_measure.none_available=没有可用的指标。请在“手动指标”页面上创建一个类型为“文本”的手动指标。
views.is=是
views.by_none=以下是手动选择的项目：
views.by_regexp=所有与正则表达式匹配的项目
views.cannot_delete_referred_view=在删除组合“{0}”之前，必须将其从以下组合中删除：
views.collapse=折叠
views.refresh=刷新
views.recompute=重新计算
views.recompute_all=重新计算全部
views.create=创建
views.create_new=创建组合
views.create_success=成功创建组合
views.criteria=条件
views.deleted_metric=<删除的手工指标>
views.deleted_project=删除的项目
views.deleted_server=删除的服务器
views.deleted_view=此组合的定义可能已被删除，一旦组合全部重建，此组合将不再出现。
views.delete_success=已成功删除组合定义“{0}”
views.delete_view=删除
views.delete.project=删除项目
views.delete.subview=删除组合
views.delete.view=删除组合
views.remove_x=删除 {0}
view.refresh.started=所有组合将很快重新计算
view.refresh.started.one=您的组合将很快重新计算
views.do_you_want_to_change_selection_mode=此操作将替换组合“{0}”上的任何现有项目选择。您想继续吗？
views.is_referenced_by=这将自动从其所有上级组合中删除“{0}”
views.do_you_want_to_delete_x=是否确认删除 "{0}"?
views.do_you_want_to_remove_x=是否确认删除 "{0}"?
views.do_you_want_to_delete_subview=是否确认删除组合 "{0}"?
views.do_you_want_to_delete_project_from_view=是否确认删除项目 "{0}" 从组合 "{1}"?
views.do_you_want_to_delete_project_from_subview=是否确认删除项目 "{0}" 从组合 "{1}"?
views.duplicate_key=标识为 "{0}" 的组合已存在
views.edit=编辑
views.edit_subview=编辑 "{0}"
views.edit_view=编辑 "{0}"
views.filter_projects=搜索
views.associate.view.explain=将项目与以下选项之一相关联：
views.associate.subview.explain=将项目与以下选项之一相关联：
views.empty.language=不能为空
views.empty.regexp=不能为空
views.empty=空
views.expand=展开
views.hierarchy=继承
views.invalid.criteria=只能使用一个标准（正则表达式、语言或手动度量）
views.invalid.key=“{0}”无效。仅支持字母、数字、破折号和下划线。
views.invalid.regexp=不是有效的java正则表达式，例如[a-zA-Z]*-[0-9]+
views.invalid.tag_key=不能为空
views.invalid.tag_value=不能为空如果指定数值
views.language.desc=搜索语言
views.language=语言
views.list=组合
views.mode.standard=标准
views.mode.local=引用
views.move=移动
views.move.project=将“{0}”移动到
views.move.select.new.parent.view=选择目的地
views.move.subview=将“{0}”移动到
views.application.branches=选择需要计算的分支
views.new_portfolio=添加组合
views.new_application=添加应用
views.new_child_to=将组合添加到“{0}”
views.new_application_to=将应用添加到“{0}”
views.none=无组合
views.no_project=无项目
views.no_server=无服务器
views.no_server_available=没有可用的服务器
views.open_dashbard=打开仪表板
views.projects_distribution=项目分布
views.projects_distribution.in={count} 自 {rating}
views.projects_distribution.quality_gate={rating}: {count}
views.projects.add=添加项目
views.projects.associate=分配项目给 "{0}"
views.projects.associated=已分配项目
views.referenced_x=引用 {0}
views.structure.nav=组合结构导航菜单
views.projects.by_regexp=所有与正则表达式“{0}”匹配的项目
views.projects.by_tag={0}为{1}的所有项目
views.projects.selection_mode=项目和分支选择模式
views.projects.selection_mode.NONE=无
views.projects.selection_mode.NONE.description=没有项目分支与此项目组合相关联。
views.projects.selection_mode.MANUAL=手工
views.projects.selection_mode.MANUAL.root=手工
views.projects.selection_mode.MANUAL.description=此项目组合仅包含手动选择的项目分支。
views.projects.selection_mode.MANUAL.branches_selection=编辑所选分支
views.projects.selection_mode.MANUAL.branches_selection.description=只有排除在清除之外的分支可供选择
views.projects.selection_mode.REGEXP=通过正则表达式
views.projects.selection_mode.REGEXP.root=通过正则表达式
views.projects.selection_mode.REGEXP.description=此组合包含与{regexp}匹配的每个项目的{branch}分支。
views.projects.selection_mode.REST=所有剩余项目
views.projects.selection_mode.REST.root=所有项目
views.projects.selection_mode.REST.description=此组合包含不属于此层次结构中任何其他子组合、引用的组合或引用的应用程序的每个项目的{branch}分支。
views.projects.selection_mode.TAGS=通过标签
views.projects.selection_mode.TAGS.root=通过标签
views.projects.selection_mode.TAGS.description=此项目组合包含每个项目的{branch}分支，由以下标签标记：{tags}。
views.projects.selection_mode.main_branch=main
views.already_selected_in=“{1}”中已选择“{0}”
views.projects.select_language=语言
views.projects.set=分配项目
views.projects=项目
views.regexp.desc=一个有效的正则表达式，例如“.*Business”，用于匹配以“Business”结尾的项目名称或密钥。
views.regexp=正则
views.remove_project=删除
views.search=搜索
views.set_criteria=设置条件
views.server=服务器
views.structure.name=组合的结构
views.tag.desc=手工指标
views.tag=手工指标
views.update=更新
views.update_success=组合已成功更新
views.view=组合
views.advanced_settings=高级设置
views.key.description=如果指定，则此值将用作密钥，而不是从投资组合的名称生成密钥。
views.key.valid_characters=只能使用字母、数字、破折号、点、冒号和下划线，并且至少有一个非数字。
views.project_already_selected_in_x=已在“{0}”中手动选择
views.project_already_selected.help=确保每个项目/分支在项目组合层次结构中只包含一次。否则，组合计算将失败。请注意，如果使用动态选择模式（通过标记或正则表达式），项目仍可能被多次选择。
views.app_x_already_selected=应用程序“{0}”已手动添加到此层次结构中。
views.app_already_selected.help=确保每个应用程序/分支在投资组合层次结构中只包含一次。否则，组合计算将失败。
portfolio.edit_selection_mode=修改选择模式
portfolio.selection_mode=项目选择模式
portfolio.regexp=正则
portfolio.regexp.description=一个有效的正则表达式，例如“.*Business”，用于匹配以“Business”结尾的项目名称或密钥。
portfolio.tags=选择标签
portfolio.branch=选择分支
portfolio.branch.description=为每个项目选择的分支名称（如果存在）。留空以选择主分支。
portfolio.custom_measure=自定义指标
portfolio.deprecated_custom_measure_mode=“按自定义度量”选择模式已弃用。请改用“根据标签”。
portfolio_console.project_inaccessible=您无权访问此项目
background_task.type.VIEW_REFRESH=组合重计算
governance.x_portfolios={count} 组合
governance.section.releasability=可发布性
governance.section.reliability=可靠性
governance.section.review=安全复审
governance.section.security=安全性
governance.section.maintainability=可维护性
governance.section.application.reliability=Bugs
governance.section.application.security=脆弱性
governance.section.application.security_hotspots_reviewed=复审的热点
governance.section.application.maintainability=代码异味
governance.section.sca=依赖风险
governance.projects=项目
governance.x_projects_failed={0} 项目失败
governance.x_projects_in_y={projectCount} 项目为 {rating}
governance.and=和
governance.has_always_been_x=一直为 {rating}
governance.was=是
governance.not_computed.VW=该组合尚未计算。
governance.not_computed.APP=此应用程序尚未计算。
governance.no_projects.VW=此组合为空。
governance.no_projects.APP=此应用为空。
governance.no_ncloc.VW=此组合仅包含空项目。
governance.no_ncloc.APP=此应用程序仅包含空项目。
governance.show_all=显示全部
governance.no_security_review_rating=尚未重计算
metric.releasability_effort.name=未达到生产就绪状态的项目总数
metric.releasability_effort.description=未准备好生产的项目总数
report.page=执行报告
report.cant_download=您没有查看报告的权限。
report.can_download=您可以将此页面的主要信息打印成PDF文件。
report.configured_globally_note=（全局配置）
report.configuration=高级配置
report.frequency=频率
report.frequency.admin=自定义用于发送该组合的PDF报告的频率。
report.frequency.default=默认
report.frequency.default.description=使用全局配置的值。
report.frequency.daily=每日
report.frequency.daily.description=报告在当天的第一次组合计算期间发送（如果有的话）。
report.frequency.daily.effective=每日
report.frequency.weekly=每周
report.frequency.weekly.description=报告在周一午夜开始的本周第一次组合计算期间发送（如果有的话）。
report.frequency.weekly.effective=周视图
report.frequency.monthly=月度
report.frequency.monthly.description=报告在当月第一次组合计算期间发送（如果有的话），从当月第一天开始。
report.frequency.monthly.effective=每月
report.recipients=其他收件人
report.recipients.admin=添加在SonarQube服务器上没有帐户但仍想获取该组合PDF报告的人的电子邮件地址。
report.work_duration.x_days={0} 天
report.work_duration.one_day=1 天
report.work_duration.x_hours={0} 小时
report.work_duration.one_hour=1 小时
report.work_duration.x_minutes={0} 分钟
report.work_duration.one_minute=1 分钟
report.work_duration.about=~ {0}
report.delete_recipient=删除收件人 {0}
application_settings.page=应用设置
application_settings.report=应用报告设置
application_settings.report.frequency=应用报告频率
portfolios.search=搜索组合...
portfolios.search_in_structure=在结构中搜索...
portfolios.explore_portfolios=浏览组合
portfolios.search_all_portfolios=搜索所有组合
portfolios.create_portfolio=创建组合
portfolios.edit_portfolio=编辑组合
portfolios.empty.title.filtered.favorite=在您的收藏夹中找不到任何符合所选条件的结果。
portfolios.empty.title.filtered.all=我们找不到任何符合所选条件的结果。
portfolios.empty.title.unfiltered.favorite=你还没有最喜欢的组合。
portfolios.empty.title.unfiltered.all=目前还没有组合。
portfolios.empty.description.filtered.favorite=您想在所有组合中搜索吗？
portfolios.empty.description.filtered.all=尝试更改搜索查询以获取一些结果。
portfolios.empty.description.unfiltered.favorite=要轻松访问您感兴趣的组合，请将其标记为收藏夹。
portfolios.empty.description.unfiltered.all=组合概述了每个项目中所有项目的质量。
portfolio_overview.title=概览
portfolio_overview.desciption=为该项目组合选择的项目分支机构的信息摘要。要了解有关如何计算组合评级的更多信息，请参阅{link}。
portfolio_overview.desciption.link=管理组合文档
portfolio_overview.breakdown=组合细分
portfolio_overview.intro=此组合以及其中包含的项目、应用程序和嵌套组合的详细评级列表，您可以浏览。在新代码和整体代码之间切换以查看评级。了解更多关于<link>组合细分</link>的信息。
portfolio_overview.empty=此组合为空。
portfolio_overview.empty.description=将项目和应用程序添加到您的组合定义中，以计算质量指标。
portfolio_overview.no_lines_of_code=此项目组合中的所有项目都是空的
portfolio_overview.not_computed=该组合尚未计算。
portfolio_overview.need_recompute=增加了关于新准则的措施。重新计算组合，查看新的衡量标准。
portfolio_overview.risk.no_measure=尚未计算
portfolio_overview.projects_distribution=项目分布
portfolio_overview.projects_x={0} 先蒙古
portfolio_overview.lines_of_code_x={count} 行代码
portfolio_overview.activity=活动
portfolio_overview.measures=描述
portfolio_overview.language_breakdown=语言细分
portfolio_overview.metric_trend=度量趋势
portfolio_overview.risk=风险
portfolio_overview.overall_code=总体代码
portfolio_overview.new_code=新代码
portfolio_overview.project_branches_x={0} 选择的项目分支
portfolio_overview.project_branches_all=所与选中的项目分支
portfolio_overview.project_branches_rating={rating}中的{link}
portfolio_overview.see_all=查看全部
portfolio_overview.cannot_see_all=一些项目无法访问
portfolio_overview.cannot_see_all.help=您无权访问此项目组合中的所有项目
portfolio_overview.new_code_definition=以下指标显示了新代码（根据您的新代码定义添加或更改的代码）和总体代码的评级。使用{cayc}，您的重点是新代码，以确保您今天编写的代码干净安全。{链接}。
portfolio_overview.new_code_definition.link=了解更多关于新代码与总体代码的信息
portfolio_overview.cayc_definition.link=编码时清理
portfolio_overview.releasability.title=可发布性
portfolio_overview.releasability.description=通过质量门禁与不通过质量门禁的比率。项目的质量门禁可以有新代码和总体代码两个条件。
portfolio_overview.releasability.help=该评级基于您投资组合中所有项目通过质量门禁与失败门禁的比率。项目的质量门禁对新规范和总体规范都有条件。
portfolio_overview.releasability.rating.help=该评级基于通过质量门禁与不通过质量门禁的比率。项目的质量门禁可以有新代码和总体代码两个条件。
portfolio_overview.releasability.portfolio_health=组合健康状况
portfolio_overview.releasability.pagination={0} 中的 {1}
portfolio_overview.releasability.no_failing_projects=没有一个项目的质量门禁不合格。
portfolio_overview.releasability.project_inaccessible=您无权访问任何失败的项目分支。
portfolio_overview.reliability_rating.title=可靠性
portfolio_overview.reliability_rating.description=平均可靠性评级。此域标记代码中的问题，您将获得与预期不同的行为。
portfolio_overview.security_rating.title=安全性
portfolio_overview.security_rating.description=平均安全评级。这个领域的问题标志着黑客的潜在弱点。
portfolio_overview.security_review_rating.title=安全复审
portfolio_overview.security_review_rating.description=平均安全审查评级。此域以热点及其审查状态的形式表示潜在的安全风险。
portfolio_overview.sqale_rating.title=可维护性
portfolio_overview.sqale_rating.description=平均可维护性评级。此域标记代码中的问题将比正常更新更难。
license.activate_offline=离线激活
license.activate_your_license_offline=离线激活您的许可证
license.activation_method.legacy=基于服务器ID的许可证密钥
license.activation_method.offline=离线
license.activation_method.online=在线
license.activation_method=激活方法
license.add_license=添加许可证
license.callout.activated.suggestion=您的SonarQube许可证已激活。您可以完全访问版本中包含的所有功能。
license.callout.activated.title=许可证已成功激活
license.callout.expired.suggestion.grace_period=我们已经给您一个{days}-天宽限期，这样您就可以继续使用所有功能而不会中断。要保持完全访问权限，请设置新许可证或刷新当前许可证
license.callout.expired.suggestion=设置新许可证或续订后刷新当前许可证
license.callout.expired.title=您的许可证已过期
license.callout.loc.suggestion=为了继续使用该产品，请减少代码行数，或联系销售人员添加更多代码
license.callout.loc.title=您已超过代码行数限制
license.callout.non-official.link-text=SonarQube Server 官方发行版
license.callout.non-official.suggestion=不支持在SonarQube Server的非官方发行版上安装商业版。因此，所有分析都暂停了。请下载并安装SonarSource提供的{link}。
license.callout.non-official.title=您正在使用非官方的SQS发行版
license.cant_connect_to_license_server=SonarQube无法连接到许可证服务器
license.disabled_by_sonar.popover=Sonar已禁用该许可证。
license.disabled_by_sonar=被 Sonar 禁用
license.enter_your_license_key_for_x=输入 {0} 的许可证密钥
license.enter_your_license_key=输入您的许可证密钥
license.exceeded_loc.popover=您已超过LOC（代码行数）的限制。
license.exceeded_loc=超过LOC
license.expiration_date=过期日期
license.expired.popover=设置新许可证或续订后刷新当前许可证
license.expired=过期
license.expires_soon.popover=您的许可证将于 {date} 过期
license.expires_soon=即将过期
license.feature_name=许可证管理器
license.features.availability.available=可用的
license.features.availability.not_available=不可用
license.features.availability=可用的
license.features.enablement.activable=启用功能
license.features.enablement.enabled=启用
license.features.enablement.try_now=立即试用
license.features.enablement=启用
license.features.feature_name=功能名称
license.features.feature.sca=SonarQube 高级安全性
license.features=特征
license.how_to_fix_it=如何修复它
license.i_accept_the_terms_and_conditions_with_link=我接受 {link}
license.i_accept_the_terms_and_conditions=我接受 SonarQube 条款和条件
license.is_supported=支持包含
license.last_refresh=上次刷新时间：
license.learn_more_or_activate_offline=了解有关此问题的更多信息以及如何修复它，或在脱机模式下激活许可证
license.license_administration=许可证管理
license.license_information=许可信息
license.license_key=许可证密钥
license.license_usage=许可证使用
license.ncloc_lines_analyzed=当前分析 {ncloc} 行数
license.no_license.not_added=您似乎还没有添加任何许可证。
license.no_license.reach_out=如果您已购买许可证但需要新密钥，请联系 {emailLink}
license.no_license=你还没有许可证
license.not_production_database_warning=此许可证密钥仅对嵌入式数据库有效，应将其视为一次性的。考虑配置一个外部数据库以供长期使用，并请求一个新的许可证密钥。
license.notification_threshold=通知阈值：
license.notification_threshold.lines_of_code=剩余 {ncloc} 代码行
license.offline.obtain_req_file.button=下载 .req 文件
license.offline.obtain_req_file.helptext=点击从 SonarQube 服务器下载您的 .req 请求文件
license.offline.obtain_req_file=从 SonarQube 服务器下载 .req 请求文件
license.offline.upload_lic_file.button=上传 .lic 文件
license.offline.upload_lic_file.helptext=单击以将 .lic 文件上传到 SonarQube 服务器并激活您的许可证
license.offline.upload_lic_file=将 .lic 文件上传到 SonarQube 服务器
license.offline.upload_req_file.button=上传 .req 文件
license.offline.upload_req_file.helptext=单击打开脱机许可证门户。将 .req 文件上传到其中，然后再加载 .lic 文件作为回报。然后向导
license.offline.upload_req_file=上传您的 .req 请求文件，下载您的 .lic 许可证文件
license.prompt.description=您必须设置许可证才能执行新的分析。{url}.
license.prompt.link=转到许可证页面
license.prompt.title=需要许可证
license.refresh_license=刷新许可证
license.refresh_limit_hit=已达到每日刷新限制10次
license.refresh_your_license_offline=离线刷新许可证
license.replace_license=设置新许可证
license.request_trial_license=申请试用许可证
license.serverId=服务器 ID
license.set_license=设置许可证
license.set_or_update=设置或更新您的SonarQube服务器许可证。
license.set_up_a_license=设置许可证
license.start_date=开始日期
license.support=如需支持，请查看 {docLink} 文档或发送电子邮件至 {emailLink}。
license.support_page.browse_resources=浏览在线资源：
license.support_page.create_ticket=创建适当类型的工单（别忘了上传您的{file}）
license.support_page.connect_to_portal=连接到 {link}
license.support_page.download=下载
license.support_page.get_support_info_file=得到你的 {file}
license.support_page.need_help=需要 SonarQube 生态系统的帮助吗？
license.support_page.not_finding_help=找不到你需要的帮助？
license.support_page.not_supported=不支持此实例。请联系SonarSource获取支持。
license.support_page.sonarqube_documentation=SonarQube 文档
license.support_page.sonarsource_products=SonarSource 产品
license.support_page.support_info_file=<b>支持信息文件</b>
license.support_page.support_page_link=支持页面
license.support_page.support_page_read=阅读后，您可以随时创建工单来报告您的问题、提出问题或建议更改：
license.support_page.support_page_text=在我们的{link}上，您可以找到有关 SonarSource 服务台的所有信息，包括如何创建工单。
license.support_page.support_portal=SonarSource 支持门户
license.support_page.supported=此 SonarQube 服务器由您的 SonarSource 支持订阅覆盖。
license.support_page.title=支持
license.terms_and_conditions=条款和条件
license.threshold.edit=编辑通知阈值
license.threshold.explanation=一旦达到限制，您将收到一封电子邮件，通知您正在接近授权分析代码行的限制。
license.threshold.tooltip=这是您的通知阈值
license.threshold.warning_threshold.description=当剩余可供分析的代码行数少于通知阈值时，发送电子邮件通知。
license.threshold.warning_threshold.name=门槛
license.title=SonarQube Server 许可证
license.type=类型
license.unset_license.confirm.1=您即将取消设置 SonarQube Server 许可证。
license.unset_license.confirm.2=此操作无法撤消，并将立即从您的实例中删除付费功能，直到您再次设置有效的许可证。
license.unset_license.confirm.3=您确定要继续吗？
license.unset_license.success=许可证已成功取消设置
license.unset_license=取消许可证
license.up_to_ncloc=达到 {ncloc}
license.usage.description.subdued=为了确定每个项目的贡献程度，许可证考虑了该项目最大分支上的代码行数。测试代码行数不计入您的许可证使用量。
license.valid=有效
license.warning_threshold.success=警告阈值已成功保存。
